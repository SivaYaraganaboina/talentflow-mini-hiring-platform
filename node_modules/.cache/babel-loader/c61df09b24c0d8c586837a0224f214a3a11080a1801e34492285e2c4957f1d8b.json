{"ast":null,"code":"import _objectSpread from \"C:/Users/shiva/Desktop/talentflow-mini-hiring-platform/TalentFlow/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport statuses from \"@bundled-es-modules/statuses\";\nimport { Headers as HeadersPolyfill } from \"headers-polyfill\";\nconst {\n  message\n} = statuses;\nconst kSetCookie = Symbol(\"kSetCookie\");\nfunction normalizeResponseInit() {\n  let init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const status = (init === null || init === void 0 ? void 0 : init.status) || 200;\n  const statusText = (init === null || init === void 0 ? void 0 : init.statusText) || message[status] || \"\";\n  const headers = new Headers(init === null || init === void 0 ? void 0 : init.headers);\n  return _objectSpread(_objectSpread({}, init), {}, {\n    headers,\n    status,\n    statusText\n  });\n}\nfunction decorateResponse(response, init) {\n  if (init.type) {\n    Object.defineProperty(response, \"type\", {\n      value: init.type,\n      enumerable: true,\n      writable: false\n    });\n  }\n  const responseCookies = init.headers.get(\"set-cookie\");\n  if (responseCookies) {\n    Object.defineProperty(response, kSetCookie, {\n      value: responseCookies,\n      enumerable: false,\n      writable: false\n    });\n    if (typeof document !== \"undefined\") {\n      const responseCookiePairs = HeadersPolyfill.prototype.getSetCookie.call(init.headers);\n      for (const cookieString of responseCookiePairs) {\n        document.cookie = cookieString;\n      }\n    }\n  }\n  return response;\n}\nexport { decorateResponse, kSetCookie, normalizeResponseInit };","map":{"version":3,"names":["statuses","Headers","HeadersPolyfill","message","kSetCookie","Symbol","normalizeResponseInit","init","arguments","length","undefined","status","statusText","headers","_objectSpread","decorateResponse","response","type","Object","defineProperty","value","enumerable","writable","responseCookies","get","document","responseCookiePairs","prototype","getSetCookie","call","cookieString","cookie"],"sources":["C:\\Users\\shiva\\Desktop\\talentflow-mini-hiring-platform\\TalentFlow\\node_modules\\msw\\src\\core\\utils\\HttpResponse\\decorators.ts"],"sourcesContent":["import statuses from '@bundled-es-modules/statuses'\nimport { Headers as HeadersPolyfill } from 'headers-polyfill'\nimport type { HttpResponseInit } from '../../HttpResponse'\n\nconst { message } = statuses\n\nexport const kSetCookie = Symbol('kSetCookie')\n\nexport interface HttpResponseDecoratedInit extends HttpResponseInit {\n  status: number\n  statusText: string\n  headers: Headers\n}\n\nexport function normalizeResponseInit(\n  init: HttpResponseInit = {},\n): HttpResponseDecoratedInit {\n  const status = init?.status || 200\n  const statusText = init?.statusText || message[status] || ''\n  const headers = new Headers(init?.headers)\n\n  return {\n    ...init,\n    headers,\n    status,\n    statusText,\n  }\n}\n\nexport function decorateResponse(\n  response: Response,\n  init: HttpResponseDecoratedInit,\n): Response {\n  // Allow to mock the response type.\n  if (init.type) {\n    Object.defineProperty(response, 'type', {\n      value: init.type,\n      enumerable: true,\n      writable: false,\n    })\n  }\n\n  const responseCookies = init.headers.get('set-cookie')\n\n  if (responseCookies) {\n    // Record the raw \"Set-Cookie\" response header provided\n    // in the HeadersInit. This is later used to store these cookies\n    // in cookie jar and return the right cookies in the \"cookies\"\n    // response resolver argument.\n    Object.defineProperty(response, kSetCookie, {\n      value: responseCookies,\n      enumerable: false,\n      writable: false,\n    })\n\n    // Cookie forwarding is only relevant in the browser.\n    if (typeof document !== 'undefined') {\n      // Write the mocked response cookies to the document.\n      // Use `headers-polyfill` to get the Set-Cookie header value correctly.\n      // This is an alternative until TypeScript 5.2\n      // and Node.js v20 become the minimum supported version\n      // and getSetCookie in Headers can be used directly.\n      const responseCookiePairs = HeadersPolyfill.prototype.getSetCookie.call(\n        init.headers,\n      )\n\n      for (const cookieString of responseCookiePairs) {\n        // No need to parse the cookie headers because it's defined\n        // as the valid cookie string to begin with.\n        document.cookie = cookieString\n      }\n    }\n  }\n\n  return response\n}\n"],"mappings":";AAAA,OAAOA,QAAA,MAAc;AACrB,SAASC,OAAA,IAAWC,eAAA,QAAuB;AAG3C,MAAM;EAAEC;AAAQ,IAAIH,QAAA;AAEb,MAAMI,UAAA,GAAaC,MAAA,CAAO,YAAY;AAQtC,SAASC,sBAAA,EAEa;EAAA,IAD3BC,IAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAyB,CAAC;EAE1B,MAAMG,MAAA,GAAS,CAAAJ,IAAA,aAAAA,IAAA,uBAAAA,IAAA,CAAMI,MAAA,KAAU;EAC/B,MAAMC,UAAA,GAAa,CAAAL,IAAA,aAAAA,IAAA,uBAAAA,IAAA,CAAMK,UAAA,KAAcT,OAAA,CAAQQ,MAAM,KAAK;EAC1D,MAAME,OAAA,GAAU,IAAIZ,OAAA,CAAQM,IAAA,aAAAA,IAAA,uBAAAA,IAAA,CAAMM,OAAO;EAEzC,OAAAC,aAAA,CAAAA,aAAA,KACKP,IAAA;IACHM,OAAA;IACAF,MAAA;IACAC;EAAA;AAEJ;AAEO,SAASG,iBACdC,QAAA,EACAT,IAAA,EACU;EAEV,IAAIA,IAAA,CAAKU,IAAA,EAAM;IACbC,MAAA,CAAOC,cAAA,CAAeH,QAAA,EAAU,QAAQ;MACtCI,KAAA,EAAOb,IAAA,CAAKU,IAAA;MACZI,UAAA,EAAY;MACZC,QAAA,EAAU;IACZ,CAAC;EACH;EAEA,MAAMC,eAAA,GAAkBhB,IAAA,CAAKM,OAAA,CAAQW,GAAA,CAAI,YAAY;EAErD,IAAID,eAAA,EAAiB;IAKnBL,MAAA,CAAOC,cAAA,CAAeH,QAAA,EAAUZ,UAAA,EAAY;MAC1CgB,KAAA,EAAOG,eAAA;MACPF,UAAA,EAAY;MACZC,QAAA,EAAU;IACZ,CAAC;IAGD,IAAI,OAAOG,QAAA,KAAa,aAAa;MAMnC,MAAMC,mBAAA,GAAsBxB,eAAA,CAAgByB,SAAA,CAAUC,YAAA,CAAaC,IAAA,CACjEtB,IAAA,CAAKM,OACP;MAEA,WAAWiB,YAAA,IAAgBJ,mBAAA,EAAqB;QAG9CD,QAAA,CAASM,MAAA,GAASD,YAAA;MACpB;IACF;EACF;EAEA,OAAOd,QAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}