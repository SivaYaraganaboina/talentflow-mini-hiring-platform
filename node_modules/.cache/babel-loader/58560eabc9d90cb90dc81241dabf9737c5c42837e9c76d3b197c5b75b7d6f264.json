{"ast":null,"code":"// Simple mock data service with slugs\nexport const mockJobs = [{\n  id: '1',\n  title: 'Senior Frontend Developer - TechCorp',\n  slug: 'senior-frontend-developer-techcorp',\n  description: 'We are looking for a talented Senior Frontend Developer to lead our UI/UX initiatives. This role involves architecting scalable React applications, mentoring junior developers, and collaborating with design teams on cutting-edge projects.',\n  location: 'San Francisco, CA',\n  status: 'active',\n  tags: ['React', 'TypeScript', 'Frontend', 'Leadership'],\n  order: 1,\n  createdAt: new Date().toISOString(),\n  updatedAt: new Date().toISOString()\n}, {\n  id: '2',\n  title: 'Backend Developer - DataFlow',\n  slug: 'backend-developer-dataflow',\n  description: 'Join our backend team to build scalable APIs and microservices. Experience with Node.js, Python, or Go required. Work on high-performance systems serving millions of users.',\n  location: 'New York, NY',\n  status: 'active',\n  tags: ['Node.js', 'Backend', 'API', 'Microservices'],\n  order: 2,\n  createdAt: new Date().toISOString(),\n  updatedAt: new Date().toISOString()\n}, {\n  id: '3',\n  title: 'Full Stack Developer - CloudTech',\n  slug: 'full-stack-developer-cloudtech',\n  description: 'Looking for a full-stack developer to work on our cloud platform. Experience with React, Node.js, and AWS required. Build the next generation of cloud infrastructure.',\n  location: 'Remote',\n  status: 'archived',\n  tags: ['React', 'Node.js', 'AWS', 'Cloud'],\n  order: 3,\n  createdAt: new Date().toISOString(),\n  updatedAt: new Date().toISOString()\n}, {\n  id: '4',\n  title: 'DevOps Engineer - InfraCorp',\n  slug: 'devops-engineer-infracorp',\n  description: 'Build and maintain our cloud infrastructure. Experience with Kubernetes, Docker, and CI/CD pipelines required. Help scale our platform to handle millions of requests.',\n  location: 'Seattle, WA',\n  status: 'active',\n  tags: ['Kubernetes', 'Docker', 'DevOps', 'AWS'],\n  order: 4,\n  createdAt: new Date().toISOString(),\n  updatedAt: new Date().toISOString()\n}, {\n  id: '5',\n  title: 'Mobile App Developer - AppWorks',\n  slug: 'mobile-app-developer-appworks',\n  description: 'Create amazing mobile experiences using React Native. Work on both iOS and Android platforms. Experience with native mobile development preferred.',\n  location: 'Austin, TX',\n  status: 'active',\n  tags: ['React Native', 'Mobile', 'iOS', 'Android'],\n  order: 5,\n  createdAt: new Date().toISOString(),\n  updatedAt: new Date().toISOString()\n}];\nexport const mockCandidates = [{\n  id: '1',\n  name: 'John Doe',\n  email: 'john.doe@email.com',\n  phone: '+1-555-0123',\n  resume: 'John_Doe_Resume.pdf',\n  status: 'applied',\n  stage: 'applied',\n  jobId: '1',\n  appliedAt: new Date().toISOString(),\n  timeline: [{\n    id: 'timeline-1',\n    stage: 'applied',\n    timestamp: new Date().toISOString(),\n    notes: 'Application submitted'\n  }]\n}, {\n  id: '2',\n  name: 'Jane Smith',\n  email: 'jane.smith@email.com',\n  phone: '+1-555-0124',\n  resume: 'Jane_Smith_Resume.pdf',\n  status: 'screen',\n  stage: 'screen',\n  jobId: '1',\n  appliedAt: new Date().toISOString(),\n  timeline: [{\n    id: 'timeline-2',\n    stage: 'screen',\n    timestamp: new Date().toISOString(),\n    notes: 'Moved to screen stage'\n  }]\n}, {\n  id: '3',\n  name: 'Mike Johnson',\n  email: 'mike.johnson@email.com',\n  phone: '+1-555-0125',\n  resume: 'Mike_Johnson_Resume.pdf',\n  status: 'tech',\n  stage: 'tech',\n  jobId: '2',\n  appliedAt: new Date().toISOString(),\n  timeline: [{\n    id: 'timeline-3',\n    stage: 'tech',\n    timestamp: new Date().toISOString(),\n    notes: 'Technical interview scheduled'\n  }]\n}];\nexport const mockAssessments = [{\n  id: 'assessment-1',\n  jobId: '1',\n  title: 'Frontend Developer Assessment',\n  description: 'This assessment evaluates technical skills and problem-solving abilities for frontend development.',\n  sections: [{\n    id: 'section-1',\n    title: 'Technical Skills',\n    questions: [{\n      id: 'q-1',\n      type: 'single-choice',\n      title: 'What is React?',\n      description: 'Choose the best answer',\n      required: true,\n      options: ['A JavaScript library', 'A programming language', 'A database', 'A framework']\n    }, {\n      id: 'q-2',\n      type: 'short-text',\n      title: 'Explain the concept of virtual DOM',\n      description: 'Provide a brief explanation',\n      required: true,\n      validation: {\n        maxLength: 200\n      }\n    }]\n  }],\n  createdAt: new Date().toISOString(),\n  updatedAt: new Date().toISOString()\n}];\n\n// Simple API simulation\nexport const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\nexport const jobsApi = {\n  getJobs: async () => {\n    await delay(500);\n    return {\n      data: mockJobs,\n      pagination: {\n        page: 1,\n        pageSize: 10,\n        total: mockJobs.length,\n        totalPages: 1\n      }\n    };\n  },\n  createJob: async job => {\n    await delay(300);\n    const newJob = {\n      ...job,\n      id: Date.now().toString(),\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    };\n    mockJobs.push(newJob);\n    return newJob;\n  },\n  updateJob: async (id, updates) => {\n    await delay(300);\n    const index = mockJobs.findIndex(job => job.id === id);\n    if (index >= 0) {\n      mockJobs[index] = {\n        ...mockJobs[index],\n        ...updates,\n        updatedAt: new Date().toISOString()\n      };\n      return mockJobs[index];\n    }\n    throw new Error('Job not found');\n  }\n};\nexport const candidatesApi = {\n  getCandidates: async () => {\n    await delay(500);\n    return {\n      data: mockCandidates,\n      pagination: {\n        page: 1,\n        pageSize: 20,\n        total: mockCandidates.length,\n        totalPages: 1\n      }\n    };\n  },\n  createCandidate: async candidate => {\n    await delay(300);\n    const newCandidate = {\n      ...candidate,\n      id: Date.now().toString(),\n      appliedAt: new Date().toISOString()\n    };\n    mockCandidates.push(newCandidate);\n    return newCandidate;\n  },\n  updateCandidate: async (id, updates) => {\n    await delay(300);\n    const index = mockCandidates.findIndex(candidate => candidate.id === id);\n    if (index >= 0) {\n      mockCandidates[index] = {\n        ...mockCandidates[index],\n        ...updates\n      };\n      return mockCandidates[index];\n    }\n    throw new Error('Candidate not found');\n  }\n};\nexport const assessmentsApi = {\n  getAssessment: async jobId => {\n    await delay(300);\n    const assessment = mockAssessments.find(a => a.jobId === jobId);\n    if (!assessment) {\n      throw new Error('Assessment not found');\n    }\n    return assessment;\n  }\n};","map":{"version":3,"names":["mockJobs","id","title","slug","description","location","status","tags","order","createdAt","Date","toISOString","updatedAt","mockCandidates","name","email","phone","resume","stage","jobId","appliedAt","timeline","timestamp","notes","mockAssessments","sections","questions","type","required","options","validation","maxLength","delay","ms","Promise","resolve","setTimeout","jobsApi","getJobs","data","pagination","page","pageSize","total","length","totalPages","createJob","job","newJob","now","toString","push","updateJob","updates","index","findIndex","Error","candidatesApi","getCandidates","createCandidate","candidate","newCandidate","updateCandidate","assessmentsApi","getAssessment","assessment","find","a"],"sources":["C:/Users/shiva/Desktop/talentflow-mini-hiring-platform/TalentFlow/src/services/mockData.ts"],"sourcesContent":["// Simple mock data service with slugs\nexport const mockJobs = [\n  {\n    id: '1',\n    title: 'Senior Frontend Developer - TechCorp',\n    slug: 'senior-frontend-developer-techcorp',\n    description: 'We are looking for a talented Senior Frontend Developer to lead our UI/UX initiatives. This role involves architecting scalable React applications, mentoring junior developers, and collaborating with design teams on cutting-edge projects.',\n    location: 'San Francisco, CA',\n    status: 'active',\n    tags: ['React', 'TypeScript', 'Frontend', 'Leadership'],\n    order: 1,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString()\n  },\n  {\n    id: '2',\n    title: 'Backend Developer - DataFlow',\n    slug: 'backend-developer-dataflow',\n    description: 'Join our backend team to build scalable APIs and microservices. Experience with Node.js, Python, or Go required. Work on high-performance systems serving millions of users.',\n    location: 'New York, NY',\n    status: 'active',\n    tags: ['Node.js', 'Backend', 'API', 'Microservices'],\n    order: 2,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString()\n  },\n  {\n    id: '3',\n    title: 'Full Stack Developer - CloudTech',\n    slug: 'full-stack-developer-cloudtech',\n    description: 'Looking for a full-stack developer to work on our cloud platform. Experience with React, Node.js, and AWS required. Build the next generation of cloud infrastructure.',\n    location: 'Remote',\n    status: 'archived',\n    tags: ['React', 'Node.js', 'AWS', 'Cloud'],\n    order: 3,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString()\n  },\n  {\n    id: '4',\n    title: 'DevOps Engineer - InfraCorp',\n    slug: 'devops-engineer-infracorp',\n    description: 'Build and maintain our cloud infrastructure. Experience with Kubernetes, Docker, and CI/CD pipelines required. Help scale our platform to handle millions of requests.',\n    location: 'Seattle, WA',\n    status: 'active',\n    tags: ['Kubernetes', 'Docker', 'DevOps', 'AWS'],\n    order: 4,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString()\n  },\n  {\n    id: '5',\n    title: 'Mobile App Developer - AppWorks',\n    slug: 'mobile-app-developer-appworks',\n    description: 'Create amazing mobile experiences using React Native. Work on both iOS and Android platforms. Experience with native mobile development preferred.',\n    location: 'Austin, TX',\n    status: 'active',\n    tags: ['React Native', 'Mobile', 'iOS', 'Android'],\n    order: 5,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString()\n  }\n];\n\nexport const mockCandidates = [\n  {\n    id: '1',\n    name: 'John Doe',\n    email: 'john.doe@email.com',\n    phone: '+1-555-0123',\n    resume: 'John_Doe_Resume.pdf',\n    status: 'applied',\n    stage: 'applied',\n    jobId: '1',\n    appliedAt: new Date().toISOString(),\n    timeline: [{\n      id: 'timeline-1',\n      stage: 'applied',\n      timestamp: new Date().toISOString(),\n      notes: 'Application submitted'\n    }]\n  },\n  {\n    id: '2',\n    name: 'Jane Smith',\n    email: 'jane.smith@email.com',\n    phone: '+1-555-0124',\n    resume: 'Jane_Smith_Resume.pdf',\n    status: 'screen',\n    stage: 'screen',\n    jobId: '1',\n    appliedAt: new Date().toISOString(),\n    timeline: [{\n      id: 'timeline-2',\n      stage: 'screen',\n      timestamp: new Date().toISOString(),\n      notes: 'Moved to screen stage'\n    }]\n  },\n  {\n    id: '3',\n    name: 'Mike Johnson',\n    email: 'mike.johnson@email.com',\n    phone: '+1-555-0125',\n    resume: 'Mike_Johnson_Resume.pdf',\n    status: 'tech',\n    stage: 'tech',\n    jobId: '2',\n    appliedAt: new Date().toISOString(),\n    timeline: [{\n      id: 'timeline-3',\n      stage: 'tech',\n      timestamp: new Date().toISOString(),\n      notes: 'Technical interview scheduled'\n    }]\n  }\n];\n\nexport const mockAssessments = [\n  {\n    id: 'assessment-1',\n    jobId: '1',\n    title: 'Frontend Developer Assessment',\n    description: 'This assessment evaluates technical skills and problem-solving abilities for frontend development.',\n    sections: [\n      {\n        id: 'section-1',\n        title: 'Technical Skills',\n        questions: [\n          {\n            id: 'q-1',\n            type: 'single-choice',\n            title: 'What is React?',\n            description: 'Choose the best answer',\n            required: true,\n            options: ['A JavaScript library', 'A programming language', 'A database', 'A framework']\n          },\n          {\n            id: 'q-2',\n            type: 'short-text',\n            title: 'Explain the concept of virtual DOM',\n            description: 'Provide a brief explanation',\n            required: true,\n            validation: { maxLength: 200 }\n          }\n        ]\n      }\n    ],\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString()\n  }\n];\n\n// Simple API simulation\nexport const delay = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n\nexport const jobsApi = {\n  getJobs: async () => {\n    await delay(500);\n    return { data: mockJobs, pagination: { page: 1, pageSize: 10, total: mockJobs.length, totalPages: 1 } };\n  },\n  createJob: async (job: any) => {\n    await delay(300);\n    const newJob = { ...job, id: Date.now().toString(), createdAt: new Date().toISOString(), updatedAt: new Date().toISOString() };\n    mockJobs.push(newJob);\n    return newJob;\n  },\n  updateJob: async (id: string, updates: any) => {\n    await delay(300);\n    const index = mockJobs.findIndex(job => job.id === id);\n    if (index >= 0) {\n      mockJobs[index] = { ...mockJobs[index], ...updates, updatedAt: new Date().toISOString() };\n      return mockJobs[index];\n    }\n    throw new Error('Job not found');\n  }\n};\n\nexport const candidatesApi = {\n  getCandidates: async () => {\n    await delay(500);\n    return { data: mockCandidates, pagination: { page: 1, pageSize: 20, total: mockCandidates.length, totalPages: 1 } };\n  },\n  createCandidate: async (candidate: any) => {\n    await delay(300);\n    const newCandidate = { ...candidate, id: Date.now().toString(), appliedAt: new Date().toISOString() };\n    mockCandidates.push(newCandidate);\n    return newCandidate;\n  },\n  updateCandidate: async (id: string, updates: any) => {\n    await delay(300);\n    const index = mockCandidates.findIndex(candidate => candidate.id === id);\n    if (index >= 0) {\n      mockCandidates[index] = { ...mockCandidates[index], ...updates };\n      return mockCandidates[index];\n    }\n    throw new Error('Candidate not found');\n  }\n};\n\nexport const assessmentsApi = {\n  getAssessment: async (jobId: string) => {\n    await delay(300);\n    const assessment = mockAssessments.find(a => a.jobId === jobId);\n    if (!assessment) {\n      throw new Error('Assessment not found');\n    }\n    return assessment;\n  }\n};"],"mappings":"AAAA;AACA,OAAO,MAAMA,QAAQ,GAAG,CACtB;EACEC,EAAE,EAAE,GAAG;EACPC,KAAK,EAAE,sCAAsC;EAC7CC,IAAI,EAAE,oCAAoC;EAC1CC,WAAW,EAAE,gPAAgP;EAC7PC,QAAQ,EAAE,mBAAmB;EAC7BC,MAAM,EAAE,QAAQ;EAChBC,IAAI,EAAE,CAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,CAAC;EACvDC,KAAK,EAAE,CAAC;EACRC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EACnCC,SAAS,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;AACpC,CAAC,EACD;EACEV,EAAE,EAAE,GAAG;EACPC,KAAK,EAAE,8BAA8B;EACrCC,IAAI,EAAE,4BAA4B;EAClCC,WAAW,EAAE,8KAA8K;EAC3LC,QAAQ,EAAE,cAAc;EACxBC,MAAM,EAAE,QAAQ;EAChBC,IAAI,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,eAAe,CAAC;EACpDC,KAAK,EAAE,CAAC;EACRC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EACnCC,SAAS,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;AACpC,CAAC,EACD;EACEV,EAAE,EAAE,GAAG;EACPC,KAAK,EAAE,kCAAkC;EACzCC,IAAI,EAAE,gCAAgC;EACtCC,WAAW,EAAE,wKAAwK;EACrLC,QAAQ,EAAE,QAAQ;EAClBC,MAAM,EAAE,UAAU;EAClBC,IAAI,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,CAAC;EAC1CC,KAAK,EAAE,CAAC;EACRC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EACnCC,SAAS,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;AACpC,CAAC,EACD;EACEV,EAAE,EAAE,GAAG;EACPC,KAAK,EAAE,6BAA6B;EACpCC,IAAI,EAAE,2BAA2B;EACjCC,WAAW,EAAE,wKAAwK;EACrLC,QAAQ,EAAE,aAAa;EACvBC,MAAM,EAAE,QAAQ;EAChBC,IAAI,EAAE,CAAC,YAAY,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,CAAC;EAC/CC,KAAK,EAAE,CAAC;EACRC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EACnCC,SAAS,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;AACpC,CAAC,EACD;EACEV,EAAE,EAAE,GAAG;EACPC,KAAK,EAAE,iCAAiC;EACxCC,IAAI,EAAE,+BAA+B;EACrCC,WAAW,EAAE,oJAAoJ;EACjKC,QAAQ,EAAE,YAAY;EACtBC,MAAM,EAAE,QAAQ;EAChBC,IAAI,EAAE,CAAC,cAAc,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,CAAC;EAClDC,KAAK,EAAE,CAAC;EACRC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EACnCC,SAAS,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;AACpC,CAAC,CACF;AAED,OAAO,MAAME,cAAc,GAAG,CAC5B;EACEZ,EAAE,EAAE,GAAG;EACPa,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE,oBAAoB;EAC3BC,KAAK,EAAE,aAAa;EACpBC,MAAM,EAAE,qBAAqB;EAC7BX,MAAM,EAAE,SAAS;EACjBY,KAAK,EAAE,SAAS;EAChBC,KAAK,EAAE,GAAG;EACVC,SAAS,EAAE,IAAIV,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EACnCU,QAAQ,EAAE,CAAC;IACTpB,EAAE,EAAE,YAAY;IAChBiB,KAAK,EAAE,SAAS;IAChBI,SAAS,EAAE,IAAIZ,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IACnCY,KAAK,EAAE;EACT,CAAC;AACH,CAAC,EACD;EACEtB,EAAE,EAAE,GAAG;EACPa,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE,sBAAsB;EAC7BC,KAAK,EAAE,aAAa;EACpBC,MAAM,EAAE,uBAAuB;EAC/BX,MAAM,EAAE,QAAQ;EAChBY,KAAK,EAAE,QAAQ;EACfC,KAAK,EAAE,GAAG;EACVC,SAAS,EAAE,IAAIV,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EACnCU,QAAQ,EAAE,CAAC;IACTpB,EAAE,EAAE,YAAY;IAChBiB,KAAK,EAAE,QAAQ;IACfI,SAAS,EAAE,IAAIZ,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IACnCY,KAAK,EAAE;EACT,CAAC;AACH,CAAC,EACD;EACEtB,EAAE,EAAE,GAAG;EACPa,IAAI,EAAE,cAAc;EACpBC,KAAK,EAAE,wBAAwB;EAC/BC,KAAK,EAAE,aAAa;EACpBC,MAAM,EAAE,yBAAyB;EACjCX,MAAM,EAAE,MAAM;EACdY,KAAK,EAAE,MAAM;EACbC,KAAK,EAAE,GAAG;EACVC,SAAS,EAAE,IAAIV,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EACnCU,QAAQ,EAAE,CAAC;IACTpB,EAAE,EAAE,YAAY;IAChBiB,KAAK,EAAE,MAAM;IACbI,SAAS,EAAE,IAAIZ,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IACnCY,KAAK,EAAE;EACT,CAAC;AACH,CAAC,CACF;AAED,OAAO,MAAMC,eAAe,GAAG,CAC7B;EACEvB,EAAE,EAAE,cAAc;EAClBkB,KAAK,EAAE,GAAG;EACVjB,KAAK,EAAE,+BAA+B;EACtCE,WAAW,EAAE,oGAAoG;EACjHqB,QAAQ,EAAE,CACR;IACExB,EAAE,EAAE,WAAW;IACfC,KAAK,EAAE,kBAAkB;IACzBwB,SAAS,EAAE,CACT;MACEzB,EAAE,EAAE,KAAK;MACT0B,IAAI,EAAE,eAAe;MACrBzB,KAAK,EAAE,gBAAgB;MACvBE,WAAW,EAAE,wBAAwB;MACrCwB,QAAQ,EAAE,IAAI;MACdC,OAAO,EAAE,CAAC,sBAAsB,EAAE,wBAAwB,EAAE,YAAY,EAAE,aAAa;IACzF,CAAC,EACD;MACE5B,EAAE,EAAE,KAAK;MACT0B,IAAI,EAAE,YAAY;MAClBzB,KAAK,EAAE,oCAAoC;MAC3CE,WAAW,EAAE,6BAA6B;MAC1CwB,QAAQ,EAAE,IAAI;MACdE,UAAU,EAAE;QAAEC,SAAS,EAAE;MAAI;IAC/B,CAAC;EAEL,CAAC,CACF;EACDtB,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EACnCC,SAAS,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;AACpC,CAAC,CACF;;AAED;AACA,OAAO,MAAMqB,KAAK,GAAIC,EAAU,IAAK,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAEF,EAAE,CAAC,CAAC;AAEpF,OAAO,MAAMI,OAAO,GAAG;EACrBC,OAAO,EAAE,MAAAA,CAAA,KAAY;IACnB,MAAMN,KAAK,CAAC,GAAG,CAAC;IAChB,OAAO;MAAEO,IAAI,EAAEvC,QAAQ;MAAEwC,UAAU,EAAE;QAAEC,IAAI,EAAE,CAAC;QAAEC,QAAQ,EAAE,EAAE;QAAEC,KAAK,EAAE3C,QAAQ,CAAC4C,MAAM;QAAEC,UAAU,EAAE;MAAE;IAAE,CAAC;EACzG,CAAC;EACDC,SAAS,EAAE,MAAOC,GAAQ,IAAK;IAC7B,MAAMf,KAAK,CAAC,GAAG,CAAC;IAChB,MAAMgB,MAAM,GAAG;MAAE,GAAGD,GAAG;MAAE9C,EAAE,EAAES,IAAI,CAACuC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;MAAEzC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MAAEC,SAAS,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IAAE,CAAC;IAC9HX,QAAQ,CAACmD,IAAI,CAACH,MAAM,CAAC;IACrB,OAAOA,MAAM;EACf,CAAC;EACDI,SAAS,EAAE,MAAAA,CAAOnD,EAAU,EAAEoD,OAAY,KAAK;IAC7C,MAAMrB,KAAK,CAAC,GAAG,CAAC;IAChB,MAAMsB,KAAK,GAAGtD,QAAQ,CAACuD,SAAS,CAACR,GAAG,IAAIA,GAAG,CAAC9C,EAAE,KAAKA,EAAE,CAAC;IACtD,IAAIqD,KAAK,IAAI,CAAC,EAAE;MACdtD,QAAQ,CAACsD,KAAK,CAAC,GAAG;QAAE,GAAGtD,QAAQ,CAACsD,KAAK,CAAC;QAAE,GAAGD,OAAO;QAAEzC,SAAS,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MAAE,CAAC;MACzF,OAAOX,QAAQ,CAACsD,KAAK,CAAC;IACxB;IACA,MAAM,IAAIE,KAAK,CAAC,eAAe,CAAC;EAClC;AACF,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG;EAC3BC,aAAa,EAAE,MAAAA,CAAA,KAAY;IACzB,MAAM1B,KAAK,CAAC,GAAG,CAAC;IAChB,OAAO;MAAEO,IAAI,EAAE1B,cAAc;MAAE2B,UAAU,EAAE;QAAEC,IAAI,EAAE,CAAC;QAAEC,QAAQ,EAAE,EAAE;QAAEC,KAAK,EAAE9B,cAAc,CAAC+B,MAAM;QAAEC,UAAU,EAAE;MAAE;IAAE,CAAC;EACrH,CAAC;EACDc,eAAe,EAAE,MAAOC,SAAc,IAAK;IACzC,MAAM5B,KAAK,CAAC,GAAG,CAAC;IAChB,MAAM6B,YAAY,GAAG;MAAE,GAAGD,SAAS;MAAE3D,EAAE,EAAES,IAAI,CAACuC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;MAAE9B,SAAS,EAAE,IAAIV,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IAAE,CAAC;IACrGE,cAAc,CAACsC,IAAI,CAACU,YAAY,CAAC;IACjC,OAAOA,YAAY;EACrB,CAAC;EACDC,eAAe,EAAE,MAAAA,CAAO7D,EAAU,EAAEoD,OAAY,KAAK;IACnD,MAAMrB,KAAK,CAAC,GAAG,CAAC;IAChB,MAAMsB,KAAK,GAAGzC,cAAc,CAAC0C,SAAS,CAACK,SAAS,IAAIA,SAAS,CAAC3D,EAAE,KAAKA,EAAE,CAAC;IACxE,IAAIqD,KAAK,IAAI,CAAC,EAAE;MACdzC,cAAc,CAACyC,KAAK,CAAC,GAAG;QAAE,GAAGzC,cAAc,CAACyC,KAAK,CAAC;QAAE,GAAGD;MAAQ,CAAC;MAChE,OAAOxC,cAAc,CAACyC,KAAK,CAAC;IAC9B;IACA,MAAM,IAAIE,KAAK,CAAC,qBAAqB,CAAC;EACxC;AACF,CAAC;AAED,OAAO,MAAMO,cAAc,GAAG;EAC5BC,aAAa,EAAE,MAAO7C,KAAa,IAAK;IACtC,MAAMa,KAAK,CAAC,GAAG,CAAC;IAChB,MAAMiC,UAAU,GAAGzC,eAAe,CAAC0C,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAChD,KAAK,KAAKA,KAAK,CAAC;IAC/D,IAAI,CAAC8C,UAAU,EAAE;MACf,MAAM,IAAIT,KAAK,CAAC,sBAAsB,CAAC;IACzC;IACA,OAAOS,UAAU;EACnB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}