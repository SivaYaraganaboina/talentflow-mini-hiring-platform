{"ast":null,"code":"/**\n * Implements fast shallow verification of hostnames. This does not perform a\n * struct check on the content of labels (classes of Unicode characters, etc.)\n * but instead check that the structure is valid (number of labels, length of\n * labels, etc.).\n *\n * If you need stricter validation, consider using an external library.\n */\nfunction isValidAscii(code) {\n  return code >= 97 && code <= 122 || code >= 48 && code <= 57 || code > 127;\n}\n/**\n * Check if a hostname string is valid. It's usually a preliminary check before\n * trying to use getDomain or anything else.\n *\n * Beware: it does not check if the TLD exists.\n */\nexport default function (hostname) {\n  if (hostname.length > 255) {\n    return false;\n  }\n  if (hostname.length === 0) {\n    return false;\n  }\n  if (/*@__INLINE__*/!isValidAscii(hostname.charCodeAt(0)) && hostname.charCodeAt(0) !== 46 &&\n  // '.' (dot)\n  hostname.charCodeAt(0) !== 95 // '_' (underscore)\n  ) {\n    return false;\n  }\n  // Validate hostname according to RFC\n  let lastDotIndex = -1;\n  let lastCharCode = -1;\n  const len = hostname.length;\n  for (let i = 0; i < len; i += 1) {\n    const code = hostname.charCodeAt(i);\n    if (code === 46 /* '.' */) {\n      if (\n      // Check that previous label is < 63 bytes long (64 = 63 + '.')\n      i - lastDotIndex > 64 ||\n      // Check that previous character was not already a '.'\n      lastCharCode === 46 ||\n      // Check that the previous label does not end with a '-' (dash)\n      lastCharCode === 45 ||\n      // Check that the previous label does not end with a '_' (underscore)\n      lastCharCode === 95) {\n        return false;\n      }\n      lastDotIndex = i;\n    } else if (!(/*@__INLINE__*/isValidAscii(code) || code === 45 || code === 95)) {\n      // Check if there is a forbidden character in the label\n      return false;\n    }\n    lastCharCode = code;\n  }\n  return (\n    // Check that last label is shorter than 63 chars\n    len - lastDotIndex - 1 <= 63 &&\n    // Check that the last character is an allowed trailing label character.\n    // Since we already checked that the char is a valid hostname character,\n    // we only need to check that it's different from '-'.\n    lastCharCode !== 45\n  );\n}\n//# sourceMappingURL=is-valid.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}