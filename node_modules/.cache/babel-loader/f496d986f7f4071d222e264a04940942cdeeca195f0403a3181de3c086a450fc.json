{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\Desktop\\\\talentflow-mini-hiring-platform\\\\TalentFlow\\\\src\\\\components\\\\AssessmentForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssessmentForm = ({\n  assessment,\n  candidateId,\n  onSubmit,\n  onClose\n}) => {\n  _s();\n  const [responses, setResponses] = useState({});\n  const [errors, setErrors] = useState({});\n  const [currentSection, setCurrentSection] = useState(0);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  useEffect(() => {\n    // Initialize responses with default values\n    const initialResponses = {};\n    assessment.sections.forEach(section => {\n      section.questions.forEach(question => {\n        if (question.type === 'single-choice' || question.type === 'multi-choice') {\n          initialResponses[question.id] = question.type === 'multi-choice' ? [] : '';\n        } else if (question.type === 'numeric') {\n          initialResponses[question.id] = '';\n        } else {\n          initialResponses[question.id] = '';\n        }\n      });\n    });\n    setResponses(initialResponses);\n  }, [assessment]);\n  const validateSection = sectionIndex => {\n    const section = assessment.sections[sectionIndex];\n    const sectionErrors = {};\n    let isValid = true;\n    section.questions.forEach(question => {\n      var _question$validation3, _question$validation4;\n      const value = responses[question.id];\n\n      // Check required fields\n      if (question.required) {\n        if (question.type === 'multi-choice' && (!Array.isArray(value) || value.length === 0)) {\n          sectionErrors[question.id] = 'This field is required';\n          isValid = false;\n        } else if (question.type !== 'multi-choice' && (!value || value.toString().trim() === '')) {\n          sectionErrors[question.id] = 'This field is required';\n          isValid = false;\n        }\n      }\n\n      // Type-specific validation\n      if (question.type === 'numeric' && value) {\n        const numValue = parseFloat(value);\n        if (isNaN(numValue)) {\n          sectionErrors[question.id] = 'Please enter a valid number';\n          isValid = false;\n        } else {\n          var _question$validation, _question$validation2;\n          if (((_question$validation = question.validation) === null || _question$validation === void 0 ? void 0 : _question$validation.min) !== undefined && numValue < question.validation.min) {\n            sectionErrors[question.id] = `Value must be at least ${question.validation.min}`;\n            isValid = false;\n          }\n          if (((_question$validation2 = question.validation) === null || _question$validation2 === void 0 ? void 0 : _question$validation2.max) !== undefined && numValue > question.validation.max) {\n            sectionErrors[question.id] = `Value must be at most ${question.validation.max}`;\n            isValid = false;\n          }\n        }\n      }\n      if (question.type === 'short-text' && (_question$validation3 = question.validation) !== null && _question$validation3 !== void 0 && _question$validation3.maxLength && value.length > question.validation.maxLength) {\n        sectionErrors[question.id] = `Maximum ${question.validation.maxLength} characters allowed`;\n        isValid = false;\n      }\n      if (question.type === 'long-text' && (_question$validation4 = question.validation) !== null && _question$validation4 !== void 0 && _question$validation4.maxLength && value.length > question.validation.maxLength) {\n        sectionErrors[question.id] = `Maximum ${question.validation.maxLength} characters allowed`;\n        isValid = false;\n      }\n    });\n    setErrors(sectionErrors);\n    return isValid;\n  };\n  const handleInputChange = (questionId, value) => {\n    setResponses(prev => ({\n      ...prev,\n      [questionId]: value\n    }));\n\n    // Clear error for this field\n    if (errors[questionId]) {\n      setErrors(prev => {\n        const newErrors = {\n          ...prev\n        };\n        delete newErrors[questionId];\n        return newErrors;\n      });\n    }\n  };\n  const handleNext = () => {\n    if (validateSection(currentSection)) {\n      if (currentSection < assessment.sections.length - 1) {\n        setCurrentSection(currentSection + 1);\n      }\n    }\n  };\n  const handlePrevious = () => {\n    if (currentSection > 0) {\n      setCurrentSection(currentSection - 1);\n    }\n  };\n  const handleSubmit = async () => {\n    if (!validateSection(currentSection)) {\n      return;\n    }\n    setIsSubmitting(true);\n    try {\n      const submission = {\n        id: `submission-${Date.now()}`,\n        jobId: assessment.jobId,\n        candidateId,\n        responses,\n        submittedAt: new Date().toISOString()\n      };\n      await onSubmit(submission);\n    } catch (error) {\n      console.error('Error submitting assessment:', error);\n      alert('Failed to submit assessment. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const renderQuestion = question => {\n    var _question$options, _question$options2, _question$validation5, _question$validation6, _question$validation7, _question$validation8;\n    const value = responses[question.id];\n    const error = errors[question.id];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-item mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-header mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-medium text-gray-900\",\n          children: [question.title, question.required && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-red-500 ml-1\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), question.description && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600 mt-1\",\n          children: question.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-input\",\n        children: [question.type === 'single-choice' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: (_question$options = question.options) === null || _question$options === void 0 ? void 0 : _question$options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: question.id,\n              value: option,\n              checked: value === option,\n              onChange: e => handleInputChange(question.id, e.target.value),\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, this), option]\n          }, optionIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), question.type === 'multi-choice' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: (_question$options2 = question.options) === null || _question$options2 === void 0 ? void 0 : _question$options2.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              value: option,\n              checked: Array.isArray(value) && value.includes(option),\n              onChange: e => {\n                const currentValues = Array.isArray(value) ? value : [];\n                if (currentValues.includes(option)) {\n                  handleInputChange(question.id, currentValues.filter(v => v !== option));\n                } else {\n                  handleInputChange(question.id, [...currentValues, option]);\n                }\n              },\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this), option]\n          }, optionIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), question.type === 'short-text' && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-input\",\n          value: value || '',\n          onChange: e => handleInputChange(question.id, e.target.value),\n          placeholder: \"Your answer\",\n          maxLength: (_question$validation5 = question.validation) === null || _question$validation5 === void 0 ? void 0 : _question$validation5.maxLength\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), question.type === 'long-text' && /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-input\",\n          value: value || '',\n          onChange: e => handleInputChange(question.id, e.target.value),\n          placeholder: \"Your answer\",\n          rows: 4,\n          maxLength: (_question$validation6 = question.validation) === null || _question$validation6 === void 0 ? void 0 : _question$validation6.maxLength\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), question.type === 'numeric' && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-input\",\n          value: value || '',\n          onChange: e => handleInputChange(question.id, parseFloat(e.target.value) || ''),\n          placeholder: \"Your answer\",\n          min: (_question$validation7 = question.validation) === null || _question$validation7 === void 0 ? void 0 : _question$validation7.min,\n          max: (_question$validation8 = question.validation) === null || _question$validation8 === void 0 ? void 0 : _question$validation8.max\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), question.type === 'file-upload' && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"form-input\",\n          onChange: e => {\n            var _e$target$files;\n            return handleInputChange(question.id, ((_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0]) || null);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-sm mt-1\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this)]\n    }, question.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this);\n  };\n  const currentSectionData = assessment.sections[currentSection];\n  const progress = (currentSection + 1) / assessment.sections.length * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"assessment-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-header mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold\",\n          children: assessment.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: onClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), assessment.description && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 mb-4\",\n        children: assessment.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bg\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${progress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-text\",\n          children: [\"Section \", currentSection + 1, \" of \", assessment.sections.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header mb-6\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold\",\n          children: currentSectionData.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions-list\",\n        children: currentSectionData.questions.map(renderQuestion)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-footer mt-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: handlePrevious,\n          disabled: currentSection === 0,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-2\",\n          children: currentSection === assessment.sections.length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: handleSubmit,\n            disabled: isSubmitting,\n            children: isSubmitting ? 'Submitting...' : 'Submit Assessment'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: handleNext,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 5\n  }, this);\n};\n_s(AssessmentForm, \"OsPvTcop4/aLTPZx6Z4P949//tk=\");\n_c = AssessmentForm;\nexport default AssessmentForm;\nvar _c;\n$RefreshReg$(_c, \"AssessmentForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AssessmentForm","assessment","candidateId","onSubmit","onClose","_s","responses","setResponses","errors","setErrors","currentSection","setCurrentSection","isSubmitting","setIsSubmitting","initialResponses","sections","forEach","section","questions","question","type","id","validateSection","sectionIndex","sectionErrors","isValid","_question$validation3","_question$validation4","value","required","Array","isArray","length","toString","trim","numValue","parseFloat","isNaN","_question$validation","_question$validation2","validation","min","undefined","max","maxLength","handleInputChange","questionId","prev","newErrors","handleNext","handlePrevious","handleSubmit","submission","Date","now","jobId","submittedAt","toISOString","error","console","alert","renderQuestion","_question$options","_question$options2","_question$validation5","_question$validation6","_question$validation7","_question$validation8","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","description","options","map","option","optionIndex","name","checked","onChange","e","target","includes","currentValues","filter","v","placeholder","rows","_e$target$files","files","currentSectionData","progress","onClick","style","width","disabled","_c","$RefreshReg$"],"sources":["C:/Users/shiva/Desktop/talentflow-mini-hiring-platform/TalentFlow/src/components/AssessmentForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Assessment, AssessmentSubmission } from '../types';\r\n\r\ninterface AssessmentFormProps {\r\n  assessment: Assessment;\r\n  candidateId: string;\r\n  onSubmit: (submission: AssessmentSubmission) => void;\r\n  onClose: () => void;\r\n}\r\n\r\nconst AssessmentForm: React.FC<AssessmentFormProps> = ({\r\n  assessment,\r\n  candidateId,\r\n  onSubmit,\r\n  onClose\r\n}) => {\r\n  const [responses, setResponses] = useState<Record<string, any>>({});\r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n  const [currentSection, setCurrentSection] = useState(0);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Initialize responses with default values\r\n    const initialResponses: Record<string, any> = {};\r\n    assessment.sections.forEach(section => {\r\n      section.questions.forEach(question => {\r\n        if (question.type === 'single-choice' || question.type === 'multi-choice') {\r\n          initialResponses[question.id] = question.type === 'multi-choice' ? [] : '';\r\n        } else if (question.type === 'numeric') {\r\n          initialResponses[question.id] = '';\r\n        } else {\r\n          initialResponses[question.id] = '';\r\n        }\r\n      });\r\n    });\r\n    setResponses(initialResponses);\r\n  }, [assessment]);\r\n\r\n  const validateSection = (sectionIndex: number): boolean => {\r\n    const section = assessment.sections[sectionIndex];\r\n    const sectionErrors: Record<string, string> = {};\r\n    let isValid = true;\r\n\r\n    section.questions.forEach(question => {\r\n      const value = responses[question.id];\r\n\r\n      // Check required fields\r\n      if (question.required) {\r\n        if (question.type === 'multi-choice' && (!Array.isArray(value) || value.length === 0)) {\r\n          sectionErrors[question.id] = 'This field is required';\r\n          isValid = false;\r\n        } else if (question.type !== 'multi-choice' && (!value || value.toString().trim() === '')) {\r\n          sectionErrors[question.id] = 'This field is required';\r\n          isValid = false;\r\n        }\r\n      }\r\n\r\n      // Type-specific validation\r\n      if (question.type === 'numeric' && value) {\r\n        const numValue = parseFloat(value);\r\n        if (isNaN(numValue)) {\r\n          sectionErrors[question.id] = 'Please enter a valid number';\r\n          isValid = false;\r\n        } else {\r\n          if (question.validation?.min !== undefined && numValue < question.validation.min) {\r\n            sectionErrors[question.id] = `Value must be at least ${question.validation.min}`;\r\n            isValid = false;\r\n          }\r\n          if (question.validation?.max !== undefined && numValue > question.validation.max) {\r\n            sectionErrors[question.id] = `Value must be at most ${question.validation.max}`;\r\n            isValid = false;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (question.type === 'short-text' && question.validation?.maxLength && value.length > question.validation.maxLength) {\r\n        sectionErrors[question.id] = `Maximum ${question.validation.maxLength} characters allowed`;\r\n        isValid = false;\r\n      }\r\n\r\n      if (question.type === 'long-text' && question.validation?.maxLength && value.length > question.validation.maxLength) {\r\n        sectionErrors[question.id] = `Maximum ${question.validation.maxLength} characters allowed`;\r\n        isValid = false;\r\n      }\r\n    });\r\n\r\n    setErrors(sectionErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const handleInputChange = (questionId: string, value: any) => {\r\n    setResponses(prev => ({\r\n      ...prev,\r\n      [questionId]: value\r\n    }));\r\n\r\n    // Clear error for this field\r\n    if (errors[questionId]) {\r\n      setErrors(prev => {\r\n        const newErrors = { ...prev };\r\n        delete newErrors[questionId];\r\n        return newErrors;\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (validateSection(currentSection)) {\r\n      if (currentSection < assessment.sections.length - 1) {\r\n        setCurrentSection(currentSection + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (currentSection > 0) {\r\n      setCurrentSection(currentSection - 1);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!validateSection(currentSection)) {\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n\r\n    try {\r\n      const submission: AssessmentSubmission = {\r\n        id: `submission-${Date.now()}`,\r\n        jobId: assessment.jobId,\r\n        candidateId,\r\n        responses,\r\n        submittedAt: new Date().toISOString()\r\n      };\r\n\r\n      await onSubmit(submission);\r\n    } catch (error) {\r\n      console.error('Error submitting assessment:', error);\r\n      alert('Failed to submit assessment. Please try again.');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const renderQuestion = (question: any) => {\r\n    const value = responses[question.id];\r\n    const error = errors[question.id];\r\n\r\n    return (\r\n      <div key={question.id} className=\"question-item mb-6\">\r\n        <div className=\"question-header mb-3\">\r\n          <h4 className=\"font-medium text-gray-900\">\r\n            {question.title}\r\n            {question.required && <span className=\"text-red-500 ml-1\">*</span>}\r\n          </h4>\r\n          {question.description && (\r\n            <p className=\"text-sm text-gray-600 mt-1\">{question.description}</p>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"question-input\">\r\n          {question.type === 'single-choice' && (\r\n            <div className=\"space-y-2\">\r\n              {question.options?.map((option: string, optionIndex: number) => (\r\n                <label key={optionIndex} className=\"flex items-center\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name={question.id}\r\n                    value={option}\r\n                    checked={value === option}\r\n                    onChange={(e) => handleInputChange(question.id, e.target.value)}\r\n                    className=\"mr-2\"\r\n                  />\r\n                  {option}\r\n                </label>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          {question.type === 'multi-choice' && (\r\n            <div className=\"space-y-2\">\r\n              {question.options?.map((option: string, optionIndex: number) => (\r\n                <label key={optionIndex} className=\"flex items-center\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    value={option}\r\n                    checked={Array.isArray(value) && value.includes(option)}\r\n                    onChange={(e) => {\r\n                      const currentValues = Array.isArray(value) ? value : [];\r\n                      if (currentValues.includes(option)) {\r\n                        handleInputChange(question.id, currentValues.filter(v => v !== option));\r\n                      } else {\r\n                        handleInputChange(question.id, [...currentValues, option]);\r\n                      }\r\n                    }}\r\n                    className=\"mr-2\"\r\n                  />\r\n                  {option}\r\n                </label>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          {question.type === 'short-text' && (\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-input\"\r\n              value={value || ''}\r\n              onChange={(e) => handleInputChange(question.id, e.target.value)}\r\n              placeholder=\"Your answer\"\r\n              maxLength={question.validation?.maxLength}\r\n            />\r\n          )}\r\n\r\n          {question.type === 'long-text' && (\r\n            <textarea\r\n              className=\"form-input\"\r\n              value={value || ''}\r\n              onChange={(e) => handleInputChange(question.id, e.target.value)}\r\n              placeholder=\"Your answer\"\r\n              rows={4}\r\n              maxLength={question.validation?.maxLength}\r\n            />\r\n          )}\r\n\r\n          {question.type === 'numeric' && (\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-input\"\r\n              value={value || ''}\r\n              onChange={(e) => handleInputChange(question.id, parseFloat(e.target.value) || '')}\r\n              placeholder=\"Your answer\"\r\n              min={question.validation?.min}\r\n              max={question.validation?.max}\r\n            />\r\n          )}\r\n\r\n          {question.type === 'file-upload' && (\r\n            <input\r\n              type=\"file\"\r\n              className=\"form-input\"\r\n              onChange={(e) => handleInputChange(question.id, e.target.files?.[0] || null)}\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        {error && (\r\n          <p className=\"text-red-500 text-sm mt-1\">{error}</p>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const currentSectionData = assessment.sections[currentSection];\r\n  const progress = ((currentSection + 1) / assessment.sections.length) * 100;\r\n\r\n  return (\r\n    <div className=\"assessment-form\">\r\n      <div className=\"form-header mb-6\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h2 className=\"text-2xl font-bold\">{assessment.title}</h2>\r\n          <button className=\"btn btn-secondary\" onClick={onClose}>\r\n            Close\r\n          </button>\r\n        </div>\r\n\r\n        {assessment.description && (\r\n          <p className=\"text-gray-600 mb-4\">{assessment.description}</p>\r\n        )}\r\n\r\n        <div className=\"progress-bar mb-4\">\r\n          <div className=\"progress-bg\">\r\n            <div\r\n              className=\"progress-fill\"\r\n              style={{ width: `${progress}%` }}\r\n            />\r\n          </div>\r\n          <div className=\"progress-text\">\r\n            Section {currentSection + 1} of {assessment.sections.length}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-content\">\r\n        <div className=\"section-header mb-6\">\r\n          <h3 className=\"text-xl font-semibold\">{currentSectionData.title}</h3>\r\n        </div>\r\n\r\n        <div className=\"questions-list\">\r\n          {currentSectionData.questions.map(renderQuestion)}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-footer mt-8\">\r\n        <div className=\"flex justify-between\">\r\n          <button\r\n            className=\"btn btn-secondary\"\r\n            onClick={handlePrevious}\r\n            disabled={currentSection === 0}\r\n          >\r\n            Previous\r\n          </button>\r\n\r\n          <div className=\"flex gap-2\">\r\n            {currentSection === assessment.sections.length - 1 ? (\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={handleSubmit}\r\n                disabled={isSubmitting}\r\n              >\r\n                {isSubmitting ? 'Submitting...' : 'Submit Assessment'}\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={handleNext}\r\n              >\r\n                Next\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AssessmentForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUnD,MAAMC,cAA6C,GAAGA,CAAC;EACrDC,UAAU;EACVC,WAAW;EACXC,QAAQ;EACRC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAsB,CAAC,CAAC,CAAC;EACnE,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAyB,CAAC,CAAC,CAAC;EAChE,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMiB,gBAAqC,GAAG,CAAC,CAAC;IAChDb,UAAU,CAACc,QAAQ,CAACC,OAAO,CAACC,OAAO,IAAI;MACrCA,OAAO,CAACC,SAAS,CAACF,OAAO,CAACG,QAAQ,IAAI;QACpC,IAAIA,QAAQ,CAACC,IAAI,KAAK,eAAe,IAAID,QAAQ,CAACC,IAAI,KAAK,cAAc,EAAE;UACzEN,gBAAgB,CAACK,QAAQ,CAACE,EAAE,CAAC,GAAGF,QAAQ,CAACC,IAAI,KAAK,cAAc,GAAG,EAAE,GAAG,EAAE;QAC5E,CAAC,MAAM,IAAID,QAAQ,CAACC,IAAI,KAAK,SAAS,EAAE;UACtCN,gBAAgB,CAACK,QAAQ,CAACE,EAAE,CAAC,GAAG,EAAE;QACpC,CAAC,MAAM;UACLP,gBAAgB,CAACK,QAAQ,CAACE,EAAE,CAAC,GAAG,EAAE;QACpC;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IACFd,YAAY,CAACO,gBAAgB,CAAC;EAChC,CAAC,EAAE,CAACb,UAAU,CAAC,CAAC;EAEhB,MAAMqB,eAAe,GAAIC,YAAoB,IAAc;IACzD,MAAMN,OAAO,GAAGhB,UAAU,CAACc,QAAQ,CAACQ,YAAY,CAAC;IACjD,MAAMC,aAAqC,GAAG,CAAC,CAAC;IAChD,IAAIC,OAAO,GAAG,IAAI;IAElBR,OAAO,CAACC,SAAS,CAACF,OAAO,CAACG,QAAQ,IAAI;MAAA,IAAAO,qBAAA,EAAAC,qBAAA;MACpC,MAAMC,KAAK,GAAGtB,SAAS,CAACa,QAAQ,CAACE,EAAE,CAAC;;MAEpC;MACA,IAAIF,QAAQ,CAACU,QAAQ,EAAE;QACrB,IAAIV,QAAQ,CAACC,IAAI,KAAK,cAAc,KAAK,CAACU,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,IAAIA,KAAK,CAACI,MAAM,KAAK,CAAC,CAAC,EAAE;UACrFR,aAAa,CAACL,QAAQ,CAACE,EAAE,CAAC,GAAG,wBAAwB;UACrDI,OAAO,GAAG,KAAK;QACjB,CAAC,MAAM,IAAIN,QAAQ,CAACC,IAAI,KAAK,cAAc,KAAK,CAACQ,KAAK,IAAIA,KAAK,CAACK,QAAQ,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE;UACzFV,aAAa,CAACL,QAAQ,CAACE,EAAE,CAAC,GAAG,wBAAwB;UACrDI,OAAO,GAAG,KAAK;QACjB;MACF;;MAEA;MACA,IAAIN,QAAQ,CAACC,IAAI,KAAK,SAAS,IAAIQ,KAAK,EAAE;QACxC,MAAMO,QAAQ,GAAGC,UAAU,CAACR,KAAK,CAAC;QAClC,IAAIS,KAAK,CAACF,QAAQ,CAAC,EAAE;UACnBX,aAAa,CAACL,QAAQ,CAACE,EAAE,CAAC,GAAG,6BAA6B;UAC1DI,OAAO,GAAG,KAAK;QACjB,CAAC,MAAM;UAAA,IAAAa,oBAAA,EAAAC,qBAAA;UACL,IAAI,EAAAD,oBAAA,GAAAnB,QAAQ,CAACqB,UAAU,cAAAF,oBAAA,uBAAnBA,oBAAA,CAAqBG,GAAG,MAAKC,SAAS,IAAIP,QAAQ,GAAGhB,QAAQ,CAACqB,UAAU,CAACC,GAAG,EAAE;YAChFjB,aAAa,CAACL,QAAQ,CAACE,EAAE,CAAC,GAAG,0BAA0BF,QAAQ,CAACqB,UAAU,CAACC,GAAG,EAAE;YAChFhB,OAAO,GAAG,KAAK;UACjB;UACA,IAAI,EAAAc,qBAAA,GAAApB,QAAQ,CAACqB,UAAU,cAAAD,qBAAA,uBAAnBA,qBAAA,CAAqBI,GAAG,MAAKD,SAAS,IAAIP,QAAQ,GAAGhB,QAAQ,CAACqB,UAAU,CAACG,GAAG,EAAE;YAChFnB,aAAa,CAACL,QAAQ,CAACE,EAAE,CAAC,GAAG,yBAAyBF,QAAQ,CAACqB,UAAU,CAACG,GAAG,EAAE;YAC/ElB,OAAO,GAAG,KAAK;UACjB;QACF;MACF;MAEA,IAAIN,QAAQ,CAACC,IAAI,KAAK,YAAY,KAAAM,qBAAA,GAAIP,QAAQ,CAACqB,UAAU,cAAAd,qBAAA,eAAnBA,qBAAA,CAAqBkB,SAAS,IAAIhB,KAAK,CAACI,MAAM,GAAGb,QAAQ,CAACqB,UAAU,CAACI,SAAS,EAAE;QACpHpB,aAAa,CAACL,QAAQ,CAACE,EAAE,CAAC,GAAG,WAAWF,QAAQ,CAACqB,UAAU,CAACI,SAAS,qBAAqB;QAC1FnB,OAAO,GAAG,KAAK;MACjB;MAEA,IAAIN,QAAQ,CAACC,IAAI,KAAK,WAAW,KAAAO,qBAAA,GAAIR,QAAQ,CAACqB,UAAU,cAAAb,qBAAA,eAAnBA,qBAAA,CAAqBiB,SAAS,IAAIhB,KAAK,CAACI,MAAM,GAAGb,QAAQ,CAACqB,UAAU,CAACI,SAAS,EAAE;QACnHpB,aAAa,CAACL,QAAQ,CAACE,EAAE,CAAC,GAAG,WAAWF,QAAQ,CAACqB,UAAU,CAACI,SAAS,qBAAqB;QAC1FnB,OAAO,GAAG,KAAK;MACjB;IACF,CAAC,CAAC;IAEFhB,SAAS,CAACe,aAAa,CAAC;IACxB,OAAOC,OAAO;EAChB,CAAC;EAED,MAAMoB,iBAAiB,GAAGA,CAACC,UAAkB,EAAElB,KAAU,KAAK;IAC5DrB,YAAY,CAACwC,IAAI,KAAK;MACpB,GAAGA,IAAI;MACP,CAACD,UAAU,GAAGlB;IAChB,CAAC,CAAC,CAAC;;IAEH;IACA,IAAIpB,MAAM,CAACsC,UAAU,CAAC,EAAE;MACtBrC,SAAS,CAACsC,IAAI,IAAI;QAChB,MAAMC,SAAS,GAAG;UAAE,GAAGD;QAAK,CAAC;QAC7B,OAAOC,SAAS,CAACF,UAAU,CAAC;QAC5B,OAAOE,SAAS;MAClB,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI3B,eAAe,CAACZ,cAAc,CAAC,EAAE;MACnC,IAAIA,cAAc,GAAGT,UAAU,CAACc,QAAQ,CAACiB,MAAM,GAAG,CAAC,EAAE;QACnDrB,iBAAiB,CAACD,cAAc,GAAG,CAAC,CAAC;MACvC;IACF;EACF,CAAC;EAED,MAAMwC,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIxC,cAAc,GAAG,CAAC,EAAE;MACtBC,iBAAiB,CAACD,cAAc,GAAG,CAAC,CAAC;IACvC;EACF,CAAC;EAED,MAAMyC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAAC7B,eAAe,CAACZ,cAAc,CAAC,EAAE;MACpC;IACF;IAEAG,eAAe,CAAC,IAAI,CAAC;IAErB,IAAI;MACF,MAAMuC,UAAgC,GAAG;QACvC/B,EAAE,EAAE,cAAcgC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;QAC9BC,KAAK,EAAEtD,UAAU,CAACsD,KAAK;QACvBrD,WAAW;QACXI,SAAS;QACTkD,WAAW,EAAE,IAAIH,IAAI,CAAC,CAAC,CAACI,WAAW,CAAC;MACtC,CAAC;MAED,MAAMtD,QAAQ,CAACiD,UAAU,CAAC;IAC5B,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDE,KAAK,CAAC,gDAAgD,CAAC;IACzD,CAAC,SAAS;MACR/C,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;EAED,MAAMgD,cAAc,GAAI1C,QAAa,IAAK;IAAA,IAAA2C,iBAAA,EAAAC,kBAAA,EAAAC,qBAAA,EAAAC,qBAAA,EAAAC,qBAAA,EAAAC,qBAAA;IACxC,MAAMvC,KAAK,GAAGtB,SAAS,CAACa,QAAQ,CAACE,EAAE,CAAC;IACpC,MAAMqC,KAAK,GAAGlD,MAAM,CAACW,QAAQ,CAACE,EAAE,CAAC;IAEjC,oBACEtB,OAAA;MAAuBqE,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACnDtE,OAAA;QAAKqE,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBACnCtE,OAAA;UAAIqE,SAAS,EAAC,2BAA2B;UAAAC,QAAA,GACtClD,QAAQ,CAACmD,KAAK,EACdnD,QAAQ,CAACU,QAAQ,iBAAI9B,OAAA;YAAMqE,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAAC;UAAC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChE,CAAC,EACJvD,QAAQ,CAACwD,WAAW,iBACnB5E,OAAA;UAAGqE,SAAS,EAAC,4BAA4B;UAAAC,QAAA,EAAElD,QAAQ,CAACwD;QAAW;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CACpE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAEN3E,OAAA;QAAKqE,SAAS,EAAC,gBAAgB;QAAAC,QAAA,GAC5BlD,QAAQ,CAACC,IAAI,KAAK,eAAe,iBAChCrB,OAAA;UAAKqE,SAAS,EAAC,WAAW;UAAAC,QAAA,GAAAP,iBAAA,GACvB3C,QAAQ,CAACyD,OAAO,cAAAd,iBAAA,uBAAhBA,iBAAA,CAAkBe,GAAG,CAAC,CAACC,MAAc,EAAEC,WAAmB,kBACzDhF,OAAA;YAAyBqE,SAAS,EAAC,mBAAmB;YAAAC,QAAA,gBACpDtE,OAAA;cACEqB,IAAI,EAAC,OAAO;cACZ4D,IAAI,EAAE7D,QAAQ,CAACE,EAAG;cAClBO,KAAK,EAAEkD,MAAO;cACdG,OAAO,EAAErD,KAAK,KAAKkD,MAAO;cAC1BI,QAAQ,EAAGC,CAAC,IAAKtC,iBAAiB,CAAC1B,QAAQ,CAACE,EAAE,EAAE8D,CAAC,CAACC,MAAM,CAACxD,KAAK,CAAE;cAChEwC,SAAS,EAAC;YAAM;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjB,CAAC,EACDI,MAAM;UAAA,GATGC,WAAW;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAUhB,CACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CACN,EAEAvD,QAAQ,CAACC,IAAI,KAAK,cAAc,iBAC/BrB,OAAA;UAAKqE,SAAS,EAAC,WAAW;UAAAC,QAAA,GAAAN,kBAAA,GACvB5C,QAAQ,CAACyD,OAAO,cAAAb,kBAAA,uBAAhBA,kBAAA,CAAkBc,GAAG,CAAC,CAACC,MAAc,EAAEC,WAAmB,kBACzDhF,OAAA;YAAyBqE,SAAS,EAAC,mBAAmB;YAAAC,QAAA,gBACpDtE,OAAA;cACEqB,IAAI,EAAC,UAAU;cACfQ,KAAK,EAAEkD,MAAO;cACdG,OAAO,EAAEnD,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,IAAIA,KAAK,CAACyD,QAAQ,CAACP,MAAM,CAAE;cACxDI,QAAQ,EAAGC,CAAC,IAAK;gBACf,MAAMG,aAAa,GAAGxD,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,GAAGA,KAAK,GAAG,EAAE;gBACvD,IAAI0D,aAAa,CAACD,QAAQ,CAACP,MAAM,CAAC,EAAE;kBAClCjC,iBAAiB,CAAC1B,QAAQ,CAACE,EAAE,EAAEiE,aAAa,CAACC,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKV,MAAM,CAAC,CAAC;gBACzE,CAAC,MAAM;kBACLjC,iBAAiB,CAAC1B,QAAQ,CAACE,EAAE,EAAE,CAAC,GAAGiE,aAAa,EAAER,MAAM,CAAC,CAAC;gBAC5D;cACF,CAAE;cACFV,SAAS,EAAC;YAAM;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjB,CAAC,EACDI,MAAM;UAAA,GAfGC,WAAW;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAgBhB,CACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CACN,EAEAvD,QAAQ,CAACC,IAAI,KAAK,YAAY,iBAC7BrB,OAAA;UACEqB,IAAI,EAAC,MAAM;UACXgD,SAAS,EAAC,YAAY;UACtBxC,KAAK,EAAEA,KAAK,IAAI,EAAG;UACnBsD,QAAQ,EAAGC,CAAC,IAAKtC,iBAAiB,CAAC1B,QAAQ,CAACE,EAAE,EAAE8D,CAAC,CAACC,MAAM,CAACxD,KAAK,CAAE;UAChE6D,WAAW,EAAC,aAAa;UACzB7C,SAAS,GAAAoB,qBAAA,GAAE7C,QAAQ,CAACqB,UAAU,cAAAwB,qBAAA,uBAAnBA,qBAAA,CAAqBpB;QAAU;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C,CACF,EAEAvD,QAAQ,CAACC,IAAI,KAAK,WAAW,iBAC5BrB,OAAA;UACEqE,SAAS,EAAC,YAAY;UACtBxC,KAAK,EAAEA,KAAK,IAAI,EAAG;UACnBsD,QAAQ,EAAGC,CAAC,IAAKtC,iBAAiB,CAAC1B,QAAQ,CAACE,EAAE,EAAE8D,CAAC,CAACC,MAAM,CAACxD,KAAK,CAAE;UAChE6D,WAAW,EAAC,aAAa;UACzBC,IAAI,EAAE,CAAE;UACR9C,SAAS,GAAAqB,qBAAA,GAAE9C,QAAQ,CAACqB,UAAU,cAAAyB,qBAAA,uBAAnBA,qBAAA,CAAqBrB;QAAU;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C,CACF,EAEAvD,QAAQ,CAACC,IAAI,KAAK,SAAS,iBAC1BrB,OAAA;UACEqB,IAAI,EAAC,QAAQ;UACbgD,SAAS,EAAC,YAAY;UACtBxC,KAAK,EAAEA,KAAK,IAAI,EAAG;UACnBsD,QAAQ,EAAGC,CAAC,IAAKtC,iBAAiB,CAAC1B,QAAQ,CAACE,EAAE,EAAEe,UAAU,CAAC+C,CAAC,CAACC,MAAM,CAACxD,KAAK,CAAC,IAAI,EAAE,CAAE;UAClF6D,WAAW,EAAC,aAAa;UACzBhD,GAAG,GAAAyB,qBAAA,GAAE/C,QAAQ,CAACqB,UAAU,cAAA0B,qBAAA,uBAAnBA,qBAAA,CAAqBzB,GAAI;UAC9BE,GAAG,GAAAwB,qBAAA,GAAEhD,QAAQ,CAACqB,UAAU,cAAA2B,qBAAA,uBAAnBA,qBAAA,CAAqBxB;QAAI;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CACF,EAEAvD,QAAQ,CAACC,IAAI,KAAK,aAAa,iBAC9BrB,OAAA;UACEqB,IAAI,EAAC,MAAM;UACXgD,SAAS,EAAC,YAAY;UACtBc,QAAQ,EAAGC,CAAC;YAAA,IAAAQ,eAAA;YAAA,OAAK9C,iBAAiB,CAAC1B,QAAQ,CAACE,EAAE,EAAE,EAAAsE,eAAA,GAAAR,CAAC,CAACC,MAAM,CAACQ,KAAK,cAAAD,eAAA,uBAAdA,eAAA,CAAiB,CAAC,CAAC,KAAI,IAAI,CAAC;UAAA;QAAC;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9E,CACF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,EAELhB,KAAK,iBACJ3D,OAAA;QAAGqE,SAAS,EAAC,2BAA2B;QAAAC,QAAA,EAAEX;MAAK;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CACpD;IAAA,GAnGOvD,QAAQ,CAACE,EAAE;MAAAkD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAoGhB,CAAC;EAEV,CAAC;EAED,MAAMmB,kBAAkB,GAAG5F,UAAU,CAACc,QAAQ,CAACL,cAAc,CAAC;EAC9D,MAAMoF,QAAQ,GAAI,CAACpF,cAAc,GAAG,CAAC,IAAIT,UAAU,CAACc,QAAQ,CAACiB,MAAM,GAAI,GAAG;EAE1E,oBACEjC,OAAA;IAAKqE,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BtE,OAAA;MAAKqE,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BtE,OAAA;QAAKqE,SAAS,EAAC,wCAAwC;QAAAC,QAAA,gBACrDtE,OAAA;UAAIqE,SAAS,EAAC,oBAAoB;UAAAC,QAAA,EAAEpE,UAAU,CAACqE;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC1D3E,OAAA;UAAQqE,SAAS,EAAC,mBAAmB;UAAC2B,OAAO,EAAE3F,OAAQ;UAAAiE,QAAA,EAAC;QAExD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EAELzE,UAAU,CAAC0E,WAAW,iBACrB5E,OAAA;QAAGqE,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAEpE,UAAU,CAAC0E;MAAW;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAC9D,eAED3E,OAAA;QAAKqE,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAChCtE,OAAA;UAAKqE,SAAS,EAAC,aAAa;UAAAC,QAAA,eAC1BtE,OAAA;YACEqE,SAAS,EAAC,eAAe;YACzB4B,KAAK,EAAE;cAAEC,KAAK,EAAE,GAAGH,QAAQ;YAAI;UAAE;YAAAvB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN3E,OAAA;UAAKqE,SAAS,EAAC,eAAe;UAAAC,QAAA,GAAC,UACrB,EAAC3D,cAAc,GAAG,CAAC,EAAC,MAAI,EAACT,UAAU,CAACc,QAAQ,CAACiB,MAAM;QAAA;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN3E,OAAA;MAAKqE,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BtE,OAAA;QAAKqE,SAAS,EAAC,qBAAqB;QAAAC,QAAA,eAClCtE,OAAA;UAAIqE,SAAS,EAAC,uBAAuB;UAAAC,QAAA,EAAEwB,kBAAkB,CAACvB;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE,CAAC,eAEN3E,OAAA;QAAKqE,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAC5BwB,kBAAkB,CAAC3E,SAAS,CAAC2D,GAAG,CAAChB,cAAc;MAAC;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN3E,OAAA;MAAKqE,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC/BtE,OAAA;QAAKqE,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBACnCtE,OAAA;UACEqE,SAAS,EAAC,mBAAmB;UAC7B2B,OAAO,EAAE7C,cAAe;UACxBgD,QAAQ,EAAExF,cAAc,KAAK,CAAE;UAAA2D,QAAA,EAChC;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAET3E,OAAA;UAAKqE,SAAS,EAAC,YAAY;UAAAC,QAAA,EACxB3D,cAAc,KAAKT,UAAU,CAACc,QAAQ,CAACiB,MAAM,GAAG,CAAC,gBAChDjC,OAAA;YACEqE,SAAS,EAAC,iBAAiB;YAC3B2B,OAAO,EAAE5C,YAAa;YACtB+C,QAAQ,EAAEtF,YAAa;YAAAyD,QAAA,EAEtBzD,YAAY,GAAG,eAAe,GAAG;UAAmB;YAAA2D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/C,CAAC,gBAET3E,OAAA;YACEqE,SAAS,EAAC,iBAAiB;YAC3B2B,OAAO,EAAE9C,UAAW;YAAAoB,QAAA,EACrB;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QACT;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrE,EAAA,CA5TIL,cAA6C;AAAAmG,EAAA,GAA7CnG,cAA6C;AA8TnD,eAAeA,cAAc;AAAC,IAAAmG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}