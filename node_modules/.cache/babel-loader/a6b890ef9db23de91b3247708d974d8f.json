{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\Desktop\\\\talentflow-mini-hiring-platform\\\\TalentFlow\\\\src\\\\components\\\\JobList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobList = () => {\n  _s();\n  const [jobs, setJobs] = useState([{\n    id: '1',\n    title: 'Frontend Developer',\n    description: 'React/TypeScript developer needed',\n    location: 'Remote',\n    status: 'active',\n    tags: ['React', 'TypeScript', 'Frontend'],\n    order: 1,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString()\n  }, {\n    id: '2',\n    title: 'Backend Developer',\n    description: 'Node.js developer needed',\n    location: 'New York',\n    status: 'active',\n    tags: ['Node.js', 'Backend', 'API'],\n    order: 2,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString()\n  }]);\n  const [filter, setFilter] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const jobsPerPage = 10;\n  const filteredJobs = jobs.filter(job => job.title.toLowerCase().includes(filter.toLowerCase()));\n  const totalPages = Math.ceil(filteredJobs.length / jobsPerPage);\n  const currentJobs = filteredJobs.slice((currentPage - 1) * jobsPerPage, currentPage * jobsPerPage);\n  const handleCreateJob = () => {\n    // Logic to create a new job\n  };\n  const handleEditJob = jobId => {\n    // Logic to edit a job\n  };\n  const handleArchiveJob = jobId => {\n    // Logic to archive a job\n  };\n  const handleReorderJobs = (jobId, direction) => {\n    // Logic to reorder jobs\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Job List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Filter jobs...\",\n      value: filter,\n      onChange: e => setFilter(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateJob,\n      children: \"Create Job\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: currentJobs.map(job => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [job.title, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditJob(job.id),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleArchiveJob(job.id),\n          children: \"Archive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleReorderJobs(job.id, 'up'),\n          children: \"Move Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleReorderJobs(job.id, 'down'),\n          children: \"Move Down\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)]\n      }, job.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(prev => Math.max(prev - 1, 1)),\n        disabled: currentPage === 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentPage, \" of \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(prev => Math.min(prev + 1, totalPages)),\n        disabled: currentPage === totalPages,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(JobList, \"idMJA6P/e4qWwusJzqtZHzc7JyY=\");\n_c = JobList;\nexport default JobList;\nvar _c;\n$RefreshReg$(_c, \"JobList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","JobList","_s","jobs","setJobs","id","title","description","location","status","tags","order","createdAt","Date","toISOString","updatedAt","filter","setFilter","currentPage","setCurrentPage","jobsPerPage","filteredJobs","job","toLowerCase","includes","totalPages","Math","ceil","length","currentJobs","slice","handleCreateJob","handleEditJob","jobId","handleArchiveJob","handleReorderJobs","direction","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","prev","max","disabled","min","_c","$RefreshReg$"],"sources":["C:/Users/shiva/Desktop/talentflow-mini-hiring-platform/TalentFlow/src/components/JobList.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Job } from '../types';\n\nconst JobList = () => {\n    const [jobs, setJobs] = useState<Job[]>([\n        {\n            id: '1',\n            title: 'Frontend Developer',\n            description: 'React/TypeScript developer needed',\n            location: 'Remote',\n            status: 'active',\n            tags: ['React', 'TypeScript', 'Frontend'],\n            order: 1,\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString()\n        },\n        {\n            id: '2',\n            title: 'Backend Developer',\n            description: 'Node.js developer needed',\n            location: 'New York',\n            status: 'active',\n            tags: ['Node.js', 'Backend', 'API'],\n            order: 2,\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString()\n        }\n    ]);\n    const [filter, setFilter] = useState('');\n    const [currentPage, setCurrentPage] = useState(1);\n    const jobsPerPage = 10;\n\n    const filteredJobs = jobs.filter(job => job.title.toLowerCase().includes(filter.toLowerCase()));\n    const totalPages = Math.ceil(filteredJobs.length / jobsPerPage);\n    const currentJobs = filteredJobs.slice((currentPage - 1) * jobsPerPage, currentPage * jobsPerPage);\n\n    const handleCreateJob = () => {\n        // Logic to create a new job\n    };\n\n    const handleEditJob = (jobId: string) => {\n        // Logic to edit a job\n    };\n\n    const handleArchiveJob = (jobId: string) => {\n        // Logic to archive a job\n    };\n\n    const handleReorderJobs = (jobId: string, direction: 'up' | 'down') => {\n        // Logic to reorder jobs\n    };\n\n    return (\n        <div>\n            <h2>Job List</h2>\n            <input \n                type=\"text\" \n                placeholder=\"Filter jobs...\" \n                value={filter} \n                onChange={(e) => setFilter(e.target.value)} \n            />\n            <button onClick={handleCreateJob}>Create Job</button>\n            <ul>\n                {currentJobs.map(job => (\n                    <li key={job.id}>\n                        {job.title}\n                        <button onClick={() => handleEditJob(job.id)}>Edit</button>\n                        <button onClick={() => handleArchiveJob(job.id)}>Archive</button>\n                        <button onClick={() => handleReorderJobs(job.id, 'up')}>Move Up</button>\n                        <button onClick={() => handleReorderJobs(job.id, 'down')}>Move Down</button>\n                    </li>\n                ))}\n            </ul>\n            <div>\n                <button \n                    onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))} \n                    disabled={currentPage === 1}\n                >\n                    Previous\n                </button>\n                <span>Page {currentPage} of {totalPages}</span>\n                <button \n                    onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))} \n                    disabled={currentPage === totalPages}\n                >\n                    Next\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default JobList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}