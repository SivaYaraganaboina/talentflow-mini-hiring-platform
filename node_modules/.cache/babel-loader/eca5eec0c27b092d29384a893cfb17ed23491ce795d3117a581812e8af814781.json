{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\Desktop\\\\talentflow-mini-hiring-platform\\\\TalentFlow\\\\src\\\\components\\\\JobList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport JobModal from './JobModal';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PAGE_SIZE = 6;\nconst JobList = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filter, setFilter] = useState('');\n  const [debouncedFilter, setDebouncedFilter] = useState('');\n  const [statusFilter, setStatusFilter] = useState('');\n  const [tagFilter, setTagFilter] = useState('');\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [editingJob, setEditingJob] = useState(null);\n\n  // Debounce search input\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedFilter(filter);\n    }, 300); // 300ms delay\n\n    return () => clearTimeout(timer);\n  }, [filter]);\n  useEffect(() => {\n    loadJobs();\n    // eslint-disable-next-line\n  }, [page, debouncedFilter, statusFilter, tagFilter]);\n  const loadJobs = async () => {\n    try {\n      var _data$pagination;\n      setLoading(true);\n      const params = new URLSearchParams({\n        page: page.toString(),\n        pageSize: PAGE_SIZE.toString(),\n        search: debouncedFilter,\n        status: statusFilter,\n        sort: 'order'\n      });\n      const response = await fetch(`/api/jobs?${params}`);\n      if (!response.ok) throw new Error('Failed to load jobs');\n      const data = await response.json();\n      setJobs(data.data);\n      setTotalPages(((_data$pagination = data.pagination) === null || _data$pagination === void 0 ? void 0 : _data$pagination.totalPages) || 1);\n    } catch (error) {\n      console.error('Error loading jobs:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Pagination logic (server-side filtering is already applied)\n  const paginatedJobs = jobs.slice((page - 1) * PAGE_SIZE, page * PAGE_SIZE);\n  const getStatusBadge = status => {\n    const badgeClass = status === 'active' ? 'badge-success' : 'badge-warning';\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `badge ${badgeClass}`,\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this);\n  };\n  const uniqueTags = Array.from(new Set(jobs.flatMap(job => job.tags)));\n\n  // Modal slug logic\n  const existingSlugs = jobs.map(job => job.title.trim().toLowerCase().replace(/\\s+/g, '-')).filter(slug => !editingJob || slug !== editingJob.title.trim().toLowerCase().replace(/\\s+/g, '-'));\n\n  // Create job handler\n  const handleCreateJob = async jobData => {\n    try {\n      console.log('JobList: Creating job with data:', jobData);\n      const response = await fetch('/api/jobs', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ...jobData,\n          status: 'active',\n          order: jobs.length + 1\n        })\n      });\n      console.log('JobList: Create job response status:', response.status);\n      if (!response.ok) throw new Error('Failed to create job');\n      setShowModal(false);\n      console.log('JobList: Reloading jobs after creation');\n      loadJobs();\n    } catch (error) {\n      console.error('Error creating job:', error);\n      alert('Failed to create job. Please try again.');\n    }\n  };\n\n  // Edit job handler\n  const handleEditJob = async jobData => {\n    if (!editingJob) return;\n    try {\n      const response = await fetch(`/api/jobs/${editingJob.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(jobData)\n      });\n      if (!response.ok) throw new Error('Failed to update job');\n      setShowModal(false);\n      loadJobs();\n    } catch (error) {\n      console.error('Error updating job:', error);\n      alert('Failed to update job. Please try again.');\n    }\n  };\n\n  // Archive/Unarchive handler\n  const handleArchiveJob = async job => {\n    try {\n      const response = await fetch(`/api/jobs/${job.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          status: job.status === 'active' ? 'archived' : 'active'\n        })\n      });\n      if (!response.ok) throw new Error('Failed to update job status');\n      loadJobs();\n    } catch (error) {\n      console.error('Error updating job status:', error);\n      alert('Failed to update job status. Please try again.');\n    }\n  };\n\n  // Drag-and-drop reorder handler\n  const handleDragEnd = async result => {\n    var _paginatedJobs$toInde;\n    if (!result.destination) return;\n    const fromIndex = result.source.index;\n    const toIndex = result.destination.index;\n    if (fromIndex === toIndex) return;\n    const movedJob = paginatedJobs[fromIndex];\n    const fromOrder = movedJob.order;\n    const toOrder = ((_paginatedJobs$toInde = paginatedJobs[toIndex]) === null || _paginatedJobs$toInde === void 0 ? void 0 : _paginatedJobs$toInde.order) || (page - 1) * PAGE_SIZE + toIndex + 1;\n\n    // Optimistic reorder\n    const reorderedJobs = Array.from(paginatedJobs);\n    const [removed] = reorderedJobs.splice(fromIndex, 1);\n    reorderedJobs.splice(toIndex, 0, removed);\n\n    // Update order locally\n    const updatedJobs = jobs.map(job => {\n      const idx = reorderedJobs.findIndex(j => j.id === job.id);\n      return idx !== -1 ? {\n        ...job,\n        order: (page - 1) * PAGE_SIZE + idx + 1\n      } : job;\n    });\n    setJobs(updatedJobs);\n    try {\n      const response = await fetch(`/api/jobs/${movedJob.id}/reorder`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          fromOrder,\n          toOrder\n        })\n      });\n      if (!response.ok) throw new Error('Failed to reorder');\n      loadJobs(); // Reload to get updated order from server\n    } catch (error) {\n      console.error('Error reordering jobs:', error);\n      setJobs(jobs); // Rollback\n      alert('Failed to reorder. Please try again.');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading jobs...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card-title\",\n          children: \"Job Listings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => {\n            setEditingJob(null);\n            setShowModal(true);\n          },\n          children: \"Create Job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-input\",\n          placeholder: \"Search jobs by title...\",\n          value: filter,\n          onChange: e => setFilter(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-input\",\n          value: statusFilter,\n          onChange: e => setStatusFilter(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"active\",\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"archived\",\n            children: \"Archived\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-input\",\n          value: tagFilter,\n          onChange: e => setTagFilter(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Tags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), uniqueTags.map(tag => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: tag,\n            children: tag\n          }, tag, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: handleDragEnd,\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"jobs-list\",\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-2\",\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            children: [paginatedJobs.map((job, index) =>\n            /*#__PURE__*/\n            // @ts-ignore\n            _jsxDEV(Draggable, {\n              draggableId: job.id,\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card\",\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between items-center mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(Link, {\n                    to: `/jobs/${job.id}`,\n                    className: \"hover:text-blue-600\",\n                    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"text-lg font-semibold\",\n                      children: job.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 27\n                  }, this), getStatusBadge(job.status)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"mb-3 text-gray-600\",\n                  children: job.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Location:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 27\n                  }, this), \" \", job.location]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Tags:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex gap-2 mt-1\",\n                    children: job.tags.map(tag => /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"badge badge-info\",\n                      children: tag\n                    }, tag, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 265,\n                      columnNumber: 31\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex gap-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-secondary\",\n                    onClick: () => {\n                      setEditingJob(job);\n                      setShowModal(true);\n                    },\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: `btn ${job.status === 'active' ? 'btn-danger' : 'btn-success'}`,\n                    onClick: () => handleArchiveJob(job),\n                    children: job.status === 'active' ? 'Archive' : 'Unarchive'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 23\n              }, this)\n            }, job.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center gap-2 mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          disabled: page === 1,\n          onClick: () => setPage(page - 1),\n          children: \"Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Page \", page, \" of \", totalPages]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          disabled: page === totalPages,\n          onClick: () => setPage(page + 1),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), paginatedJobs.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center p-6\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No jobs found matching your search.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(JobModal, {\n      onSave: editingJob ? handleEditJob : handleCreateJob,\n      onClose: () => setShowModal(false),\n      existingJob: editingJob ? {\n        title: editingJob.title,\n        description: editingJob.description,\n        location: editingJob.location,\n        tags: editingJob.tags\n      } : undefined,\n      existingSlugs: existingSlugs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n};\n_s(JobList, \"GFlhufFzTyuPZmFwvYTY83WpqLk=\");\n_c = JobList;\nexport default JobList;\nvar _c;\n$RefreshReg$(_c, \"JobList\");","map":{"version":3,"names":["React","useState","useEffect","Link","JobModal","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","PAGE_SIZE","JobList","_s","jobs","setJobs","loading","setLoading","filter","setFilter","debouncedFilter","setDebouncedFilter","statusFilter","setStatusFilter","tagFilter","setTagFilter","page","setPage","totalPages","setTotalPages","showModal","setShowModal","editingJob","setEditingJob","timer","setTimeout","clearTimeout","loadJobs","_data$pagination","params","URLSearchParams","toString","pageSize","search","status","sort","response","fetch","ok","Error","data","json","pagination","error","console","paginatedJobs","slice","getStatusBadge","badgeClass","className","children","fileName","_jsxFileName","lineNumber","columnNumber","uniqueTags","Array","from","Set","flatMap","job","tags","existingSlugs","map","title","trim","toLowerCase","replace","slug","handleCreateJob","jobData","log","method","headers","body","JSON","stringify","order","length","alert","handleEditJob","id","handleArchiveJob","handleDragEnd","result","_paginatedJobs$toInde","destination","fromIndex","source","index","toIndex","movedJob","fromOrder","toOrder","reorderedJobs","removed","splice","updatedJobs","idx","findIndex","j","onClick","type","placeholder","value","onChange","e","target","tag","onDragEnd","droppableId","provided","ref","innerRef","droppableProps","draggableId","draggableProps","dragHandleProps","to","description","location","disabled","onSave","onClose","existingJob","undefined","_c","$RefreshReg$"],"sources":["C:/Users/shiva/Desktop/talentflow-mini-hiring-platform/TalentFlow/src/components/JobList.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport JobModal from './JobModal';\nimport { DragDropContext, Droppable, Draggable, DropResult } from 'react-beautiful-dnd';\nimport { Job, ApiResponse } from '../types';\n\nconst PAGE_SIZE = 6;\n\nconst JobList: React.FC = () => {\n  const [jobs, setJobs] = useState<Job[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [filter, setFilter] = useState('');\n  const [debouncedFilter, setDebouncedFilter] = useState('');\n  const [statusFilter, setStatusFilter] = useState('');\n  const [tagFilter, setTagFilter] = useState('');\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [editingJob, setEditingJob] = useState<Job | null>(null);\n\n  // Debounce search input\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedFilter(filter);\n    }, 300); // 300ms delay\n\n    return () => clearTimeout(timer);\n  }, [filter]);\n\n  useEffect(() => {\n    loadJobs();\n    // eslint-disable-next-line\n  }, [page, debouncedFilter, statusFilter, tagFilter]);\n\n  const loadJobs = async () => {\n    try {\n      setLoading(true);\n      const params = new URLSearchParams({\n        page: page.toString(),\n        pageSize: PAGE_SIZE.toString(),\n        search: debouncedFilter,\n        status: statusFilter,\n        sort: 'order'\n      });\n\n      const response = await fetch(`/api/jobs?${params}`);\n      if (!response.ok) throw new Error('Failed to load jobs');\n\n      const data: ApiResponse<Job[]> = await response.json();\n      setJobs(data.data);\n      setTotalPages(data.pagination?.totalPages || 1);\n    } catch (error) {\n      console.error('Error loading jobs:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Pagination logic (server-side filtering is already applied)\n  const paginatedJobs = jobs.slice((page - 1) * PAGE_SIZE, page * PAGE_SIZE);\n\n  const getStatusBadge = (status: string) => {\n    const badgeClass = status === 'active' ? 'badge-success' : 'badge-warning';\n    return <span className={`badge ${badgeClass}`}>{status}</span>;\n  };\n\n  const uniqueTags = Array.from(new Set(jobs.flatMap(job => job.tags)));\n\n  // Modal slug logic\n  const existingSlugs = jobs\n    .map(job => job.title.trim().toLowerCase().replace(/\\s+/g, '-'))\n    .filter(slug => !editingJob || slug !== editingJob.title.trim().toLowerCase().replace(/\\s+/g, '-'));\n\n  // Create job handler\n  const handleCreateJob = async (jobData: { title: string; description: string; location: string; tags: string[] }) => {\n    try {\n      console.log('JobList: Creating job with data:', jobData);\n      const response = await fetch('/api/jobs', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          ...jobData,\n          status: 'active',\n          order: jobs.length + 1,\n        })\n      });\n\n      console.log('JobList: Create job response status:', response.status);\n      if (!response.ok) throw new Error('Failed to create job');\n\n      setShowModal(false);\n      console.log('JobList: Reloading jobs after creation');\n      loadJobs();\n    } catch (error) {\n      console.error('Error creating job:', error);\n      alert('Failed to create job. Please try again.');\n    }\n  };\n\n  // Edit job handler\n  const handleEditJob = async (jobData: { title: string; description: string; location: string; tags: string[] }) => {\n    if (!editingJob) return;\n\n    try {\n      const response = await fetch(`/api/jobs/${editingJob.id}`, {\n        method: 'PATCH',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(jobData)\n      });\n\n      if (!response.ok) throw new Error('Failed to update job');\n\n      setShowModal(false);\n      loadJobs();\n    } catch (error) {\n      console.error('Error updating job:', error);\n      alert('Failed to update job. Please try again.');\n    }\n  };\n\n  // Archive/Unarchive handler\n  const handleArchiveJob = async (job: Job) => {\n    try {\n      const response = await fetch(`/api/jobs/${job.id}`, {\n        method: 'PATCH',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          status: job.status === 'active' ? 'archived' : 'active'\n        })\n      });\n\n      if (!response.ok) throw new Error('Failed to update job status');\n\n      loadJobs();\n    } catch (error) {\n      console.error('Error updating job status:', error);\n      alert('Failed to update job status. Please try again.');\n    }\n  };\n\n  // Drag-and-drop reorder handler\n  const handleDragEnd = async (result: DropResult) => {\n    if (!result.destination) return;\n    const fromIndex = result.source.index;\n    const toIndex = result.destination.index;\n    if (fromIndex === toIndex) return;\n\n    const movedJob = paginatedJobs[fromIndex];\n    const fromOrder = movedJob.order;\n    const toOrder = paginatedJobs[toIndex]?.order || (page - 1) * PAGE_SIZE + toIndex + 1;\n\n    // Optimistic reorder\n    const reorderedJobs = Array.from(paginatedJobs);\n    const [removed] = reorderedJobs.splice(fromIndex, 1);\n    reorderedJobs.splice(toIndex, 0, removed);\n\n    // Update order locally\n    const updatedJobs = jobs.map(job => {\n      const idx = reorderedJobs.findIndex(j => j.id === job.id);\n      return idx !== -1 ? { ...job, order: (page - 1) * PAGE_SIZE + idx + 1 } : job;\n    });\n    setJobs(updatedJobs);\n\n    try {\n      const response = await fetch(`/api/jobs/${movedJob.id}/reorder`, {\n        method: 'PATCH',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ fromOrder, toOrder })\n      });\n\n      if (!response.ok) throw new Error('Failed to reorder');\n\n      loadJobs(); // Reload to get updated order from server\n    } catch (error) {\n      console.error('Error reordering jobs:', error);\n      setJobs(jobs); // Rollback\n      alert('Failed to reorder. Please try again.');\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"container\">\n        <div className=\"loading\">\n          <div className=\"spinner\"></div>\n          <p>Loading jobs...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <h2 className=\"card-title\">Job Listings</h2>\n          <button className=\"btn btn-primary\" onClick={() => { setEditingJob(null); setShowModal(true); }}>\n            Create Job\n          </button>\n        </div>\n        \n        <div className=\"form-group flex gap-2\">\n          <input\n            type=\"text\"\n            className=\"form-input\"\n            placeholder=\"Search jobs by title...\"\n            value={filter}\n            onChange={(e) => setFilter(e.target.value)}\n          />\n          <select\n            className=\"form-input\"\n            value={statusFilter}\n            onChange={e => setStatusFilter(e.target.value)}\n          >\n            <option value=\"\">All Status</option>\n            <option value=\"active\">Active</option>\n            <option value=\"archived\">Archived</option>\n          </select>\n          <select\n            className=\"form-input\"\n            value={tagFilter}\n            onChange={e => setTagFilter(e.target.value)}\n          >\n            <option value=\"\">All Tags</option>\n            {uniqueTags.map(tag => (\n              <option key={tag} value={tag}>{tag}</option>\n            ))}\n          </select>\n        </div>\n\n        {/* @ts-ignore */}\n        <DragDropContext onDragEnd={handleDragEnd}>\n          {/* @ts-ignore */}\n          <Droppable droppableId=\"jobs-list\">\n            {(provided) => (\n              <div className=\"grid grid-2\" ref={provided.innerRef} {...provided.droppableProps}>\n                {paginatedJobs.map((job, index) => (\n                  // @ts-ignore\n                  <Draggable\n                    key={job.id}\n                    draggableId={job.id}\n                    index={index}\n                  >\n                    {(provided: any) => (\n                      <div\n                        className=\"card\"\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                      >\n                        <div className=\"flex justify-between items-center mb-2\">\n                          <Link to={`/jobs/${job.id}`} className=\"hover:text-blue-600\">\n                            <h3 className=\"text-lg font-semibold\">{job.title}</h3>\n                          </Link>\n                          {getStatusBadge(job.status)}\n                        </div>\n                        <p className=\"mb-3 text-gray-600\">{job.description}</p>\n                        <div className=\"mb-3\">\n                          <strong>Location:</strong> {job.location}\n                        </div>\n                        <div className=\"mb-3\">\n                          <strong>Tags:</strong>\n                          <div className=\"flex gap-2 mt-1\">\n                            {job.tags.map(tag => (\n                              <span key={tag} className=\"badge badge-info\">{tag}</span>\n                            ))}\n                          </div>\n                        </div>\n                        <div className=\"flex gap-2\">\n                          <button\n                            className=\"btn btn-secondary\"\n                            onClick={() => { setEditingJob(job); setShowModal(true); }}\n                          >\n                            Edit\n                          </button>\n                          <button\n                            className={`btn ${job.status === 'active' ? 'btn-danger' : 'btn-success'}`}\n                            onClick={() => handleArchiveJob(job)}\n                          >\n                            {job.status === 'active' ? 'Archive' : 'Unarchive'}\n                          </button>\n                        </div>\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n\n        {/* Pagination Controls */}\n        <div className=\"flex justify-center gap-2 mt-4\">\n          <button\n            className=\"btn\"\n            disabled={page === 1}\n            onClick={() => setPage(page - 1)}\n          >\n            Prev\n          </button>\n          <span>Page {page} of {totalPages}</span>\n          <button\n            className=\"btn\"\n            disabled={page === totalPages}\n            onClick={() => setPage(page + 1)}\n          >\n            Next\n          </button>\n        </div>\n\n        {paginatedJobs.length === 0 && (\n          <div className=\"text-center p-6\">\n            <p>No jobs found matching your search.</p>\n          </div>\n        )}\n      </div>\n      {/* Modal for create/edit */}\n      {showModal && (\n        <JobModal\n          onSave={editingJob ? handleEditJob : handleCreateJob}\n          onClose={() => setShowModal(false)}\n          existingJob={editingJob ? {\n            title: editingJob.title,\n            description: editingJob.description,\n            location: editingJob.location,\n            tags: editingJob.tags,\n          } : undefined}\n          existingSlugs={existingSlugs}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default JobList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}