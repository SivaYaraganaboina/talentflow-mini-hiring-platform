{"ast":null,"code":"import _objectSpread from\"C:/Users/shiva/Desktop/talentflow-mini-hiring-platform/TalentFlow/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// Simple mock data service\nexport const mockJobs=[{id:'1',title:'Frontend Developer - TechCorp',description:'We are looking for a talented Frontend Developer to join our team. This role involves working on cutting-edge projects and collaborating with a diverse team of professionals.',location:'San Francisco, CA',status:'active',tags:['React','TypeScript','Frontend'],order:1,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},{id:'2',title:'Backend Developer - DataFlow',description:'Join our backend team to build scalable APIs and microservices. Experience with Node.js, Python, or Go required.',location:'New York, NY',status:'active',tags:['Node.js','Backend','API'],order:2,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},{id:'3',title:'Full Stack Developer - CloudTech',description:'Looking for a full-stack developer to work on our cloud platform. Experience with React, Node.js, and AWS required.',location:'Remote',status:'archived',tags:['React','Node.js','AWS'],order:3,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()}];export const mockCandidates=[{id:'1',name:'John Doe',email:'john.doe@email.com',phone:'+1-555-0123',resume:'John_Doe_Resume.pdf',status:'applied',stage:'applied',jobId:'1',appliedAt:new Date().toISOString(),timeline:[{id:'timeline-1',stage:'applied',timestamp:new Date().toISOString(),notes:'Application submitted'}]},{id:'2',name:'Jane Smith',email:'jane.smith@email.com',phone:'+1-555-0124',resume:'Jane_Smith_Resume.pdf',status:'screen',stage:'screen',jobId:'1',appliedAt:new Date().toISOString(),timeline:[{id:'timeline-2',stage:'screen',timestamp:new Date().toISOString(),notes:'Moved to screen stage'}]},{id:'3',name:'Mike Johnson',email:'mike.johnson@email.com',phone:'+1-555-0125',resume:'Mike_Johnson_Resume.pdf',status:'tech',stage:'tech',jobId:'2',appliedAt:new Date().toISOString(),timeline:[{id:'timeline-3',stage:'tech',timestamp:new Date().toISOString(),notes:'Technical interview scheduled'}]}];export const mockAssessments=[{id:'assessment-1',jobId:'1',title:'Frontend Developer Assessment',description:'This assessment evaluates technical skills and problem-solving abilities for frontend development.',sections:[{id:'section-1',title:'Technical Skills',questions:[{id:'q-1',type:'single-choice',title:'What is React?',description:'Choose the best answer',required:true,options:['A JavaScript library','A programming language','A database','A framework']},{id:'q-2',type:'short-text',title:'Explain the concept of virtual DOM',description:'Provide a brief explanation',required:true,validation:{maxLength:200}}]}],createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()}];// Simple API simulation\nexport const delay=ms=>new Promise(resolve=>setTimeout(resolve,ms));export const jobsApi={getJobs:async()=>{await delay(500);return{data:mockJobs,pagination:{page:1,pageSize:10,total:mockJobs.length,totalPages:1}};},createJob:async job=>{await delay(300);const newJob=_objectSpread(_objectSpread({},job),{},{id:Date.now().toString(),createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()});mockJobs.push(newJob);return newJob;},updateJob:async(id,updates)=>{await delay(300);const index=mockJobs.findIndex(job=>job.id===id);if(index>=0){mockJobs[index]=_objectSpread(_objectSpread(_objectSpread({},mockJobs[index]),updates),{},{updatedAt:new Date().toISOString()});return mockJobs[index];}throw new Error('Job not found');}};export const candidatesApi={getCandidates:async()=>{await delay(500);return{data:mockCandidates,pagination:{page:1,pageSize:20,total:mockCandidates.length,totalPages:1}};},createCandidate:async candidate=>{await delay(300);const newCandidate=_objectSpread(_objectSpread({},candidate),{},{id:Date.now().toString(),appliedAt:new Date().toISOString()});mockCandidates.push(newCandidate);return newCandidate;},updateCandidate:async(id,updates)=>{await delay(300);const index=mockCandidates.findIndex(candidate=>candidate.id===id);if(index>=0){mockCandidates[index]=_objectSpread(_objectSpread({},mockCandidates[index]),updates);return mockCandidates[index];}throw new Error('Candidate not found');}};export const assessmentsApi={getAssessment:async jobId=>{await delay(300);const assessment=mockAssessments.find(a=>a.jobId===jobId);if(!assessment){throw new Error('Assessment not found');}return assessment;}};","map":{"version":3,"names":["mockJobs","id","title","description","location","status","tags","order","createdAt","Date","toISOString","updatedAt","mockCandidates","name","email","phone","resume","stage","jobId","appliedAt","timeline","timestamp","notes","mockAssessments","sections","questions","type","required","options","validation","maxLength","delay","ms","Promise","resolve","setTimeout","jobsApi","getJobs","data","pagination","page","pageSize","total","length","totalPages","createJob","job","newJob","_objectSpread","now","toString","push","updateJob","updates","index","findIndex","Error","candidatesApi","getCandidates","createCandidate","candidate","newCandidate","updateCandidate","assessmentsApi","getAssessment","assessment","find","a"],"sources":["C:/Users/shiva/Desktop/talentflow-mini-hiring-platform/TalentFlow/src/services/mockData.ts"],"sourcesContent":["// Simple mock data service\r\nexport const mockJobs = [\r\n  {\r\n    id: '1',\r\n    title: 'Frontend Developer - TechCorp',\r\n    description: 'We are looking for a talented Frontend Developer to join our team. This role involves working on cutting-edge projects and collaborating with a diverse team of professionals.',\r\n    location: 'San Francisco, CA',\r\n    status: 'active',\r\n    tags: ['React', 'TypeScript', 'Frontend'],\r\n    order: 1,\r\n    createdAt: new Date().toISOString(),\r\n    updatedAt: new Date().toISOString()\r\n  },\r\n  {\r\n    id: '2',\r\n    title: 'Backend Developer - DataFlow',\r\n    description: 'Join our backend team to build scalable APIs and microservices. Experience with Node.js, Python, or Go required.',\r\n    location: 'New York, NY',\r\n    status: 'active',\r\n    tags: ['Node.js', 'Backend', 'API'],\r\n    order: 2,\r\n    createdAt: new Date().toISOString(),\r\n    updatedAt: new Date().toISOString()\r\n  },\r\n  {\r\n    id: '3',\r\n    title: 'Full Stack Developer - CloudTech',\r\n    description: 'Looking for a full-stack developer to work on our cloud platform. Experience with React, Node.js, and AWS required.',\r\n    location: 'Remote',\r\n    status: 'archived',\r\n    tags: ['React', 'Node.js', 'AWS'],\r\n    order: 3,\r\n    createdAt: new Date().toISOString(),\r\n    updatedAt: new Date().toISOString()\r\n  }\r\n];\r\n\r\nexport const mockCandidates = [\r\n  {\r\n    id: '1',\r\n    name: 'John Doe',\r\n    email: 'john.doe@email.com',\r\n    phone: '+1-555-0123',\r\n    resume: 'John_Doe_Resume.pdf',\r\n    status: 'applied',\r\n    stage: 'applied',\r\n    jobId: '1',\r\n    appliedAt: new Date().toISOString(),\r\n    timeline: [{\r\n      id: 'timeline-1',\r\n      stage: 'applied',\r\n      timestamp: new Date().toISOString(),\r\n      notes: 'Application submitted'\r\n    }]\r\n  },\r\n  {\r\n    id: '2',\r\n    name: 'Jane Smith',\r\n    email: 'jane.smith@email.com',\r\n    phone: '+1-555-0124',\r\n    resume: 'Jane_Smith_Resume.pdf',\r\n    status: 'screen',\r\n    stage: 'screen',\r\n    jobId: '1',\r\n    appliedAt: new Date().toISOString(),\r\n    timeline: [{\r\n      id: 'timeline-2',\r\n      stage: 'screen',\r\n      timestamp: new Date().toISOString(),\r\n      notes: 'Moved to screen stage'\r\n    }]\r\n  },\r\n  {\r\n    id: '3',\r\n    name: 'Mike Johnson',\r\n    email: 'mike.johnson@email.com',\r\n    phone: '+1-555-0125',\r\n    resume: 'Mike_Johnson_Resume.pdf',\r\n    status: 'tech',\r\n    stage: 'tech',\r\n    jobId: '2',\r\n    appliedAt: new Date().toISOString(),\r\n    timeline: [{\r\n      id: 'timeline-3',\r\n      stage: 'tech',\r\n      timestamp: new Date().toISOString(),\r\n      notes: 'Technical interview scheduled'\r\n    }]\r\n  }\r\n];\r\n\r\nexport const mockAssessments = [\r\n  {\r\n    id: 'assessment-1',\r\n    jobId: '1',\r\n    title: 'Frontend Developer Assessment',\r\n    description: 'This assessment evaluates technical skills and problem-solving abilities for frontend development.',\r\n    sections: [\r\n      {\r\n        id: 'section-1',\r\n        title: 'Technical Skills',\r\n        questions: [\r\n          {\r\n            id: 'q-1',\r\n            type: 'single-choice',\r\n            title: 'What is React?',\r\n            description: 'Choose the best answer',\r\n            required: true,\r\n            options: ['A JavaScript library', 'A programming language', 'A database', 'A framework']\r\n          },\r\n          {\r\n            id: 'q-2',\r\n            type: 'short-text',\r\n            title: 'Explain the concept of virtual DOM',\r\n            description: 'Provide a brief explanation',\r\n            required: true,\r\n            validation: { maxLength: 200 }\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    createdAt: new Date().toISOString(),\r\n    updatedAt: new Date().toISOString()\r\n  }\r\n];\r\n\r\n// Simple API simulation\r\nexport const delay = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\nexport const jobsApi = {\r\n  getJobs: async () => {\r\n    await delay(500);\r\n    return { data: mockJobs, pagination: { page: 1, pageSize: 10, total: mockJobs.length, totalPages: 1 } };\r\n  },\r\n  createJob: async (job: any) => {\r\n    await delay(300);\r\n    const newJob = { ...job, id: Date.now().toString(), createdAt: new Date().toISOString(), updatedAt: new Date().toISOString() };\r\n    mockJobs.push(newJob);\r\n    return newJob;\r\n  },\r\n  updateJob: async (id: string, updates: any) => {\r\n    await delay(300);\r\n    const index = mockJobs.findIndex(job => job.id === id);\r\n    if (index >= 0) {\r\n      mockJobs[index] = { ...mockJobs[index], ...updates, updatedAt: new Date().toISOString() };\r\n      return mockJobs[index];\r\n    }\r\n    throw new Error('Job not found');\r\n  }\r\n};\r\n\r\nexport const candidatesApi = {\r\n  getCandidates: async () => {\r\n    await delay(500);\r\n    return { data: mockCandidates, pagination: { page: 1, pageSize: 20, total: mockCandidates.length, totalPages: 1 } };\r\n  },\r\n  createCandidate: async (candidate: any) => {\r\n    await delay(300);\r\n    const newCandidate = { ...candidate, id: Date.now().toString(), appliedAt: new Date().toISOString() };\r\n    mockCandidates.push(newCandidate);\r\n    return newCandidate;\r\n  },\r\n  updateCandidate: async (id: string, updates: any) => {\r\n    await delay(300);\r\n    const index = mockCandidates.findIndex(candidate => candidate.id === id);\r\n    if (index >= 0) {\r\n      mockCandidates[index] = { ...mockCandidates[index], ...updates };\r\n      return mockCandidates[index];\r\n    }\r\n    throw new Error('Candidate not found');\r\n  }\r\n};\r\n\r\nexport const assessmentsApi = {\r\n  getAssessment: async (jobId: string) => {\r\n    await delay(300);\r\n    const assessment = mockAssessments.find(a => a.jobId === jobId);\r\n    if (!assessment) {\r\n      throw new Error('Assessment not found');\r\n    }\r\n    return assessment;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}