{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\Desktop\\\\talentflow-mini-hiring-platform\\\\TalentFlow\\\\src\\\\components\\\\AssessmentBuilder.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ArrowLeftIcon } from '@heroicons/react/24/outline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questionTypes = [{\n  value: 'single-choice',\n  label: 'Single Choice'\n}, {\n  value: 'multi-choice',\n  label: 'Multiple Choice'\n}, {\n  value: 'short-text',\n  label: 'Short Text'\n}, {\n  value: 'long-text',\n  label: 'Long Text'\n}, {\n  value: 'numeric',\n  label: 'Numeric'\n}, {\n  value: 'file-upload',\n  label: 'File Upload'\n}];\nconst AssessmentBuilder = ({\n  jobId,\n  onSave,\n  onClose\n}) => {\n  _s();\n  const [assessment, setAssessment] = useState({\n    id: '',\n    jobId,\n    title: '',\n    description: '',\n    sections: [],\n    enableScoring: false,\n    createdAt: '',\n    updatedAt: ''\n  });\n  const [loading, setLoading] = useState(true);\n  const [activeSection, setActiveSection] = useState(null);\n  const [activeQuestion, setActiveQuestion] = useState(null);\n  useEffect(() => {\n    console.log('AssessmentBuilder useEffect - jobId:', jobId);\n    if (jobId) {\n      loadAssessment();\n    } else {\n      console.warn('AssessmentBuilder: No jobId provided');\n      setLoading(false);\n    }\n  }, [jobId]);\n  const loadAssessment = async () => {\n    if (!jobId) {\n      console.warn('loadAssessment: No jobId provided');\n      setLoading(false);\n      return;\n    }\n    try {\n      setLoading(true);\n      console.log('Loading assessment for jobId:', jobId);\n\n      // Add timeout to prevent hanging\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 5000);\n      const response = await fetch(`/api/assessments/${jobId}`, {\n        signal: controller.signal\n      });\n      clearTimeout(timeoutId);\n      console.log('Assessment response:', response.status, response.ok);\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Assessment data:', data);\n        if (data.data) {\n          setAssessment(data.data);\n        } else {\n          console.log('No existing assessment found, starting with empty assessment');\n          setAssessment({\n            id: '',\n            jobId,\n            title: '',\n            description: '',\n            sections: [],\n            enableScoring: false,\n            createdAt: '',\n            updatedAt: ''\n          });\n        }\n      } else {\n        console.log('Assessment not found, starting with empty assessment');\n        setAssessment({\n          id: '',\n          jobId,\n          title: '',\n          description: '',\n          sections: [],\n          enableScoring: false,\n          createdAt: '',\n          updatedAt: ''\n        });\n      }\n    } catch (error) {\n      console.error('Error loading assessment:', error);\n      // Initialize with empty assessment on error\n      setAssessment({\n        id: '',\n        jobId,\n        title: '',\n        description: '',\n        sections: [],\n        enableScoring: false,\n        createdAt: '',\n        updatedAt: ''\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSave = async () => {\n    if (!assessment.title.trim()) {\n      alert('Please enter an assessment title');\n      return;\n    }\n    try {\n      console.log('Saving assessment:', assessment);\n      const response = await fetch(`/api/assessments/${jobId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ...assessment,\n          jobId,\n          updatedAt: new Date().toISOString(),\n          createdAt: assessment.createdAt || new Date().toISOString()\n        })\n      });\n      console.log('Save response:', response.status, response.ok);\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('Save failed:', errorText);\n        throw new Error('Failed to save assessment');\n      }\n      const data = await response.json();\n      console.log('Assessment saved successfully:', data);\n      alert('Assessment saved successfully!');\n      onSave(data.data);\n    } catch (error) {\n      console.error('Error saving assessment:', error);\n      alert('Failed to save assessment. Please try again.');\n    }\n  };\n  const addSection = () => {\n    const newSection = {\n      id: `section-${Date.now()}`,\n      title: 'New Section',\n      questions: []\n    };\n    setAssessment(prev => ({\n      ...prev,\n      sections: [...prev.sections, newSection]\n    }));\n  };\n  const updateSection = (sectionIndex, updates) => {\n    setAssessment(prev => ({\n      ...prev,\n      sections: prev.sections.map((section, index) => index === sectionIndex ? {\n        ...section,\n        ...updates\n      } : section)\n    }));\n  };\n  const deleteSection = sectionIndex => {\n    setAssessment(prev => ({\n      ...prev,\n      sections: prev.sections.filter((_, index) => index !== sectionIndex)\n    }));\n  };\n  const addQuestion = sectionIndex => {\n    const newQuestion = {\n      id: `question-${Date.now()}`,\n      type: 'short-text',\n      title: 'New Question',\n      description: '',\n      required: false,\n      options: [],\n      points: 1,\n      validation: {}\n    };\n    setAssessment(prev => ({\n      ...prev,\n      sections: prev.sections.map((section, index) => index === sectionIndex ? {\n        ...section,\n        questions: [...section.questions, newQuestion]\n      } : section)\n    }));\n  };\n  const updateQuestion = (sectionIndex, questionIndex, updates) => {\n    setAssessment(prev => ({\n      ...prev,\n      sections: prev.sections.map((section, sIndex) => sIndex === sectionIndex ? {\n        ...section,\n        questions: section.questions.map((question, qIndex) => qIndex === questionIndex ? {\n          ...question,\n          ...updates\n        } : question)\n      } : section)\n    }));\n  };\n  const deleteQuestion = (sectionIndex, questionIndex) => {\n    setAssessment(prev => ({\n      ...prev,\n      sections: prev.sections.map((section, sIndex) => sIndex === sectionIndex ? {\n        ...section,\n        questions: section.questions.filter((_, qIndex) => qIndex !== questionIndex)\n      } : section)\n    }));\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 dark:text-gray-400\",\n          children: \"Loading assessment builder...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50 dark:bg-gray-900\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center mb-6\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"inline-flex items-center text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white transition-colors\",\n          children: [/*#__PURE__*/_jsxDEV(ArrowLeftIcon, {\n            className: \"w-5 h-5 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), \"Back to Assessments\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold text-gray-900 dark:text-white\",\n            children: assessment.id ? 'Edit Assessment' : 'Create Assessment'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), assessment.id && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600 dark:text-gray-400 mt-1\",\n            children: [\"Last updated: \", assessment.updatedAt ? new Date(assessment.updatedAt).toLocaleDateString() : 'Never']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 text-gray-600 dark:text-gray-400 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors\",\n            onClick: onClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors\",\n            onClick: handleSave,\n            children: assessment.id ? 'Update Assessment' : 'Save Assessment'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-2 gap-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-lg font-semibold text-gray-900 dark:text-white\",\n                children: \"Assessment Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 17\n              }, this), assessment.id && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"px-2 py-1 bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200 text-xs font-medium rounded-full\",\n                children: \"Existing Assessment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\",\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",\n                  value: assessment.title,\n                  onChange: e => setAssessment(prev => ({\n                    ...prev,\n                    title: e.target.value\n                  })),\n                  placeholder: \"Assessment Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\",\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  className: \"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",\n                  value: assessment.description,\n                  onChange: e => setAssessment(prev => ({\n                    ...prev,\n                    description: e.target.value\n                  })),\n                  placeholder: \"Assessment Description\",\n                  rows: 3\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"flex items-center text-sm text-gray-700 dark:text-gray-300\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    className: \"mr-2 rounded border-gray-300 dark:border-gray-600 text-blue-600 focus:ring-blue-500\",\n                    checked: assessment.enableScoring,\n                    onChange: e => setAssessment(prev => ({\n                      ...prev,\n                      enableScoring: e.target.checked\n                    }))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 21\n                  }, this), \"Enable Automatic Scoring\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-xs text-gray-500 dark:text-gray-400 mt-1\",\n                  children: \"When enabled, you can set correct answers for questions and get automatic scores for submissions.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: assessment.sections.map((section, sectionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-between mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"flex-1 text-lg font-semibold bg-transparent border-none text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 rounded px-2 py-1\",\n                  value: section.title,\n                  onChange: e => updateSection(sectionIndex, {\n                    title: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex gap-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"px-3 py-1.5 text-sm bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded-lg hover:bg-blue-200 dark:hover:bg-blue-800 transition-colors\",\n                    onClick: () => addQuestion(sectionIndex),\n                    children: \"Add Question\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"px-3 py-1.5 text-sm bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-200 rounded-lg hover:bg-red-200 dark:hover:bg-red-800 transition-colors\",\n                    onClick: () => deleteSection(sectionIndex),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-4\",\n                children: section.questions.map((question, questionIndex) => {\n                  var _question$options, _question$options2;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bg-gray-50 dark:bg-gray-700 rounded-lg p-4 border border-gray-200 dark:border-gray-600\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex items-center justify-between mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                        className: \"px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",\n                        value: question.type,\n                        onChange: e => updateQuestion(sectionIndex, questionIndex, {\n                          type: e.target.value\n                        }),\n                        children: questionTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: type.value,\n                          children: type.label\n                        }, type.value, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 380,\n                          columnNumber: 31\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 374,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"w-8 h-8 bg-red-100 dark:bg-red-900 text-red-600 dark:text-red-400 rounded-lg hover:bg-red-200 dark:hover:bg-red-800 transition-colors flex items-center justify-center\",\n                        onClick: () => deleteQuestion(sectionIndex, questionIndex),\n                        children: \"\\xD7\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 385,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 373,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"space-y-3\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        className: \"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",\n                        value: question.title,\n                        onChange: e => updateQuestion(sectionIndex, questionIndex, {\n                          title: e.target.value\n                        }),\n                        placeholder: \"Question title\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 394,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                        className: \"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",\n                        value: question.description,\n                        onChange: e => updateQuestion(sectionIndex, questionIndex, {\n                          description: e.target.value\n                        }),\n                        placeholder: \"Question description (optional)\",\n                        rows: 2\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 402,\n                        columnNumber: 27\n                      }, this), (question.type === 'single-choice' || question.type === 'multi-choice') && /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\",\n                          children: \"Options:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 412,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"space-y-2\",\n                          children: [(_question$options = question.options) === null || _question$options === void 0 ? void 0 : _question$options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"flex gap-2\",\n                            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                              type: \"text\",\n                              className: \"flex-1 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",\n                              value: option,\n                              onChange: e => {\n                                const newOptions = [...(question.options || [])];\n                                newOptions[optionIndex] = e.target.value;\n                                updateQuestion(sectionIndex, questionIndex, {\n                                  options: newOptions\n                                });\n                              },\n                              placeholder: `Option ${optionIndex + 1}`\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 416,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                              className: \"w-8 h-8 bg-red-100 dark:bg-red-900 text-red-600 dark:text-red-400 rounded-lg hover:bg-red-200 dark:hover:bg-red-800 transition-colors flex items-center justify-center\",\n                              onClick: () => {\n                                const newOptions = (question.options || []).filter((_, i) => i !== optionIndex);\n                                updateQuestion(sectionIndex, questionIndex, {\n                                  options: newOptions\n                                });\n                              },\n                              children: \"\\xD7\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 427,\n                              columnNumber: 37\n                            }, this)]\n                          }, optionIndex, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 415,\n                            columnNumber: 35\n                          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                            className: \"px-3 py-2 text-sm bg-gray-100 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-500 transition-colors\",\n                            onClick: () => {\n                              const newOptions = [...(question.options || []), ''];\n                              updateQuestion(sectionIndex, questionIndex, {\n                                options: newOptions\n                              });\n                            },\n                            children: \"Add Option\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 438,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 413,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 411,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex items-center justify-between\",\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"flex items-center text-sm text-gray-700 dark:text-gray-300\",\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"checkbox\",\n                            className: \"mr-2 rounded border-gray-300 dark:border-gray-600 text-blue-600 focus:ring-blue-500\",\n                            checked: question.required,\n                            onChange: e => updateQuestion(sectionIndex, questionIndex, {\n                              required: e.target.checked\n                            })\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 453,\n                            columnNumber: 31\n                          }, this), \"Required\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 452,\n                          columnNumber: 29\n                        }, this), assessment.enableScoring && /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"flex items-center space-x-2\",\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"text-sm text-gray-700 dark:text-gray-300\",\n                            children: \"Points:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 464,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"number\",\n                            min: \"0\",\n                            max: \"100\",\n                            className: \"w-16 px-2 py-1 border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",\n                            value: question.points || 1,\n                            onChange: e => updateQuestion(sectionIndex, questionIndex, {\n                              points: parseInt(e.target.value) || 1\n                            })\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 465,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 463,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 451,\n                        columnNumber: 27\n                      }, this), assessment.enableScoring && (question.type === 'single-choice' || question.type === 'multi-choice') && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mt-3\",\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\",\n                          children: [\"Correct Answer\", question.type === 'multi-choice' ? 's' : '', \":\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 479,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"space-y-2\",\n                          children: (_question$options2 = question.options) === null || _question$options2 === void 0 ? void 0 : _question$options2.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"flex items-center text-sm text-gray-700 dark:text-gray-300\",\n                            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                              type: question.type === 'single-choice' ? 'radio' : 'checkbox',\n                              name: `correct-${question.id}`,\n                              className: \"mr-2 text-green-600 focus:ring-green-500\",\n                              checked: question.type === 'single-choice' ? question.correctAnswer === option : Array.isArray(question.correctAnswer) && question.correctAnswer.includes(option),\n                              onChange: e => {\n                                if (question.type === 'single-choice') {\n                                  updateQuestion(sectionIndex, questionIndex, {\n                                    correctAnswer: e.target.checked ? option : undefined\n                                  });\n                                } else {\n                                  const currentAnswers = Array.isArray(question.correctAnswer) ? question.correctAnswer : [];\n                                  const newAnswers = e.target.checked ? [...currentAnswers, option] : currentAnswers.filter(a => a !== option);\n                                  updateQuestion(sectionIndex, questionIndex, {\n                                    correctAnswer: newAnswers.length > 0 ? newAnswers : undefined\n                                  });\n                                }\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 485,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"text-green-600 dark:text-green-400 font-medium\",\n                              children: \"\\u2713\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 510,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"ml-2\",\n                              children: option\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 511,\n                              columnNumber: 37\n                            }, this)]\n                          }, optionIndex, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 484,\n                            columnNumber: 35\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 482,\n                          columnNumber: 31\n                        }, this), (!question.options || question.options.length === 0) && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-sm text-gray-500 dark:text-gray-400 italic\",\n                          children: \"Add options first to set correct answers\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 516,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 478,\n                        columnNumber: 29\n                      }, this), assessment.enableScoring && (question.type === 'short-text' || question.type === 'long-text') && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mt-3\",\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\",\n                          children: \"Expected Answer (for reference only):\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 525,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                          className: \"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",\n                          value: typeof question.correctAnswer === 'string' ? question.correctAnswer : '',\n                          onChange: e => updateQuestion(sectionIndex, questionIndex, {\n                            correctAnswer: e.target.value\n                          }),\n                          placeholder: \"Expected answer or key points (manual review required)\",\n                          rows: 2\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 528,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-xs text-gray-500 dark:text-gray-400 mt-1\",\n                          children: \"Text answers require manual review. This is for HR reference only.\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 535,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 524,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 393,\n                      columnNumber: 25\n                    }, this)]\n                  }, question.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 19\n              }, this)]\n            }, section.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"w-full px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors\",\n            onClick: addSection,\n            children: \"Add Section\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6 h-fit sticky top-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold text-gray-900 dark:text-white\",\n              children: \"Assessment Overview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 15\n            }, this), assessment.sections.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 dark:text-gray-400\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [assessment.sections.length, \" sections, \", assessment.sections.reduce((total, section) => total + section.questions.length, 0), \" questions\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 19\n              }, this), assessment.enableScoring && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-green-600 dark:text-green-400 font-medium\",\n                children: [\"Scoring: \", assessment.sections.reduce((total, section) => total + section.questions.reduce((sectionTotal, q) => sectionTotal + (q.points || 0), 0), 0), \" points total\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-6 max-h-96 overflow-y-auto\",\n            children: [assessment.title && /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-bold text-gray-900 dark:text-white mb-2\",\n              children: assessment.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 17\n            }, this), assessment.description && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600 dark:text-gray-400 mb-4\",\n              children: assessment.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 17\n            }, this), assessment.sections.map((section, sectionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-lg font-semibold text-gray-900 dark:text-white mb-3\",\n                children: section.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 19\n              }, this), section.questions.map((question, questionIndex) => {\n                var _question$options3, _question$options4;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-4 p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      className: \"font-medium text-gray-900 dark:text-white\",\n                      children: [question.title, question.required && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-red-500 ml-1\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 587,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 585,\n                      columnNumber: 25\n                    }, this), question.description && /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-sm text-gray-600 dark:text-gray-400 mt-1\",\n                      children: question.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 590,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 584,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mt-2\",\n                    children: [question.type === 'single-choice' && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"space-y-2\",\n                      children: (_question$options3 = question.options) === null || _question$options3 === void 0 ? void 0 : _question$options3.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"flex items-center text-gray-700 dark:text-gray-300\",\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"radio\",\n                          name: `q-${question.id}`,\n                          className: \"mr-2\",\n                          disabled: true\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 599,\n                          columnNumber: 33\n                        }, this), option]\n                      }, optionIndex, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 598,\n                        columnNumber: 31\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 596,\n                      columnNumber: 27\n                    }, this), question.type === 'multi-choice' && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"space-y-2\",\n                      children: (_question$options4 = question.options) === null || _question$options4 === void 0 ? void 0 : _question$options4.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"flex items-center text-gray-700 dark:text-gray-300\",\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"checkbox\",\n                          className: \"mr-2\",\n                          disabled: true\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 610,\n                          columnNumber: 33\n                        }, this), option]\n                      }, optionIndex, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 609,\n                        columnNumber: 31\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 607,\n                      columnNumber: 27\n                    }, this), question.type === 'short-text' && /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      className: \"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white\",\n                      placeholder: \"Your answer\",\n                      disabled: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 618,\n                      columnNumber: 27\n                    }, this), question.type === 'long-text' && /*#__PURE__*/_jsxDEV(\"textarea\", {\n                      className: \"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white\",\n                      rows: 4,\n                      placeholder: \"Your answer\",\n                      disabled: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 622,\n                      columnNumber: 27\n                    }, this), question.type === 'numeric' && /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      className: \"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white\",\n                      placeholder: \"Your answer\",\n                      disabled: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 626,\n                      columnNumber: 27\n                    }, this), question.type === 'file-upload' && /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"file\",\n                      className: \"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white\",\n                      disabled: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 630,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 594,\n                    columnNumber: 23\n                  }, this)]\n                }, question.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 583,\n                  columnNumber: 21\n                }, this);\n              })]\n            }, section.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 17\n            }, this)), assessment.sections.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center text-gray-500 dark:text-gray-400 py-8\",\n              children: \"Add sections and questions to see the preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 639,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 5\n  }, this);\n};\n_s(AssessmentBuilder, \"iBSLlzdoZX79/zamgzN6luP2abA=\");\n_c = AssessmentBuilder;\nexport default AssessmentBuilder;\nvar _c;\n$RefreshReg$(_c, \"AssessmentBuilder\");","map":{"version":3,"names":["React","useState","useEffect","ArrowLeftIcon","jsxDEV","_jsxDEV","questionTypes","value","label","AssessmentBuilder","jobId","onSave","onClose","_s","assessment","setAssessment","id","title","description","sections","enableScoring","createdAt","updatedAt","loading","setLoading","activeSection","setActiveSection","activeQuestion","setActiveQuestion","console","log","loadAssessment","warn","controller","AbortController","timeoutId","setTimeout","abort","response","fetch","signal","clearTimeout","status","ok","data","json","error","handleSave","trim","alert","method","headers","body","JSON","stringify","Date","toISOString","errorText","text","Error","addSection","newSection","now","questions","prev","updateSection","sectionIndex","updates","map","section","index","deleteSection","filter","_","addQuestion","newQuestion","type","required","options","points","validation","updateQuestion","questionIndex","sIndex","question","qIndex","deleteQuestion","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toLocaleDateString","onChange","e","target","placeholder","rows","checked","_question$options","_question$options2","option","optionIndex","newOptions","i","min","max","parseInt","name","correctAnswer","Array","isArray","includes","undefined","currentAnswers","newAnswers","a","length","reduce","total","sectionTotal","q","_question$options3","_question$options4","disabled","_c","$RefreshReg$"],"sources":["C:/Users/shiva/Desktop/talentflow-mini-hiring-platform/TalentFlow/src/components/AssessmentBuilder.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ArrowLeftIcon } from '@heroicons/react/24/outline';\r\nimport { Assessment, AssessmentSection, AssessmentQuestion } from '../types';\r\n\r\ninterface AssessmentBuilderProps {\r\n  jobId: string;\r\n  onSave: (assessment: Assessment) => void;\r\n  onClose: () => void;\r\n}\r\n\r\nconst questionTypes = [\r\n  { value: 'single-choice', label: 'Single Choice' },\r\n  { value: 'multi-choice', label: 'Multiple Choice' },\r\n  { value: 'short-text', label: 'Short Text' },\r\n  { value: 'long-text', label: 'Long Text' },\r\n  { value: 'numeric', label: 'Numeric' },\r\n  { value: 'file-upload', label: 'File Upload' }\r\n];\r\n\r\nconst AssessmentBuilder: React.FC<AssessmentBuilderProps> = ({ jobId, onSave, onClose }) => {\r\n  const [assessment, setAssessment] = useState<Assessment>({\r\n    id: '',\r\n    jobId,\r\n    title: '',\r\n    description: '',\r\n    sections: [],\r\n    enableScoring: false,\r\n    createdAt: '',\r\n    updatedAt: ''\r\n  });\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [activeSection, setActiveSection] = useState<number | null>(null);\r\n  const [activeQuestion, setActiveQuestion] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    console.log('AssessmentBuilder useEffect - jobId:', jobId);\r\n    if (jobId) {\r\n      loadAssessment();\r\n    } else {\r\n      console.warn('AssessmentBuilder: No jobId provided');\r\n      setLoading(false);\r\n    }\r\n  }, [jobId]);\r\n\r\n  const loadAssessment = async () => {\r\n    if (!jobId) {\r\n      console.warn('loadAssessment: No jobId provided');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setLoading(true);\r\n      console.log('Loading assessment for jobId:', jobId);\r\n      \r\n      // Add timeout to prevent hanging\r\n      const controller = new AbortController();\r\n      const timeoutId = setTimeout(() => controller.abort(), 5000);\r\n      \r\n      const response = await fetch(`/api/assessments/${jobId}`, {\r\n        signal: controller.signal\r\n      });\r\n      clearTimeout(timeoutId);\r\n      \r\n      console.log('Assessment response:', response.status, response.ok);\r\n      \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log('Assessment data:', data);\r\n        if (data.data) {\r\n          setAssessment(data.data);\r\n        } else {\r\n          console.log('No existing assessment found, starting with empty assessment');\r\n          setAssessment({\r\n            id: '',\r\n            jobId,\r\n            title: '',\r\n            description: '',\r\n            sections: [],\r\n            enableScoring: false,\r\n            createdAt: '',\r\n            updatedAt: ''\r\n          });\r\n        }\r\n      } else {\r\n        console.log('Assessment not found, starting with empty assessment');\r\n        setAssessment({\r\n          id: '',\r\n          jobId,\r\n          title: '',\r\n          description: '',\r\n          sections: [],\r\n          enableScoring: false,\r\n          createdAt: '',\r\n          updatedAt: ''\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading assessment:', error);\r\n      // Initialize with empty assessment on error\r\n      setAssessment({\r\n        id: '',\r\n        jobId,\r\n        title: '',\r\n        description: '',\r\n        sections: [],\r\n        enableScoring: false,\r\n        createdAt: '',\r\n        updatedAt: ''\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (!assessment.title.trim()) {\r\n      alert('Please enter an assessment title');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      console.log('Saving assessment:', assessment);\r\n      const response = await fetch(`/api/assessments/${jobId}`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          ...assessment,\r\n          jobId,\r\n          updatedAt: new Date().toISOString(),\r\n          createdAt: assessment.createdAt || new Date().toISOString()\r\n        })\r\n      });\r\n\r\n      console.log('Save response:', response.status, response.ok);\r\n      \r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        console.error('Save failed:', errorText);\r\n        throw new Error('Failed to save assessment');\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('Assessment saved successfully:', data);\r\n      alert('Assessment saved successfully!');\r\n      onSave(data.data);\r\n    } catch (error) {\r\n      console.error('Error saving assessment:', error);\r\n      alert('Failed to save assessment. Please try again.');\r\n    }\r\n  };\r\n\r\n  const addSection = () => {\r\n    const newSection: AssessmentSection = {\r\n      id: `section-${Date.now()}`,\r\n      title: 'New Section',\r\n      questions: []\r\n    };\r\n\r\n    setAssessment(prev => ({\r\n      ...prev,\r\n      sections: [...prev.sections, newSection]\r\n    }));\r\n  };\r\n\r\n  const updateSection = (sectionIndex: number, updates: Partial<AssessmentSection>) => {\r\n    setAssessment(prev => ({\r\n      ...prev,\r\n      sections: prev.sections.map((section, index) =>\r\n        index === sectionIndex ? { ...section, ...updates } : section\r\n      )\r\n    }));\r\n  };\r\n\r\n  const deleteSection = (sectionIndex: number) => {\r\n    setAssessment(prev => ({\r\n      ...prev,\r\n      sections: prev.sections.filter((_, index) => index !== sectionIndex)\r\n    }));\r\n  };\r\n\r\n  const addQuestion = (sectionIndex: number) => {\r\n    const newQuestion: AssessmentQuestion = {\r\n      id: `question-${Date.now()}`,\r\n      type: 'short-text',\r\n      title: 'New Question',\r\n      description: '',\r\n      required: false,\r\n      options: [],\r\n      points: 1,\r\n      validation: {}\r\n    };\r\n\r\n    setAssessment(prev => ({\r\n      ...prev,\r\n      sections: prev.sections.map((section, index) =>\r\n        index === sectionIndex\r\n          ? { ...section, questions: [...section.questions, newQuestion] }\r\n          : section\r\n      )\r\n    }));\r\n  };\r\n\r\n  const updateQuestion = (sectionIndex: number, questionIndex: number, updates: Partial<AssessmentQuestion>) => {\r\n    setAssessment(prev => ({\r\n      ...prev,\r\n      sections: prev.sections.map((section, sIndex) =>\r\n        sIndex === sectionIndex\r\n          ? {\r\n              ...section,\r\n              questions: section.questions.map((question, qIndex) =>\r\n                qIndex === questionIndex ? { ...question, ...updates } : question\r\n              )\r\n            }\r\n          : section\r\n      )\r\n    }));\r\n  };\r\n\r\n  const deleteQuestion = (sectionIndex: number, questionIndex: number) => {\r\n    setAssessment(prev => ({\r\n      ...prev,\r\n      sections: prev.sections.map((section, sIndex) =>\r\n        sIndex === sectionIndex\r\n          ? {\r\n              ...section,\r\n              questions: section.questions.filter((_, qIndex) => qIndex !== questionIndex)\r\n            }\r\n          : section\r\n      )\r\n    }));\r\n  };\r\n\r\n\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600 dark:text-gray-400\">Loading assessment builder...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        {/* Navigation */}\r\n        <div className=\"flex items-center mb-6\">\r\n          <button\r\n            onClick={onClose}\r\n            className=\"inline-flex items-center text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white transition-colors\"\r\n          >\r\n            <ArrowLeftIcon className=\"w-5 h-5 mr-2\" />\r\n            Back to Assessments\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n              {assessment.id ? 'Edit Assessment' : 'Create Assessment'}\r\n            </h2>\r\n            {assessment.id && (\r\n              <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\r\n                Last updated: {assessment.updatedAt ? new Date(assessment.updatedAt).toLocaleDateString() : 'Never'}\r\n              </p>\r\n            )}\r\n          </div>\r\n          <div className=\"flex gap-2\">\r\n            <button \r\n              className=\"px-4 py-2 text-gray-600 dark:text-gray-400 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors\" \r\n              onClick={onClose}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button \r\n              className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors\" \r\n              onClick={handleSave}\r\n            >\r\n              {assessment.id ? 'Update Assessment' : 'Save Assessment'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n          <div className=\"space-y-6\">\r\n            <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\r\n              <div className=\"flex items-center justify-between mb-4\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Assessment Details</h3>\r\n                {assessment.id && (\r\n                  <span className=\"px-2 py-1 bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200 text-xs font-medium rounded-full\">\r\n                    Existing Assessment\r\n                  </span>\r\n                )}\r\n              </div>\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">Title</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                    value={assessment.title}\r\n                    onChange={(e) => setAssessment(prev => ({ ...prev, title: e.target.value }))}\r\n                    placeholder=\"Assessment Title\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">Description</label>\r\n                  <textarea\r\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                    value={assessment.description}\r\n                    onChange={(e) => setAssessment(prev => ({ ...prev, description: e.target.value }))}\r\n                    placeholder=\"Assessment Description\"\r\n                    rows={3}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"flex items-center text-sm text-gray-700 dark:text-gray-300\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"mr-2 rounded border-gray-300 dark:border-gray-600 text-blue-600 focus:ring-blue-500\"\r\n                      checked={assessment.enableScoring}\r\n                      onChange={(e) => setAssessment(prev => ({ ...prev, enableScoring: e.target.checked }))}\r\n                    />\r\n                    Enable Automatic Scoring\r\n                  </label>\r\n                  <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n                    When enabled, you can set correct answers for questions and get automatic scores for submissions.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"space-y-4\">\r\n              {assessment.sections.map((section, sectionIndex) => (\r\n                <div\r\n                  key={section.id}\r\n                  className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6\"\r\n                >\r\n                  <div className=\"flex items-center justify-between mb-4\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"flex-1 text-lg font-semibold bg-transparent border-none text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 rounded px-2 py-1\"\r\n                      value={section.title}\r\n                      onChange={(e) => updateSection(sectionIndex, { title: e.target.value })}\r\n                    />\r\n                    <div className=\"flex gap-2\">\r\n                      <button\r\n                        className=\"px-3 py-1.5 text-sm bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded-lg hover:bg-blue-200 dark:hover:bg-blue-800 transition-colors\"\r\n                        onClick={() => addQuestion(sectionIndex)}\r\n                      >\r\n                        Add Question\r\n                      </button>\r\n                      <button\r\n                        className=\"px-3 py-1.5 text-sm bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-200 rounded-lg hover:bg-red-200 dark:hover:bg-red-800 transition-colors\"\r\n                        onClick={() => deleteSection(sectionIndex)}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-4\">\r\n                    {section.questions.map((question, questionIndex) => (\r\n                      <div\r\n                        key={question.id}\r\n                        className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4 border border-gray-200 dark:border-gray-600\"\r\n                      >\r\n                        <div className=\"flex items-center justify-between mb-3\">\r\n                          <select\r\n                            className=\"px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                            value={question.type}\r\n                            onChange={(e) => updateQuestion(sectionIndex, questionIndex, { type: e.target.value as any })}\r\n                          >\r\n                            {questionTypes.map(type => (\r\n                              <option key={type.value} value={type.value}>\r\n                                {type.label}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          <button\r\n                            className=\"w-8 h-8 bg-red-100 dark:bg-red-900 text-red-600 dark:text-red-400 rounded-lg hover:bg-red-200 dark:hover:bg-red-800 transition-colors flex items-center justify-center\"\r\n                            onClick={() => deleteQuestion(sectionIndex, questionIndex)}\r\n                          >\r\n                            ×\r\n                          </button>\r\n                        </div>\r\n\r\n                        <div className=\"space-y-3\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                            value={question.title}\r\n                            onChange={(e) => updateQuestion(sectionIndex, questionIndex, { title: e.target.value })}\r\n                            placeholder=\"Question title\"\r\n                          />\r\n\r\n                          <textarea\r\n                            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                            value={question.description}\r\n                            onChange={(e) => updateQuestion(sectionIndex, questionIndex, { description: e.target.value })}\r\n                            placeholder=\"Question description (optional)\"\r\n                            rows={2}\r\n                          />\r\n\r\n                          {(question.type === 'single-choice' || question.type === 'multi-choice') && (\r\n                            <div>\r\n                              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">Options:</label>\r\n                              <div className=\"space-y-2\">\r\n                                {question.options?.map((option, optionIndex) => (\r\n                                  <div key={optionIndex} className=\"flex gap-2\">\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      className=\"flex-1 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                                      value={option}\r\n                                      onChange={(e) => {\r\n                                        const newOptions = [...(question.options || [])];\r\n                                        newOptions[optionIndex] = e.target.value;\r\n                                        updateQuestion(sectionIndex, questionIndex, { options: newOptions });\r\n                                      }}\r\n                                      placeholder={`Option ${optionIndex + 1}`}\r\n                                    />\r\n                                    <button\r\n                                      className=\"w-8 h-8 bg-red-100 dark:bg-red-900 text-red-600 dark:text-red-400 rounded-lg hover:bg-red-200 dark:hover:bg-red-800 transition-colors flex items-center justify-center\"\r\n                                      onClick={() => {\r\n                                        const newOptions = (question.options || []).filter((_, i) => i !== optionIndex);\r\n                                        updateQuestion(sectionIndex, questionIndex, { options: newOptions });\r\n                                      }}\r\n                                    >\r\n                                      ×\r\n                                    </button>\r\n                                  </div>\r\n                                ))}\r\n                                <button\r\n                                  className=\"px-3 py-2 text-sm bg-gray-100 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-500 transition-colors\"\r\n                                  onClick={() => {\r\n                                    const newOptions = [...(question.options || []), ''];\r\n                                    updateQuestion(sectionIndex, questionIndex, { options: newOptions });\r\n                                  }}\r\n                                >\r\n                                  Add Option\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n\r\n                          <div className=\"flex items-center justify-between\">\r\n                            <label className=\"flex items-center text-sm text-gray-700 dark:text-gray-300\">\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                className=\"mr-2 rounded border-gray-300 dark:border-gray-600 text-blue-600 focus:ring-blue-500\"\r\n                                checked={question.required}\r\n                                onChange={(e) => updateQuestion(sectionIndex, questionIndex, { required: e.target.checked })}\r\n                              />\r\n                              Required\r\n                            </label>\r\n                            \r\n                            {assessment.enableScoring && (\r\n                              <div className=\"flex items-center space-x-2\">\r\n                                <label className=\"text-sm text-gray-700 dark:text-gray-300\">Points:</label>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  min=\"0\"\r\n                                  max=\"100\"\r\n                                  className=\"w-16 px-2 py-1 border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                                  value={question.points || 1}\r\n                                  onChange={(e) => updateQuestion(sectionIndex, questionIndex, { points: parseInt(e.target.value) || 1 })}\r\n                                />\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                          \r\n                          {assessment.enableScoring && (question.type === 'single-choice' || question.type === 'multi-choice') && (\r\n                            <div className=\"mt-3\">\r\n                              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                                Correct Answer{question.type === 'multi-choice' ? 's' : ''}:\r\n                              </label>\r\n                              <div className=\"space-y-2\">\r\n                                {question.options?.map((option, optionIndex) => (\r\n                                  <label key={optionIndex} className=\"flex items-center text-sm text-gray-700 dark:text-gray-300\">\r\n                                    <input\r\n                                      type={question.type === 'single-choice' ? 'radio' : 'checkbox'}\r\n                                      name={`correct-${question.id}`}\r\n                                      className=\"mr-2 text-green-600 focus:ring-green-500\"\r\n                                      checked={\r\n                                        question.type === 'single-choice'\r\n                                          ? question.correctAnswer === option\r\n                                          : Array.isArray(question.correctAnswer) && question.correctAnswer.includes(option)\r\n                                      }\r\n                                      onChange={(e) => {\r\n                                        if (question.type === 'single-choice') {\r\n                                          updateQuestion(sectionIndex, questionIndex, { \r\n                                            correctAnswer: e.target.checked ? option : undefined \r\n                                          });\r\n                                        } else {\r\n                                          const currentAnswers = Array.isArray(question.correctAnswer) ? question.correctAnswer : [];\r\n                                          const newAnswers = e.target.checked\r\n                                            ? [...currentAnswers, option]\r\n                                            : currentAnswers.filter(a => a !== option);\r\n                                          updateQuestion(sectionIndex, questionIndex, { \r\n                                            correctAnswer: newAnswers.length > 0 ? newAnswers : undefined \r\n                                          });\r\n                                        }\r\n                                      }}\r\n                                    />\r\n                                    <span className=\"text-green-600 dark:text-green-400 font-medium\">✓</span>\r\n                                    <span className=\"ml-2\">{option}</span>\r\n                                  </label>\r\n                                ))}\r\n                              </div>\r\n                              {(!question.options || question.options.length === 0) && (\r\n                                <p className=\"text-sm text-gray-500 dark:text-gray-400 italic\">\r\n                                  Add options first to set correct answers\r\n                                </p>\r\n                              )}\r\n                            </div>\r\n                          )}\r\n                          \r\n                          {assessment.enableScoring && (question.type === 'short-text' || question.type === 'long-text') && (\r\n                            <div className=\"mt-3\">\r\n                              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                                Expected Answer (for reference only):\r\n                              </label>\r\n                              <textarea\r\n                                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                                value={typeof question.correctAnswer === 'string' ? question.correctAnswer : ''}\r\n                                onChange={(e) => updateQuestion(sectionIndex, questionIndex, { correctAnswer: e.target.value })}\r\n                                placeholder=\"Expected answer or key points (manual review required)\"\r\n                                rows={2}\r\n                              />\r\n                              <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n                                Text answers require manual review. This is for HR reference only.\r\n                              </p>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <button \r\n              className=\"w-full px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors\" \r\n              onClick={addSection}\r\n            >\r\n              Add Section\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6 h-fit sticky top-8\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Assessment Overview</h3>\r\n              {assessment.sections.length > 0 && (\r\n                <div className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                  <div>{assessment.sections.length} sections, {assessment.sections.reduce((total, section) => total + section.questions.length, 0)} questions</div>\r\n                  {assessment.enableScoring && (\r\n                    <div className=\"text-green-600 dark:text-green-400 font-medium\">\r\n                      Scoring: {assessment.sections.reduce((total, section) => total + section.questions.reduce((sectionTotal, q) => sectionTotal + (q.points || 0), 0), 0)} points total\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"space-y-6 max-h-96 overflow-y-auto\">\r\n              {assessment.title && (\r\n                <h2 className=\"text-xl font-bold text-gray-900 dark:text-white mb-2\">{assessment.title}</h2>\r\n              )}\r\n              {assessment.description && (\r\n                <p className=\"text-gray-600 dark:text-gray-400 mb-4\">{assessment.description}</p>\r\n              )}\r\n\r\n              {assessment.sections.map((section, sectionIndex) => (\r\n                <div key={section.id} className=\"mb-6\">\r\n                  <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-3\">{section.title}</h3>\r\n\r\n                  {section.questions.map((question, questionIndex) => (\r\n                    <div key={question.id} className=\"mb-4 p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n                      <div className=\"mb-3\">\r\n                        <h4 className=\"font-medium text-gray-900 dark:text-white\">\r\n                          {question.title}\r\n                          {question.required && <span className=\"text-red-500 ml-1\">*</span>}\r\n                        </h4>\r\n                        {question.description && (\r\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">{question.description}</p>\r\n                        )}\r\n                      </div>\r\n\r\n                      <div className=\"mt-2\">\r\n                        {question.type === 'single-choice' && (\r\n                          <div className=\"space-y-2\">\r\n                            {question.options?.map((option, optionIndex) => (\r\n                              <label key={optionIndex} className=\"flex items-center text-gray-700 dark:text-gray-300\">\r\n                                <input type=\"radio\" name={`q-${question.id}`} className=\"mr-2\" disabled />\r\n                                {option}\r\n                              </label>\r\n                            ))}\r\n                          </div>\r\n                        )}\r\n\r\n                        {question.type === 'multi-choice' && (\r\n                          <div className=\"space-y-2\">\r\n                            {question.options?.map((option, optionIndex) => (\r\n                              <label key={optionIndex} className=\"flex items-center text-gray-700 dark:text-gray-300\">\r\n                                <input type=\"checkbox\" className=\"mr-2\" disabled />\r\n                                {option}\r\n                              </label>\r\n                            ))}\r\n                          </div>\r\n                        )}\r\n\r\n                        {question.type === 'short-text' && (\r\n                          <input type=\"text\" className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white\" placeholder=\"Your answer\" disabled />\r\n                        )}\r\n\r\n                        {question.type === 'long-text' && (\r\n                          <textarea className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white\" rows={4} placeholder=\"Your answer\" disabled />\r\n                        )}\r\n\r\n                        {question.type === 'numeric' && (\r\n                          <input type=\"number\" className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white\" placeholder=\"Your answer\" disabled />\r\n                        )}\r\n\r\n                        {question.type === 'file-upload' && (\r\n                          <input type=\"file\" className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white\" disabled />\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ))}\r\n\r\n              {assessment.sections.length === 0 && (\r\n                <div className=\"text-center text-gray-500 dark:text-gray-400 py-8\">\r\n                  Add sections and questions to see the preview\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AssessmentBuilder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}