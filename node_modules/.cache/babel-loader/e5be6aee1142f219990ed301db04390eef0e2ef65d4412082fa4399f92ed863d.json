{"ast":null,"code":"/**\n * Check if a hostname is an IP. You should be aware that this only works\n * because `hostname` is already garanteed to be a valid hostname!\n */\nfunction isProbablyIpv4(hostname) {\n  // Cannot be shorted than 1.1.1.1\n  if (hostname.length < 7) {\n    return false;\n  }\n  // Cannot be longer than: 255.255.255.255\n  if (hostname.length > 15) {\n    return false;\n  }\n  let numberOfDots = 0;\n  for (let i = 0; i < hostname.length; i += 1) {\n    const code = hostname.charCodeAt(i);\n    if (code === 46 /* '.' */) {\n      numberOfDots += 1;\n    } else if (code < 48 /* '0' */ || code > 57 /* '9' */) {\n      return false;\n    }\n  }\n  return numberOfDots === 3 && hostname.charCodeAt(0) !== 46 /* '.' */ && hostname.charCodeAt(hostname.length - 1) !== 46 /* '.' */;\n}\n/**\n * Similar to isProbablyIpv4.\n */\nfunction isProbablyIpv6(hostname) {\n  if (hostname.length < 3) {\n    return false;\n  }\n  let start = hostname.startsWith('[') ? 1 : 0;\n  let end = hostname.length;\n  if (hostname[end - 1] === ']') {\n    end -= 1;\n  }\n  // We only consider the maximum size of a normal IPV6. Note that this will\n  // fail on so-called \"IPv4 mapped IPv6 addresses\" but this is a corner-case\n  // and a proper validation library should be used for these.\n  if (end - start > 39) {\n    return false;\n  }\n  let hasColon = false;\n  for (; start < end; start += 1) {\n    const code = hostname.charCodeAt(start);\n    if (code === 58 /* ':' */) {\n      hasColon = true;\n    } else if (!(code >= 48 && code <= 57 ||\n    // 0-9\n    code >= 97 && code <= 102 ||\n    // a-f\n    code >= 65 && code <= 90 // A-F\n    )) {\n      return false;\n    }\n  }\n  return hasColon;\n}\n/**\n * Check if `hostname` is *probably* a valid ip addr (either ipv6 or ipv4).\n * This *will not* work on any string. We need `hostname` to be a valid\n * hostname.\n */\nexport default function isIp(hostname) {\n  return isProbablyIpv6(hostname) || isProbablyIpv4(hostname);\n}\n//# sourceMappingURL=is-ip.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}