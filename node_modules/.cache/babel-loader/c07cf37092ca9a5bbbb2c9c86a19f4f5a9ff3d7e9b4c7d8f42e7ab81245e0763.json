{"ast":null,"code":"import _objectSpread from\"C:/Users/shiva/Desktop/talentflow-mini-hiring-platform/TalentFlow/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{create}from'zustand';import{devtools,persist}from'zustand/middleware';export const useAppStore=create()(devtools(persist((set,get)=>({// Initial state - check localStorage for existing session\nuser:{role:localStorage.getItem('role'),name:localStorage.getItem('username'),email:localStorage.getItem('email')},theme:'light',sidebarOpen:false,jobs:[],candidates:[],assessments:[],loading:{jobs:false,candidates:false,assessments:false},errors:{jobs:null,candidates:null,assessments:null},// Auth actions\nsetUser:user=>{localStorage.setItem('role',user.role);localStorage.setItem('username',user.name);if(user.email){localStorage.setItem('email',user.email);}set({user});},logout:()=>{localStorage.removeItem('role');localStorage.removeItem('username');localStorage.removeItem('email');set({user:{role:null,name:null,email:null},jobs:[],candidates:[],assessments:[]});},// UI actions\ntoggleTheme:()=>{const newTheme=get().theme==='light'?'dark':'light';set({theme:newTheme});document.documentElement.classList.toggle('dark',newTheme==='dark');},setSidebarOpen:open=>set({sidebarOpen:open}),// Data actions\nsetJobs:jobs=>set({jobs}),addJob:job=>set(state=>({jobs:[...state.jobs,job]})),updateJob:(id,updates)=>set(state=>({jobs:state.jobs.map(job=>job.id===id?_objectSpread(_objectSpread({},job),updates):job)})),removeJob:id=>set(state=>({jobs:state.jobs.filter(job=>job.id!==id)})),setCandidates:candidates=>set({candidates}),addCandidate:candidate=>set(state=>({candidates:[...state.candidates,candidate]})),updateCandidate:(id,updates)=>set(state=>({candidates:state.candidates.map(candidate=>candidate.id===id?_objectSpread(_objectSpread({},candidate),updates):candidate)})),removeCandidate:id=>set(state=>({candidates:state.candidates.filter(candidate=>candidate.id!==id)})),setAssessments:assessments=>set({assessments}),addAssessment:assessment=>set(state=>({assessments:[...state.assessments,assessment]})),updateAssessment:(id,updates)=>set(state=>({assessments:state.assessments.map(assessment=>assessment.id===id?_objectSpread(_objectSpread({},assessment),updates):assessment)})),removeAssessment:id=>set(state=>({assessments:state.assessments.filter(assessment=>assessment.id!==id)})),// Loading actions\nsetLoading:(key,loading)=>set(state=>({loading:_objectSpread(_objectSpread({},state.loading),{},{[key]:loading})})),// Error actions\nsetError:(key,error)=>set(state=>({errors:_objectSpread(_objectSpread({},state.errors),{},{[key]:error})})),clearErrors:()=>set({errors:{jobs:null,candidates:null,assessments:null}})}),{name:'talentflow-storage',partialize:state=>({theme:state.theme})}),{name:'talentflow-store'}));// Selectors for better performance\nexport const useAuth=()=>useAppStore(state=>({user:state.user,setUser:state.setUser,logout:state.logout}));export const useTheme=()=>useAppStore(state=>({theme:state.theme,toggleTheme:state.toggleTheme}));export const useJobs=()=>useAppStore(state=>({jobs:state.jobs,loading:state.loading.jobs,error:state.errors.jobs,setJobs:state.setJobs,addJob:state.addJob,updateJob:state.updateJob,removeJob:state.removeJob,setLoading:loading=>state.setLoading('jobs',loading),setError:error=>state.setError('jobs',error)}));export const useCandidates=()=>useAppStore(state=>({candidates:state.candidates,loading:state.loading.candidates,error:state.errors.candidates,setCandidates:state.setCandidates,addCandidate:state.addCandidate,updateCandidate:state.updateCandidate,removeCandidate:state.removeCandidate,setLoading:loading=>state.setLoading('candidates',loading),setError:error=>state.setError('candidates',error)}));export const useAssessments=()=>useAppStore(state=>({assessments:state.assessments,loading:state.loading.assessments,error:state.errors.assessments,setAssessments:state.setAssessments,addAssessment:state.addAssessment,updateAssessment:state.updateAssessment,removeAssessment:state.removeAssessment,setLoading:loading=>state.setLoading('assessments',loading),setError:error=>state.setError('assessments',error)}));","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}