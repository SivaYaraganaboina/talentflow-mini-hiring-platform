{"ast":null,"code":"export default function (hostname, options, out) {\n  // Fast path for very popular suffixes; this allows to by-pass lookup\n  // completely as well as any extra allocation or string manipulation.\n  if (!options.allowPrivateDomains && hostname.length > 3) {\n    const last = hostname.length - 1;\n    const c3 = hostname.charCodeAt(last);\n    const c2 = hostname.charCodeAt(last - 1);\n    const c1 = hostname.charCodeAt(last - 2);\n    const c0 = hostname.charCodeAt(last - 3);\n    if (c3 === 109 /* 'm' */ && c2 === 111 /* 'o' */ && c1 === 99 /* 'c' */ && c0 === 46 /* '.' */) {\n      out.isIcann = true;\n      out.isPrivate = false;\n      out.publicSuffix = 'com';\n      return true;\n    } else if (c3 === 103 /* 'g' */ && c2 === 114 /* 'r' */ && c1 === 111 /* 'o' */ && c0 === 46 /* '.' */) {\n      out.isIcann = true;\n      out.isPrivate = false;\n      out.publicSuffix = 'org';\n      return true;\n    } else if (c3 === 117 /* 'u' */ && c2 === 100 /* 'd' */ && c1 === 101 /* 'e' */ && c0 === 46 /* '.' */) {\n      out.isIcann = true;\n      out.isPrivate = false;\n      out.publicSuffix = 'edu';\n      return true;\n    } else if (c3 === 118 /* 'v' */ && c2 === 111 /* 'o' */ && c1 === 103 /* 'g' */ && c0 === 46 /* '.' */) {\n      out.isIcann = true;\n      out.isPrivate = false;\n      out.publicSuffix = 'gov';\n      return true;\n    } else if (c3 === 116 /* 't' */ && c2 === 101 /* 'e' */ && c1 === 110 /* 'n' */ && c0 === 46 /* '.' */) {\n      out.isIcann = true;\n      out.isPrivate = false;\n      out.publicSuffix = 'net';\n      return true;\n    } else if (c3 === 101 /* 'e' */ && c2 === 100 /* 'd' */ && c1 === 46 /* '.' */) {\n      out.isIcann = true;\n      out.isPrivate = false;\n      out.publicSuffix = 'de';\n      return true;\n    }\n  }\n  return false;\n}","map":{"version":3,"names":["hostname","options","out","allowPrivateDomains","length","last","c3","charCodeAt","c2","c1","c0","isIcann","isPrivate","publicSuffix"],"sources":["C:\\Users\\shiva\\Desktop\\talentflow-mini-hiring-platform\\TalentFlow\\node_modules\\tldts-core\\src\\lookup\\fast-path.ts"],"sourcesContent":["import { IPublicSuffix, ISuffixLookupOptions } from './interface';\n\nexport default function (\n  hostname: string,\n  options: ISuffixLookupOptions,\n  out: IPublicSuffix,\n): boolean {\n  // Fast path for very popular suffixes; this allows to by-pass lookup\n  // completely as well as any extra allocation or string manipulation.\n  if (!options.allowPrivateDomains && hostname.length > 3) {\n    const last: number = hostname.length - 1;\n    const c3: number = hostname.charCodeAt(last);\n    const c2: number = hostname.charCodeAt(last - 1);\n    const c1: number = hostname.charCodeAt(last - 2);\n    const c0: number = hostname.charCodeAt(last - 3);\n\n    if (\n      c3 === 109 /* 'm' */ &&\n      c2 === 111 /* 'o' */ &&\n      c1 === 99 /* 'c' */ &&\n      c0 === 46 /* '.' */\n    ) {\n      out.isIcann = true;\n      out.isPrivate = false;\n      out.publicSuffix = 'com';\n      return true;\n    } else if (\n      c3 === 103 /* 'g' */ &&\n      c2 === 114 /* 'r' */ &&\n      c1 === 111 /* 'o' */ &&\n      c0 === 46 /* '.' */\n    ) {\n      out.isIcann = true;\n      out.isPrivate = false;\n      out.publicSuffix = 'org';\n      return true;\n    } else if (\n      c3 === 117 /* 'u' */ &&\n      c2 === 100 /* 'd' */ &&\n      c1 === 101 /* 'e' */ &&\n      c0 === 46 /* '.' */\n    ) {\n      out.isIcann = true;\n      out.isPrivate = false;\n      out.publicSuffix = 'edu';\n      return true;\n    } else if (\n      c3 === 118 /* 'v' */ &&\n      c2 === 111 /* 'o' */ &&\n      c1 === 103 /* 'g' */ &&\n      c0 === 46 /* '.' */\n    ) {\n      out.isIcann = true;\n      out.isPrivate = false;\n      out.publicSuffix = 'gov';\n      return true;\n    } else if (\n      c3 === 116 /* 't' */ &&\n      c2 === 101 /* 'e' */ &&\n      c1 === 110 /* 'n' */ &&\n      c0 === 46 /* '.' */\n    ) {\n      out.isIcann = true;\n      out.isPrivate = false;\n      out.publicSuffix = 'net';\n      return true;\n    } else if (\n      c3 === 101 /* 'e' */ &&\n      c2 === 100 /* 'd' */ &&\n      c1 === 46 /* '.' */\n    ) {\n      out.isIcann = true;\n      out.isPrivate = false;\n      out.publicSuffix = 'de';\n      return true;\n    }\n  }\n\n  return false;\n}\n"],"mappings":"AAEA,eAAc,UACZA,QAAgB,EAChBC,OAA6B,EAC7BC,GAAkB;EAElB;EACA;EACA,IAAI,CAACD,OAAO,CAACE,mBAAmB,IAAIH,QAAQ,CAACI,MAAM,GAAG,CAAC,EAAE;IACvD,MAAMC,IAAI,GAAWL,QAAQ,CAACI,MAAM,GAAG,CAAC;IACxC,MAAME,EAAE,GAAWN,QAAQ,CAACO,UAAU,CAACF,IAAI,CAAC;IAC5C,MAAMG,EAAE,GAAWR,QAAQ,CAACO,UAAU,CAACF,IAAI,GAAG,CAAC,CAAC;IAChD,MAAMI,EAAE,GAAWT,QAAQ,CAACO,UAAU,CAACF,IAAI,GAAG,CAAC,CAAC;IAChD,MAAMK,EAAE,GAAWV,QAAQ,CAACO,UAAU,CAACF,IAAI,GAAG,CAAC,CAAC;IAEhD,IACEC,EAAE,KAAK,GAAG,CAAC,aACXE,EAAE,KAAK,GAAG,CAAC,aACXC,EAAE,KAAK,EAAE,CAAC,aACVC,EAAE,KAAK,EAAE,CAAC,WACV;MACAR,GAAG,CAACS,OAAO,GAAG,IAAI;MAClBT,GAAG,CAACU,SAAS,GAAG,KAAK;MACrBV,GAAG,CAACW,YAAY,GAAG,KAAK;MACxB,OAAO,IAAI;IACb,CAAC,MAAM,IACLP,EAAE,KAAK,GAAG,CAAC,aACXE,EAAE,KAAK,GAAG,CAAC,aACXC,EAAE,KAAK,GAAG,CAAC,aACXC,EAAE,KAAK,EAAE,CAAC,WACV;MACAR,GAAG,CAACS,OAAO,GAAG,IAAI;MAClBT,GAAG,CAACU,SAAS,GAAG,KAAK;MACrBV,GAAG,CAACW,YAAY,GAAG,KAAK;MACxB,OAAO,IAAI;IACb,CAAC,MAAM,IACLP,EAAE,KAAK,GAAG,CAAC,aACXE,EAAE,KAAK,GAAG,CAAC,aACXC,EAAE,KAAK,GAAG,CAAC,aACXC,EAAE,KAAK,EAAE,CAAC,WACV;MACAR,GAAG,CAACS,OAAO,GAAG,IAAI;MAClBT,GAAG,CAACU,SAAS,GAAG,KAAK;MACrBV,GAAG,CAACW,YAAY,GAAG,KAAK;MACxB,OAAO,IAAI;IACb,CAAC,MAAM,IACLP,EAAE,KAAK,GAAG,CAAC,aACXE,EAAE,KAAK,GAAG,CAAC,aACXC,EAAE,KAAK,GAAG,CAAC,aACXC,EAAE,KAAK,EAAE,CAAC,WACV;MACAR,GAAG,CAACS,OAAO,GAAG,IAAI;MAClBT,GAAG,CAACU,SAAS,GAAG,KAAK;MACrBV,GAAG,CAACW,YAAY,GAAG,KAAK;MACxB,OAAO,IAAI;IACb,CAAC,MAAM,IACLP,EAAE,KAAK,GAAG,CAAC,aACXE,EAAE,KAAK,GAAG,CAAC,aACXC,EAAE,KAAK,GAAG,CAAC,aACXC,EAAE,KAAK,EAAE,CAAC,WACV;MACAR,GAAG,CAACS,OAAO,GAAG,IAAI;MAClBT,GAAG,CAACU,SAAS,GAAG,KAAK;MACrBV,GAAG,CAACW,YAAY,GAAG,KAAK;MACxB,OAAO,IAAI;IACb,CAAC,MAAM,IACLP,EAAE,KAAK,GAAG,CAAC,aACXE,EAAE,KAAK,GAAG,CAAC,aACXC,EAAE,KAAK,EAAE,CAAC,WACV;MACAP,GAAG,CAACS,OAAO,GAAG,IAAI;MAClBT,GAAG,CAACU,SAAS,GAAG,KAAK;MACrBV,GAAG,CAACW,YAAY,GAAG,IAAI;MACvB,OAAO,IAAI;IACb;EACF;EAEA,OAAO,KAAK;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}