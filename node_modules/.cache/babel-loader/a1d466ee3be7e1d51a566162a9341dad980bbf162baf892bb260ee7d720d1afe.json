{"ast":null,"code":"import _objectSpread from\"C:/Users/shiva/Desktop/talentflow-mini-hiring-platform/TalentFlow/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{DragDropContext,Droppable,Draggable}from'react-beautiful-dnd';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const questionTypes=[{value:'single-choice',label:'Single Choice'},{value:'multi-choice',label:'Multiple Choice'},{value:'short-text',label:'Short Text'},{value:'long-text',label:'Long Text'},{value:'numeric',label:'Numeric'},{value:'file-upload',label:'File Upload'}];const AssessmentBuilder=_ref=>{let{jobId,onSave,onClose}=_ref;const[assessment,setAssessment]=useState({id:'',jobId,title:'',description:'',sections:[],createdAt:'',updatedAt:''});const[activeSection,setActiveSection]=useState(null);const[activeQuestion,setActiveQuestion]=useState(null);useEffect(()=>{loadAssessment();},[jobId]);const loadAssessment=async()=>{try{const response=await fetch(\"/api/assessments/\".concat(jobId));if(response.ok){const data=await response.json();if(data.data){setAssessment(data.data);}}}catch(error){console.error('Error loading assessment:',error);}};const handleSave=async()=>{try{const response=await fetch(\"/api/assessments/\".concat(jobId),{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify(assessment)});if(!response.ok)throw new Error('Failed to save assessment');const data=await response.json();onSave(data.data);}catch(error){console.error('Error saving assessment:',error);alert('Failed to save assessment. Please try again.');}};const addSection=()=>{const newSection={id:\"section-\".concat(Date.now()),title:'New Section',questions:[]};setAssessment(prev=>_objectSpread(_objectSpread({},prev),{},{sections:[...prev.sections,newSection]}));};const updateSection=(sectionIndex,updates)=>{setAssessment(prev=>_objectSpread(_objectSpread({},prev),{},{sections:prev.sections.map((section,index)=>index===sectionIndex?_objectSpread(_objectSpread({},section),updates):section)}));};const deleteSection=sectionIndex=>{setAssessment(prev=>_objectSpread(_objectSpread({},prev),{},{sections:prev.sections.filter((_,index)=>index!==sectionIndex)}));};const addQuestion=sectionIndex=>{const newQuestion={id:\"question-\".concat(Date.now()),type:'short-text',title:'New Question',description:'',required:false,options:[],validation:{}};setAssessment(prev=>_objectSpread(_objectSpread({},prev),{},{sections:prev.sections.map((section,index)=>index===sectionIndex?_objectSpread(_objectSpread({},section),{},{questions:[...section.questions,newQuestion]}):section)}));};const updateQuestion=(sectionIndex,questionIndex,updates)=>{setAssessment(prev=>_objectSpread(_objectSpread({},prev),{},{sections:prev.sections.map((section,sIndex)=>sIndex===sectionIndex?_objectSpread(_objectSpread({},section),{},{questions:section.questions.map((question,qIndex)=>qIndex===questionIndex?_objectSpread(_objectSpread({},question),updates):question)}):section)}));};const deleteQuestion=(sectionIndex,questionIndex)=>{setAssessment(prev=>_objectSpread(_objectSpread({},prev),{},{sections:prev.sections.map((section,sIndex)=>sIndex===sectionIndex?_objectSpread(_objectSpread({},section),{},{questions:section.questions.filter((_,qIndex)=>qIndex!==questionIndex)}):section)}));};const handleDragEnd=result=>{if(!result.destination)return;const{source,destination,type}=result;if(type==='section'){// Reorder sections\nconst sections=Array.from(assessment.sections);const[removed]=sections.splice(source.index,1);sections.splice(destination.index,0,removed);setAssessment(prev=>_objectSpread(_objectSpread({},prev),{},{sections}));}else if(type==='question'){// Reorder questions within or between sections\nconst sourceSectionIndex=parseInt(source.droppableId.split('-')[1]);const destSectionIndex=parseInt(destination.droppableId.split('-')[1]);const sourceSection=assessment.sections[sourceSectionIndex];const destSection=assessment.sections[destSectionIndex];const sourceQuestions=Array.from(sourceSection.questions);const[removed]=sourceQuestions.splice(source.index,1);if(sourceSectionIndex===destSectionIndex){// Same section\nsourceQuestions.splice(destination.index,0,removed);updateSection(sourceSectionIndex,{questions:sourceQuestions});}else{// Different sections\nconst destQuestions=Array.from(destSection.questions);destQuestions.splice(destination.index,0,removed);setAssessment(prev=>_objectSpread(_objectSpread({},prev),{},{sections:prev.sections.map((section,index)=>{if(index===sourceSectionIndex){return _objectSpread(_objectSpread({},section),{},{questions:sourceQuestions});}else if(index===destSectionIndex){return _objectSpread(_objectSpread({},section),{},{questions:destQuestions});}return section;})}));}}};return/*#__PURE__*/_jsx(\"div\",{className:\"assessment-builder\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"builder-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold\",children:\"Assessment Builder\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-2\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:onClose,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:handleSave,children:\"Save Assessment\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-2 gap-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"builder-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold mb-4\",children:\"Assessment Details\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Title\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-input\",value:assessment.title,onChange:e=>setAssessment(prev=>_objectSpread(_objectSpread({},prev),{},{title:e.target.value})),placeholder:\"Assessment Title\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Description\"}),/*#__PURE__*/_jsx(\"textarea\",{className:\"form-input\",value:assessment.description,onChange:e=>setAssessment(prev=>_objectSpread(_objectSpread({},prev),{},{description:e.target.value})),placeholder:\"Assessment Description\",rows:3})]})]}),/*#__PURE__*/_jsxs(DragDropContext,{onDragEnd:handleDragEnd,children:[/*#__PURE__*/_jsx(\"div\",{className:\"sections-list\",children:assessment.sections.map((section,sectionIndex)=>/*#__PURE__*/_jsx(Draggable,{draggableId:\"section-\".concat(sectionIndex),index:sectionIndex,children:provided=>/*#__PURE__*/_jsxs(\"div\",_objectSpread(_objectSpread({className:\"card mb-4\",ref:provided.innerRef},provided.draggableProps),{},{children:[/*#__PURE__*/_jsxs(\"div\",_objectSpread(_objectSpread({className:\"section-header\"},provided.dragHandleProps),{},{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"section-title-input\",value:section.title,onChange:e=>updateSection(sectionIndex,{title:e.target.value})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-2\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary btn-sm\",onClick:()=>addQuestion(sectionIndex),children:\"Add Question\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger btn-sm\",onClick:()=>deleteSection(sectionIndex),children:\"Delete\"})]})]})),/*#__PURE__*/_jsx(Droppable,{droppableId:\"section-\".concat(sectionIndex),type:\"question\",children:provided=>/*#__PURE__*/_jsxs(\"div\",_objectSpread(_objectSpread({className:\"questions-list\",ref:provided.innerRef},provided.droppableProps),{},{children:[section.questions.map((question,questionIndex)=>/*#__PURE__*/_jsx(Draggable,{draggableId:\"question-\".concat(question.id),index:questionIndex,children:provided=>{var _question$options;return/*#__PURE__*/_jsxs(\"div\",_objectSpread(_objectSpread(_objectSpread({className:\"question-item\",ref:provided.innerRef},provided.draggableProps),provided.dragHandleProps),{},{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"question-header\",children:[/*#__PURE__*/_jsx(\"select\",{className:\"question-type-select\",value:question.type,onChange:e=>updateQuestion(sectionIndex,questionIndex,{type:e.target.value}),children:questionTypes.map(type=>/*#__PURE__*/_jsx(\"option\",{value:type.value,children:type.label},type.value))}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger btn-sm\",onClick:()=>deleteQuestion(sectionIndex,questionIndex),children:\"\\xD7\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"question-title-input\",value:question.title,onChange:e=>updateQuestion(sectionIndex,questionIndex,{title:e.target.value}),placeholder:\"Question title\"}),/*#__PURE__*/_jsx(\"textarea\",{className:\"question-description-input\",value:question.description,onChange:e=>updateQuestion(sectionIndex,questionIndex,{description:e.target.value}),placeholder:\"Question description (optional)\",rows:2}),(question.type==='single-choice'||question.type==='multi-choice')&&/*#__PURE__*/_jsxs(\"div\",{className:\"options-editor\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Options:\"}),(_question$options=question.options)===null||_question$options===void 0?void 0:_question$options.map((option,optionIndex)=>/*#__PURE__*/_jsxs(\"div\",{className:\"option-item\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:option,onChange:e=>{const newOptions=[...(question.options||[])];newOptions[optionIndex]=e.target.value;updateQuestion(sectionIndex,questionIndex,{options:newOptions});}}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger btn-sm\",onClick:()=>{const newOptions=(question.options||[]).filter((_,i)=>i!==optionIndex);updateQuestion(sectionIndex,questionIndex,{options:newOptions});},children:\"\\xD7\"})]},optionIndex)),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary btn-sm\",onClick:()=>{const newOptions=[...(question.options||[]),''];updateQuestion(sectionIndex,questionIndex,{options:newOptions});},children:\"Add Option\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"question-settings\",children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:question.required,onChange:e=>updateQuestion(sectionIndex,questionIndex,{required:e.target.checked})}),\"Required\"]})})]}));}},question.id)),provided.placeholder]}))})]}))},section.id))}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:addSection,children:\"Add Section\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"preview-pane\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold mb-4\",children:\"Live Preview\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"preview-content\",children:[assessment.title&&/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold mb-2\",children:assessment.title}),assessment.description&&/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mb-4\",children:assessment.description}),assessment.sections.map((section,sectionIndex)=>/*#__PURE__*/_jsxs(\"div\",{className:\"preview-section mb-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold mb-3\",children:section.title}),section.questions.map((question,questionIndex)=>{var _question$options2,_question$options3;return/*#__PURE__*/_jsxs(\"div\",{className:\"preview-question mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"question-header\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"font-medium\",children:[question.title,question.required&&/*#__PURE__*/_jsx(\"span\",{className:\"text-red-500 ml-1\",children:\"*\"})]}),question.description&&/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 mt-1\",children:question.description})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"question-input mt-2\",children:[question.type==='single-choice'&&/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2\",children:(_question$options2=question.options)===null||_question$options2===void 0?void 0:_question$options2.map((option,optionIndex)=>/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"q-\".concat(question.id),className:\"mr-2\"}),option]},optionIndex))}),question.type==='multi-choice'&&/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2\",children:(_question$options3=question.options)===null||_question$options3===void 0?void 0:_question$options3.map((option,optionIndex)=>/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"mr-2\"}),option]},optionIndex))}),question.type==='short-text'&&/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-input\",placeholder:\"Your answer\"}),question.type==='long-text'&&/*#__PURE__*/_jsx(\"textarea\",{className:\"form-input\",rows:4,placeholder:\"Your answer\"}),question.type==='numeric'&&/*#__PURE__*/_jsx(\"input\",{type:\"number\",className:\"form-input\",placeholder:\"Your answer\"}),question.type==='file-upload'&&/*#__PURE__*/_jsx(\"input\",{type:\"file\",className:\"form-input\"})]})]},question.id);})]},section.id)),assessment.sections.length===0&&/*#__PURE__*/_jsx(\"div\",{className:\"text-center text-gray-500 py-8\",children:\"Add sections and questions to see the preview\"})]})]})})]})]})});};export default AssessmentBuilder;","map":{"version":3,"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","jsx","_jsx","jsxs","_jsxs","questionTypes","value","label","AssessmentBuilder","_ref","jobId","onSave","onClose","assessment","setAssessment","id","title","description","sections","createdAt","updatedAt","activeSection","setActiveSection","activeQuestion","setActiveQuestion","loadAssessment","response","fetch","concat","ok","data","json","error","console","handleSave","method","headers","body","JSON","stringify","Error","alert","addSection","newSection","Date","now","questions","prev","_objectSpread","updateSection","sectionIndex","updates","map","section","index","deleteSection","filter","_","addQuestion","newQuestion","type","required","options","validation","updateQuestion","questionIndex","sIndex","question","qIndex","deleteQuestion","handleDragEnd","result","destination","source","Array","from","removed","splice","sourceSectionIndex","parseInt","droppableId","split","destSectionIndex","sourceSection","destSection","sourceQuestions","destQuestions","className","children","onClick","onChange","e","target","placeholder","rows","onDragEnd","draggableId","provided","ref","innerRef","draggableProps","dragHandleProps","droppableProps","_question$options","option","optionIndex","newOptions","i","checked","_question$options2","_question$options3","name","length"],"sources":["C:/Users/shiva/Desktop/talentflow-mini-hiring-platform/TalentFlow/src/components/AssessmentBuilder.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { DragDropContext, Droppable, Draggable, DropResult } from 'react-beautiful-dnd';\r\nimport { Assessment, AssessmentSection, AssessmentQuestion } from '../types';\r\n\r\ninterface AssessmentBuilderProps {\r\n  jobId: string;\r\n  onSave: (assessment: Assessment) => void;\r\n  onClose: () => void;\r\n}\r\n\r\nconst questionTypes = [\r\n  { value: 'single-choice', label: 'Single Choice' },\r\n  { value: 'multi-choice', label: 'Multiple Choice' },\r\n  { value: 'short-text', label: 'Short Text' },\r\n  { value: 'long-text', label: 'Long Text' },\r\n  { value: 'numeric', label: 'Numeric' },\r\n  { value: 'file-upload', label: 'File Upload' }\r\n];\r\n\r\nconst AssessmentBuilder: React.FC<AssessmentBuilderProps> = ({ jobId, onSave, onClose }) => {\r\n  const [assessment, setAssessment] = useState<Assessment>({\r\n    id: '',\r\n    jobId,\r\n    title: '',\r\n    description: '',\r\n    sections: [],\r\n    createdAt: '',\r\n    updatedAt: ''\r\n  });\r\n\r\n  const [activeSection, setActiveSection] = useState<number | null>(null);\r\n  const [activeQuestion, setActiveQuestion] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    loadAssessment();\r\n  }, [jobId]);\r\n\r\n  const loadAssessment = async () => {\r\n    try {\r\n      const response = await fetch(`/api/assessments/${jobId}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        if (data.data) {\r\n          setAssessment(data.data);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading assessment:', error);\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      const response = await fetch(`/api/assessments/${jobId}`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(assessment)\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Failed to save assessment');\r\n\r\n      const data = await response.json();\r\n      onSave(data.data);\r\n    } catch (error) {\r\n      console.error('Error saving assessment:', error);\r\n      alert('Failed to save assessment. Please try again.');\r\n    }\r\n  };\r\n\r\n  const addSection = () => {\r\n    const newSection: AssessmentSection = {\r\n      id: `section-${Date.now()}`,\r\n      title: 'New Section',\r\n      questions: []\r\n    };\r\n\r\n    setAssessment(prev => ({\r\n      ...prev,\r\n      sections: [...prev.sections, newSection]\r\n    }));\r\n  };\r\n\r\n  const updateSection = (sectionIndex: number, updates: Partial<AssessmentSection>) => {\r\n    setAssessment(prev => ({\r\n      ...prev,\r\n      sections: prev.sections.map((section, index) =>\r\n        index === sectionIndex ? { ...section, ...updates } : section\r\n      )\r\n    }));\r\n  };\r\n\r\n  const deleteSection = (sectionIndex: number) => {\r\n    setAssessment(prev => ({\r\n      ...prev,\r\n      sections: prev.sections.filter((_, index) => index !== sectionIndex)\r\n    }));\r\n  };\r\n\r\n  const addQuestion = (sectionIndex: number) => {\r\n    const newQuestion: AssessmentQuestion = {\r\n      id: `question-${Date.now()}`,\r\n      type: 'short-text',\r\n      title: 'New Question',\r\n      description: '',\r\n      required: false,\r\n      options: [],\r\n      validation: {}\r\n    };\r\n\r\n    setAssessment(prev => ({\r\n      ...prev,\r\n      sections: prev.sections.map((section, index) =>\r\n        index === sectionIndex\r\n          ? { ...section, questions: [...section.questions, newQuestion] }\r\n          : section\r\n      )\r\n    }));\r\n  };\r\n\r\n  const updateQuestion = (sectionIndex: number, questionIndex: number, updates: Partial<AssessmentQuestion>) => {\r\n    setAssessment(prev => ({\r\n      ...prev,\r\n      sections: prev.sections.map((section, sIndex) =>\r\n        sIndex === sectionIndex\r\n          ? {\r\n              ...section,\r\n              questions: section.questions.map((question, qIndex) =>\r\n                qIndex === questionIndex ? { ...question, ...updates } : question\r\n              )\r\n            }\r\n          : section\r\n      )\r\n    }));\r\n  };\r\n\r\n  const deleteQuestion = (sectionIndex: number, questionIndex: number) => {\r\n    setAssessment(prev => ({\r\n      ...prev,\r\n      sections: prev.sections.map((section, sIndex) =>\r\n        sIndex === sectionIndex\r\n          ? {\r\n              ...section,\r\n              questions: section.questions.filter((_, qIndex) => qIndex !== questionIndex)\r\n            }\r\n          : section\r\n      )\r\n    }));\r\n  };\r\n\r\n  const handleDragEnd = (result: DropResult) => {\r\n    if (!result.destination) return;\r\n\r\n    const { source, destination, type } = result;\r\n\r\n    if (type === 'section') {\r\n      // Reorder sections\r\n      const sections = Array.from(assessment.sections);\r\n      const [removed] = sections.splice(source.index, 1);\r\n      sections.splice(destination.index, 0, removed);\r\n\r\n      setAssessment(prev => ({ ...prev, sections }));\r\n    } else if (type === 'question') {\r\n      // Reorder questions within or between sections\r\n      const sourceSectionIndex = parseInt(source.droppableId.split('-')[1]);\r\n      const destSectionIndex = parseInt(destination.droppableId.split('-')[1]);\r\n\r\n      const sourceSection = assessment.sections[sourceSectionIndex];\r\n      const destSection = assessment.sections[destSectionIndex];\r\n\r\n      const sourceQuestions = Array.from(sourceSection.questions);\r\n      const [removed] = sourceQuestions.splice(source.index, 1);\r\n\r\n      if (sourceSectionIndex === destSectionIndex) {\r\n        // Same section\r\n        sourceQuestions.splice(destination.index, 0, removed);\r\n        updateSection(sourceSectionIndex, { questions: sourceQuestions });\r\n      } else {\r\n        // Different sections\r\n        const destQuestions = Array.from(destSection.questions);\r\n        destQuestions.splice(destination.index, 0, removed);\r\n\r\n        setAssessment(prev => ({\r\n          ...prev,\r\n          sections: prev.sections.map((section, index) => {\r\n            if (index === sourceSectionIndex) {\r\n              return { ...section, questions: sourceQuestions };\r\n            } else if (index === destSectionIndex) {\r\n              return { ...section, questions: destQuestions };\r\n            }\r\n            return section;\r\n          })\r\n        }));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"assessment-builder\">\r\n      <div className=\"builder-header\">\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <h2 className=\"text-2xl font-bold\">Assessment Builder</h2>\r\n          <div className=\"flex gap-2\">\r\n            <button className=\"btn btn-secondary\" onClick={onClose}>\r\n              Cancel\r\n            </button>\r\n            <button className=\"btn btn-primary\" onClick={handleSave}>\r\n              Save Assessment\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-2 gap-6\">\r\n          <div className=\"builder-form\">\r\n            <div className=\"card mb-4\">\r\n              <h3 className=\"text-lg font-semibold mb-4\">Assessment Details</h3>\r\n              <div className=\"form-group\">\r\n                <label className=\"form-label\">Title</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-input\"\r\n                  value={assessment.title}\r\n                  onChange={(e) => setAssessment(prev => ({ ...prev, title: e.target.value }))}\r\n                  placeholder=\"Assessment Title\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label className=\"form-label\">Description</label>\r\n                <textarea\r\n                  className=\"form-input\"\r\n                  value={assessment.description}\r\n                  onChange={(e) => setAssessment(prev => ({ ...prev, description: e.target.value }))}\r\n                  placeholder=\"Assessment Description\"\r\n                  rows={3}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <DragDropContext onDragEnd={handleDragEnd}>\r\n              <div className=\"sections-list\">\r\n                {assessment.sections.map((section, sectionIndex) => (\r\n                  <Draggable\r\n                    key={section.id}\r\n                    draggableId={`section-${sectionIndex}`}\r\n                    index={sectionIndex}\r\n                  >\r\n                    {(provided) => (\r\n                      <div\r\n                        className=\"card mb-4\"\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                      >\r\n                        <div className=\"section-header\" {...provided.dragHandleProps}>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"section-title-input\"\r\n                            value={section.title}\r\n                            onChange={(e) => updateSection(sectionIndex, { title: e.target.value })}\r\n                          />\r\n                          <div className=\"flex gap-2\">\r\n                            <button\r\n                              className=\"btn btn-secondary btn-sm\"\r\n                              onClick={() => addQuestion(sectionIndex)}\r\n                            >\r\n                              Add Question\r\n                            </button>\r\n                            <button\r\n                              className=\"btn btn-danger btn-sm\"\r\n                              onClick={() => deleteSection(sectionIndex)}\r\n                            >\r\n                              Delete\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <Droppable droppableId={`section-${sectionIndex}`} type=\"question\">\r\n                          {(provided) => (\r\n                            <div\r\n                              className=\"questions-list\"\r\n                              ref={provided.innerRef}\r\n                              {...provided.droppableProps}\r\n                            >\r\n                              {section.questions.map((question, questionIndex) => (\r\n                                <Draggable\r\n                                  key={question.id}\r\n                                  draggableId={`question-${question.id}`}\r\n                                  index={questionIndex}\r\n                                >\r\n                                  {(provided) => (\r\n                                    <div\r\n                                      className=\"question-item\"\r\n                                      ref={provided.innerRef}\r\n                                      {...provided.draggableProps}\r\n                                      {...provided.dragHandleProps}\r\n                                    >\r\n                                      <div className=\"question-header\">\r\n                                        <select\r\n                                          className=\"question-type-select\"\r\n                                          value={question.type}\r\n                                          onChange={(e) => updateQuestion(sectionIndex, questionIndex, { type: e.target.value as any })}\r\n                                        >\r\n                                          {questionTypes.map(type => (\r\n                                            <option key={type.value} value={type.value}>\r\n                                              {type.label}\r\n                                            </option>\r\n                                          ))}\r\n                                        </select>\r\n                                        <button\r\n                                          className=\"btn btn-danger btn-sm\"\r\n                                          onClick={() => deleteQuestion(sectionIndex, questionIndex)}\r\n                                        >\r\n                                          ×\r\n                                        </button>\r\n                                      </div>\r\n\r\n                                      <input\r\n                                        type=\"text\"\r\n                                        className=\"question-title-input\"\r\n                                        value={question.title}\r\n                                        onChange={(e) => updateQuestion(sectionIndex, questionIndex, { title: e.target.value })}\r\n                                        placeholder=\"Question title\"\r\n                                      />\r\n\r\n                                      <textarea\r\n                                        className=\"question-description-input\"\r\n                                        value={question.description}\r\n                                        onChange={(e) => updateQuestion(sectionIndex, questionIndex, { description: e.target.value })}\r\n                                        placeholder=\"Question description (optional)\"\r\n                                        rows={2}\r\n                                      />\r\n\r\n                                      {(question.type === 'single-choice' || question.type === 'multi-choice') && (\r\n                                        <div className=\"options-editor\">\r\n                                          <label>Options:</label>\r\n                                          {question.options?.map((option, optionIndex) => (\r\n                                            <div key={optionIndex} className=\"option-item\">\r\n                                              <input\r\n                                                type=\"text\"\r\n                                                value={option}\r\n                                                onChange={(e) => {\r\n                                                  const newOptions = [...(question.options || [])];\r\n                                                  newOptions[optionIndex] = e.target.value;\r\n                                                  updateQuestion(sectionIndex, questionIndex, { options: newOptions });\r\n                                                }}\r\n                                              />\r\n                                              <button\r\n                                                className=\"btn btn-danger btn-sm\"\r\n                                                onClick={() => {\r\n                                                  const newOptions = (question.options || []).filter((_, i) => i !== optionIndex);\r\n                                                  updateQuestion(sectionIndex, questionIndex, { options: newOptions });\r\n                                                }}\r\n                                              >\r\n                                                ×\r\n                                              </button>\r\n                                            </div>\r\n                                          ))}\r\n                                          <button\r\n                                            className=\"btn btn-secondary btn-sm\"\r\n                                            onClick={() => {\r\n                                              const newOptions = [...(question.options || []), ''];\r\n                                              updateQuestion(sectionIndex, questionIndex, { options: newOptions });\r\n                                            }}\r\n                                          >\r\n                                            Add Option\r\n                                          </button>\r\n                                        </div>\r\n                                      )}\r\n\r\n                                      <div className=\"question-settings\">\r\n                                        <label>\r\n                                          <input\r\n                                            type=\"checkbox\"\r\n                                            checked={question.required}\r\n                                            onChange={(e) => updateQuestion(sectionIndex, questionIndex, { required: e.target.checked })}\r\n                                          />\r\n                                          Required\r\n                                        </label>\r\n                                      </div>\r\n                                    </div>\r\n                                  )}\r\n                                </Draggable>\r\n                              ))}\r\n                              {provided.placeholder}\r\n                            </div>\r\n                          )}\r\n                        </Droppable>\r\n                      </div>\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n              </div>\r\n\r\n              <button className=\"btn btn-primary\" onClick={addSection}>\r\n                Add Section\r\n              </button>\r\n            </DragDropContext>\r\n          </div>\r\n\r\n          <div className=\"preview-pane\">\r\n            <div className=\"card\">\r\n              <h3 className=\"text-lg font-semibold mb-4\">Live Preview</h3>\r\n              <div className=\"preview-content\">\r\n                {assessment.title && (\r\n                  <h2 className=\"text-xl font-bold mb-2\">{assessment.title}</h2>\r\n                )}\r\n                {assessment.description && (\r\n                  <p className=\"text-gray-600 mb-4\">{assessment.description}</p>\r\n                )}\r\n\r\n                {assessment.sections.map((section, sectionIndex) => (\r\n                  <div key={section.id} className=\"preview-section mb-6\">\r\n                    <h3 className=\"text-lg font-semibold mb-3\">{section.title}</h3>\r\n\r\n                    {section.questions.map((question, questionIndex) => (\r\n                      <div key={question.id} className=\"preview-question mb-4\">\r\n                        <div className=\"question-header\">\r\n                          <h4 className=\"font-medium\">\r\n                            {question.title}\r\n                            {question.required && <span className=\"text-red-500 ml-1\">*</span>}\r\n                          </h4>\r\n                          {question.description && (\r\n                            <p className=\"text-sm text-gray-600 mt-1\">{question.description}</p>\r\n                          )}\r\n                        </div>\r\n\r\n                        <div className=\"question-input mt-2\">\r\n                          {question.type === 'single-choice' && (\r\n                            <div className=\"space-y-2\">\r\n                              {question.options?.map((option, optionIndex) => (\r\n                                <label key={optionIndex} className=\"flex items-center\">\r\n                                  <input type=\"radio\" name={`q-${question.id}`} className=\"mr-2\" />\r\n                                  {option}\r\n                                </label>\r\n                              ))}\r\n                            </div>\r\n                          )}\r\n\r\n                          {question.type === 'multi-choice' && (\r\n                            <div className=\"space-y-2\">\r\n                              {question.options?.map((option, optionIndex) => (\r\n                                <label key={optionIndex} className=\"flex items-center\">\r\n                                  <input type=\"checkbox\" className=\"mr-2\" />\r\n                                  {option}\r\n                                </label>\r\n                              ))}\r\n                            </div>\r\n                          )}\r\n\r\n                          {question.type === 'short-text' && (\r\n                            <input type=\"text\" className=\"form-input\" placeholder=\"Your answer\" />\r\n                          )}\r\n\r\n                          {question.type === 'long-text' && (\r\n                            <textarea className=\"form-input\" rows={4} placeholder=\"Your answer\" />\r\n                          )}\r\n\r\n                          {question.type === 'numeric' && (\r\n                            <input type=\"number\" className=\"form-input\" placeholder=\"Your answer\" />\r\n                          )}\r\n\r\n                          {question.type === 'file-upload' && (\r\n                            <input type=\"file\" className=\"form-input\" />\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                ))}\r\n\r\n                {assessment.sections.length === 0 && (\r\n                  <div className=\"text-center text-gray-500 py-8\">\r\n                    Add sections and questions to see the preview\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AssessmentBuilder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}