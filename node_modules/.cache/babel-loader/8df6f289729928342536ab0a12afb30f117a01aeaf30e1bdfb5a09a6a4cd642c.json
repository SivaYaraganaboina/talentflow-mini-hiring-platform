{"ast":null,"code":"import { getEmptyResult, parseImpl, resetResult } from 'tldts-core';\nimport suffixLookup from './src/suffix-trie';\n// For all methods but 'parse', it does not make sense to allocate an object\n// every single time to only return the value of a specific attribute. To avoid\n// this un-necessary allocation, we use a global object which is re-used.\nconst RESULT = getEmptyResult();\nexport function parse(url, options = {}) {\n  return parseImpl(url, 5 /* FLAG.ALL */, suffixLookup, options, getEmptyResult());\n}\nexport function getHostname(url, options = {}) {\n  /*@__INLINE__*/resetResult(RESULT);\n  return parseImpl(url, 0 /* FLAG.HOSTNAME */, suffixLookup, options, RESULT).hostname;\n}\nexport function getPublicSuffix(url, options = {}) {\n  /*@__INLINE__*/resetResult(RESULT);\n  return parseImpl(url, 2 /* FLAG.PUBLIC_SUFFIX */, suffixLookup, options, RESULT).publicSuffix;\n}\nexport function getDomain(url, options = {}) {\n  /*@__INLINE__*/resetResult(RESULT);\n  return parseImpl(url, 3 /* FLAG.DOMAIN */, suffixLookup, options, RESULT).domain;\n}\nexport function getSubdomain(url, options = {}) {\n  /*@__INLINE__*/resetResult(RESULT);\n  return parseImpl(url, 4 /* FLAG.SUB_DOMAIN */, suffixLookup, options, RESULT).subdomain;\n}\nexport function getDomainWithoutSuffix(url, options = {}) {\n  /*@__INLINE__*/resetResult(RESULT);\n  return parseImpl(url, 5 /* FLAG.ALL */, suffixLookup, options, RESULT).domainWithoutSuffix;\n}","map":{"version":3,"names":["getEmptyResult","parseImpl","resetResult","suffixLookup","RESULT","parse","url","options","getHostname","hostname","getPublicSuffix","publicSuffix","getDomain","domain","getSubdomain","subdomain","getDomainWithoutSuffix","domainWithoutSuffix"],"sources":["C:\\Users\\shiva\\Desktop\\talentflow-mini-hiring-platform\\TalentFlow\\node_modules\\tldts\\index.ts"],"sourcesContent":["import {\n  FLAG,\n  getEmptyResult,\n  IOptions,\n  IResult,\n  parseImpl,\n  resetResult,\n} from 'tldts-core';\n\nimport suffixLookup from './src/suffix-trie';\n\n// For all methods but 'parse', it does not make sense to allocate an object\n// every single time to only return the value of a specific attribute. To avoid\n// this un-necessary allocation, we use a global object which is re-used.\nconst RESULT: IResult = getEmptyResult();\n\nexport function parse(url: string, options: Partial<IOptions> = {}): IResult {\n  return parseImpl(url, FLAG.ALL, suffixLookup, options, getEmptyResult());\n}\n\nexport function getHostname(\n  url: string,\n  options: Partial<IOptions> = {},\n): string | null {\n  /*@__INLINE__*/ resetResult(RESULT);\n  return parseImpl(url, FLAG.HOSTNAME, suffixLookup, options, RESULT).hostname;\n}\n\nexport function getPublicSuffix(\n  url: string,\n  options: Partial<IOptions> = {},\n): string | null {\n  /*@__INLINE__*/ resetResult(RESULT);\n  return parseImpl(url, FLAG.PUBLIC_SUFFIX, suffixLookup, options, RESULT)\n    .publicSuffix;\n}\n\nexport function getDomain(\n  url: string,\n  options: Partial<IOptions> = {},\n): string | null {\n  /*@__INLINE__*/ resetResult(RESULT);\n  return parseImpl(url, FLAG.DOMAIN, suffixLookup, options, RESULT).domain;\n}\n\nexport function getSubdomain(\n  url: string,\n  options: Partial<IOptions> = {},\n): string | null {\n  /*@__INLINE__*/ resetResult(RESULT);\n  return parseImpl(url, FLAG.SUB_DOMAIN, suffixLookup, options, RESULT)\n    .subdomain;\n}\n\nexport function getDomainWithoutSuffix(\n  url: string,\n  options: Partial<IOptions> = {},\n): string | null {\n  /*@__INLINE__*/ resetResult(RESULT);\n  return parseImpl(url, FLAG.ALL, suffixLookup, options, RESULT)\n    .domainWithoutSuffix;\n}\n"],"mappings":"AAAA,SAEEA,cAAc,EAGdC,SAAS,EACTC,WAAW,QACN,YAAY;AAEnB,OAAOC,YAAY,MAAM,mBAAmB;AAE5C;AACA;AACA;AACA,MAAMC,MAAM,GAAYJ,cAAc,EAAE;AAExC,OAAM,SAAUK,KAAKA,CAACC,GAAW,EAAEC,OAAA,GAA6B,EAAE;EAChE,OAAON,SAAS,CAACK,GAAG,oBAAYH,YAAY,EAAEI,OAAO,EAAEP,cAAc,EAAE,CAAC;AAC1E;AAEA,OAAM,SAAUQ,WAAWA,CACzBF,GAAW,EACXC,OAAA,GAA6B,EAAE;EAE/B,eAAgBL,WAAW,CAACE,MAAM,CAAC;EACnC,OAAOH,SAAS,CAACK,GAAG,yBAAiBH,YAAY,EAAEI,OAAO,EAAEH,MAAM,CAAC,CAACK,QAAQ;AAC9E;AAEA,OAAM,SAAUC,eAAeA,CAC7BJ,GAAW,EACXC,OAAA,GAA6B,EAAE;EAE/B,eAAgBL,WAAW,CAACE,MAAM,CAAC;EACnC,OAAOH,SAAS,CAACK,GAAG,8BAAsBH,YAAY,EAAEI,OAAO,EAAEH,MAAM,CAAC,CACrEO,YAAY;AACjB;AAEA,OAAM,SAAUC,SAASA,CACvBN,GAAW,EACXC,OAAA,GAA6B,EAAE;EAE/B,eAAgBL,WAAW,CAACE,MAAM,CAAC;EACnC,OAAOH,SAAS,CAACK,GAAG,uBAAeH,YAAY,EAAEI,OAAO,EAAEH,MAAM,CAAC,CAACS,MAAM;AAC1E;AAEA,OAAM,SAAUC,YAAYA,CAC1BR,GAAW,EACXC,OAAA,GAA6B,EAAE;EAE/B,eAAgBL,WAAW,CAACE,MAAM,CAAC;EACnC,OAAOH,SAAS,CAACK,GAAG,2BAAmBH,YAAY,EAAEI,OAAO,EAAEH,MAAM,CAAC,CAClEW,SAAS;AACd;AAEA,OAAM,SAAUC,sBAAsBA,CACpCV,GAAW,EACXC,OAAA,GAA6B,EAAE;EAE/B,eAAgBL,WAAW,CAACE,MAAM,CAAC;EACnC,OAAOH,SAAS,CAACK,GAAG,oBAAYH,YAAY,EAAEI,OAAO,EAAEH,MAAM,CAAC,CAC3Da,mBAAmB;AACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}