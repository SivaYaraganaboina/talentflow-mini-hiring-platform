{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\Desktop\\\\talentflow-mini-hiring-platform\\\\TalentFlow\\\\src\\\\index.tsx\";\nimport React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App';\nimport './styles/globals.css';\n\n// Initialize MSW in development\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function initializeApp() {\n  if (process.env.NODE_ENV === 'development') {\n    try {\n      const {\n        worker\n      } = await import('./services/mockApi');\n      await worker.start({\n        onUnhandledRequest: 'bypass',\n        serviceWorker: {\n          url: '/mockServiceWorker.js'\n        }\n      });\n      console.log('MSW worker started successfully');\n    } catch (error) {\n      console.error('Failed to start MSW worker:', error);\n    }\n  }\n  const container = document.getElementById('root');\n  if (container) {\n    const root = createRoot(container);\n    root.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this));\n  }\n}\ninitializeApp();","map":{"version":3,"names":["React","createRoot","App","jsxDEV","_jsxDEV","initializeApp","process","env","NODE_ENV","worker","start","onUnhandledRequest","serviceWorker","url","console","log","error","container","document","getElementById","root","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/shiva/Desktop/talentflow-mini-hiring-platform/TalentFlow/src/index.tsx"],"sourcesContent":["import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App';\nimport './styles/globals.css';\n\n// Initialize MSW in development\nasync function initializeApp() {\n  if (process.env.NODE_ENV === 'development') {\n    try {\n      const { worker } = await import('./services/mockApi');\n      await worker.start({\n        onUnhandledRequest: 'bypass',\n        serviceWorker: {\n          url: '/mockServiceWorker.js'\n        }\n      });\n      console.log('MSW worker started successfully');\n    } catch (error) {\n      console.error('Failed to start MSW worker:', error);\n    }\n  }\n\n  const container = document.getElementById('root');\n  if (container) {\n    const root = createRoot(container);\n    root.render(\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    );\n  }\n}\n\ninitializeApp();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAO,sBAAsB;;AAE7B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAeC,aAAaA,CAAA,EAAG;EAC7B,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;IAC1C,IAAI;MACF,MAAM;QAAEC;MAAO,CAAC,GAAG,MAAM,MAAM,CAAC,oBAAoB,CAAC;MACrD,MAAMA,MAAM,CAACC,KAAK,CAAC;QACjBC,kBAAkB,EAAE,QAAQ;QAC5BC,aAAa,EAAE;UACbC,GAAG,EAAE;QACP;MACF,CAAC,CAAC;MACFC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAChD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF;EAEA,MAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;EACjD,IAAIF,SAAS,EAAE;IACb,MAAMG,IAAI,GAAGnB,UAAU,CAACgB,SAAS,CAAC;IAClCG,IAAI,CAACC,MAAM,cACTjB,OAAA,CAACJ,KAAK,CAACsB,UAAU;MAAAC,QAAA,eACfnB,OAAA,CAACF,GAAG;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS,CACpB,CAAC;EACH;AACF;AAEAtB,aAAa,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}