{"ast":null,"code":"import _objectSpread from\"C:/Users/shiva/Desktop/talentflow-mini-hiring-platform/TalentFlow/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AssessmentForm=_ref=>{let{assessment,candidateId,onSubmit,onClose}=_ref;const[responses,setResponses]=useState({});const[errors,setErrors]=useState({});const[currentSection,setCurrentSection]=useState(0);const[isSubmitting,setIsSubmitting]=useState(false);useEffect(()=>{// Initialize responses with default values\nconst initialResponses={};assessment.sections.forEach(section=>{section.questions.forEach(question=>{if(question.type==='single-choice'||question.type==='multi-choice'){initialResponses[question.id]=question.type==='multi-choice'?[]:'';}else if(question.type==='numeric'){initialResponses[question.id]='';}else{initialResponses[question.id]='';}});});setResponses(initialResponses);},[assessment]);const validateSection=sectionIndex=>{const section=assessment.sections[sectionIndex];const sectionErrors={};let isValid=true;section.questions.forEach(question=>{var _question$validation3,_question$validation4;const value=responses[question.id];// Check required fields\nif(question.required){if(question.type==='multi-choice'&&(!Array.isArray(value)||value.length===0)){sectionErrors[question.id]='This field is required';isValid=false;}else if(question.type!=='multi-choice'&&(!value||value.toString().trim()==='')){sectionErrors[question.id]='This field is required';isValid=false;}}// Type-specific validation\nif(question.type==='numeric'&&value){const numValue=parseFloat(value);if(isNaN(numValue)){sectionErrors[question.id]='Please enter a valid number';isValid=false;}else{var _question$validation,_question$validation2;if(((_question$validation=question.validation)===null||_question$validation===void 0?void 0:_question$validation.min)!==undefined&&numValue<question.validation.min){sectionErrors[question.id]=\"Value must be at least \".concat(question.validation.min);isValid=false;}if(((_question$validation2=question.validation)===null||_question$validation2===void 0?void 0:_question$validation2.max)!==undefined&&numValue>question.validation.max){sectionErrors[question.id]=\"Value must be at most \".concat(question.validation.max);isValid=false;}}}if(question.type==='short-text'&&(_question$validation3=question.validation)!==null&&_question$validation3!==void 0&&_question$validation3.maxLength&&value.length>question.validation.maxLength){sectionErrors[question.id]=\"Maximum \".concat(question.validation.maxLength,\" characters allowed\");isValid=false;}if(question.type==='long-text'&&(_question$validation4=question.validation)!==null&&_question$validation4!==void 0&&_question$validation4.maxLength&&value.length>question.validation.maxLength){sectionErrors[question.id]=\"Maximum \".concat(question.validation.maxLength,\" characters allowed\");isValid=false;}});setErrors(sectionErrors);return isValid;};const handleInputChange=(questionId,value)=>{setResponses(prev=>_objectSpread(_objectSpread({},prev),{},{[questionId]:value}));// Clear error for this field\nif(errors[questionId]){setErrors(prev=>{const newErrors=_objectSpread({},prev);delete newErrors[questionId];return newErrors;});}};const handleNext=()=>{if(validateSection(currentSection)){if(currentSection<assessment.sections.length-1){setCurrentSection(currentSection+1);}}};const handlePrevious=()=>{if(currentSection>0){setCurrentSection(currentSection-1);}};const handleSubmit=async()=>{if(!validateSection(currentSection)){return;}setIsSubmitting(true);try{const submission={id:\"submission-\".concat(Date.now()),jobId:assessment.jobId,candidateId,responses,submittedAt:new Date().toISOString()};await onSubmit(submission);}catch(error){console.error('Error submitting assessment:',error);alert('Failed to submit assessment. Please try again.');}finally{setIsSubmitting(false);}};const renderQuestion=question=>{var _question$options,_question$options2,_question$validation5,_question$validation6,_question$validation7,_question$validation8;const value=responses[question.id];const error=errors[question.id];return/*#__PURE__*/_jsxs(\"div\",{className:\"question-item mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"question-header mb-3\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"font-medium text-gray-900\",children:[question.title,question.required&&/*#__PURE__*/_jsx(\"span\",{className:\"text-red-500 ml-1\",children:\"*\"})]}),question.description&&/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 mt-1\",children:question.description})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"question-input\",children:[question.type==='single-choice'&&/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2\",children:(_question$options=question.options)===null||_question$options===void 0?void 0:_question$options.map((option,optionIndex)=>/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:question.id,value:option,checked:value===option,onChange:e=>handleInputChange(question.id,e.target.value),className:\"mr-2\"}),option]},optionIndex))}),question.type==='multi-choice'&&/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2\",children:(_question$options2=question.options)===null||_question$options2===void 0?void 0:_question$options2.map((option,optionIndex)=>/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",value:option,checked:Array.isArray(value)&&value.includes(option),onChange:e=>{const currentValues=Array.isArray(value)?value:[];if(currentValues.includes(option)){handleInputChange(question.id,currentValues.filter(v=>v!==option));}else{handleInputChange(question.id,[...currentValues,option]);}},className:\"mr-2\"}),option]},optionIndex))}),question.type==='short-text'&&/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-input\",value:value||'',onChange:e=>handleInputChange(question.id,e.target.value),placeholder:\"Your answer\",maxLength:(_question$validation5=question.validation)===null||_question$validation5===void 0?void 0:_question$validation5.maxLength}),question.type==='long-text'&&/*#__PURE__*/_jsx(\"textarea\",{className:\"form-input\",value:value||'',onChange:e=>handleInputChange(question.id,e.target.value),placeholder:\"Your answer\",rows:4,maxLength:(_question$validation6=question.validation)===null||_question$validation6===void 0?void 0:_question$validation6.maxLength}),question.type==='numeric'&&/*#__PURE__*/_jsx(\"input\",{type:\"number\",className:\"form-input\",value:value||'',onChange:e=>handleInputChange(question.id,parseFloat(e.target.value)||''),placeholder:\"Your answer\",min:(_question$validation7=question.validation)===null||_question$validation7===void 0?void 0:_question$validation7.min,max:(_question$validation8=question.validation)===null||_question$validation8===void 0?void 0:_question$validation8.max}),question.type==='file-upload'&&/*#__PURE__*/_jsx(\"input\",{type:\"file\",className:\"form-input\",onChange:e=>{var _e$target$files;return handleInputChange(question.id,((_e$target$files=e.target.files)===null||_e$target$files===void 0?void 0:_e$target$files[0])||null);}})]}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-500 text-sm mt-1\",children:error})]},question.id);};const currentSectionData=assessment.sections[currentSection];const progress=(currentSection+1)/assessment.sections.length*100;return/*#__PURE__*/_jsxs(\"div\",{className:\"assessment-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-header mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold\",children:assessment.title}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:onClose,children:\"Close\"})]}),assessment.description&&/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mb-4\",children:assessment.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"progress-bar mb-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-bg\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-fill\",style:{width:\"\".concat(progress,\"%\")}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"progress-text\",children:[\"Section \",currentSection+1,\" of \",assessment.sections.length]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"section-header mb-6\",children:/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-semibold\",children:currentSectionData.title})}),/*#__PURE__*/_jsx(\"div\",{className:\"questions-list\",children:currentSectionData.questions.map(renderQuestion)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-footer mt-8\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:handlePrevious,disabled:currentSection===0,children:\"Previous\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex gap-2\",children:currentSection===assessment.sections.length-1?/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:handleSubmit,disabled:isSubmitting,children:isSubmitting?'Submitting...':'Submit Assessment'}):/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:handleNext,children:\"Next\"})})]})})]});};export default AssessmentForm;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","AssessmentForm","_ref","assessment","candidateId","onSubmit","onClose","responses","setResponses","errors","setErrors","currentSection","setCurrentSection","isSubmitting","setIsSubmitting","initialResponses","sections","forEach","section","questions","question","type","id","validateSection","sectionIndex","sectionErrors","isValid","_question$validation3","_question$validation4","value","required","Array","isArray","length","toString","trim","numValue","parseFloat","isNaN","_question$validation","_question$validation2","validation","min","undefined","concat","max","maxLength","handleInputChange","questionId","prev","_objectSpread","newErrors","handleNext","handlePrevious","handleSubmit","submission","Date","now","jobId","submittedAt","toISOString","error","console","alert","renderQuestion","_question$options","_question$options2","_question$validation5","_question$validation6","_question$validation7","_question$validation8","className","children","title","description","options","map","option","optionIndex","name","checked","onChange","e","target","includes","currentValues","filter","v","placeholder","rows","_e$target$files","files","currentSectionData","progress","onClick","style","width","disabled"],"sources":["C:/Users/shiva/Desktop/talentflow-mini-hiring-platform/TalentFlow/src/components/AssessmentForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Assessment, AssessmentSubmission } from '../types';\r\n\r\ninterface AssessmentFormProps {\r\n  assessment: Assessment;\r\n  candidateId: string;\r\n  onSubmit: (submission: AssessmentSubmission) => void;\r\n  onClose: () => void;\r\n}\r\n\r\nconst AssessmentForm: React.FC<AssessmentFormProps> = ({\r\n  assessment,\r\n  candidateId,\r\n  onSubmit,\r\n  onClose\r\n}) => {\r\n  const [responses, setResponses] = useState<Record<string, any>>({});\r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n  const [currentSection, setCurrentSection] = useState(0);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Initialize responses with default values\r\n    const initialResponses: Record<string, any> = {};\r\n    assessment.sections.forEach(section => {\r\n      section.questions.forEach(question => {\r\n        if (question.type === 'single-choice' || question.type === 'multi-choice') {\r\n          initialResponses[question.id] = question.type === 'multi-choice' ? [] : '';\r\n        } else if (question.type === 'numeric') {\r\n          initialResponses[question.id] = '';\r\n        } else {\r\n          initialResponses[question.id] = '';\r\n        }\r\n      });\r\n    });\r\n    setResponses(initialResponses);\r\n  }, [assessment]);\r\n\r\n  const validateSection = (sectionIndex: number): boolean => {\r\n    const section = assessment.sections[sectionIndex];\r\n    const sectionErrors: Record<string, string> = {};\r\n    let isValid = true;\r\n\r\n    section.questions.forEach(question => {\r\n      const value = responses[question.id];\r\n\r\n      // Check required fields\r\n      if (question.required) {\r\n        if (question.type === 'multi-choice' && (!Array.isArray(value) || value.length === 0)) {\r\n          sectionErrors[question.id] = 'This field is required';\r\n          isValid = false;\r\n        } else if (question.type !== 'multi-choice' && (!value || value.toString().trim() === '')) {\r\n          sectionErrors[question.id] = 'This field is required';\r\n          isValid = false;\r\n        }\r\n      }\r\n\r\n      // Type-specific validation\r\n      if (question.type === 'numeric' && value) {\r\n        const numValue = parseFloat(value);\r\n        if (isNaN(numValue)) {\r\n          sectionErrors[question.id] = 'Please enter a valid number';\r\n          isValid = false;\r\n        } else {\r\n          if (question.validation?.min !== undefined && numValue < question.validation.min) {\r\n            sectionErrors[question.id] = `Value must be at least ${question.validation.min}`;\r\n            isValid = false;\r\n          }\r\n          if (question.validation?.max !== undefined && numValue > question.validation.max) {\r\n            sectionErrors[question.id] = `Value must be at most ${question.validation.max}`;\r\n            isValid = false;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (question.type === 'short-text' && question.validation?.maxLength && value.length > question.validation.maxLength) {\r\n        sectionErrors[question.id] = `Maximum ${question.validation.maxLength} characters allowed`;\r\n        isValid = false;\r\n      }\r\n\r\n      if (question.type === 'long-text' && question.validation?.maxLength && value.length > question.validation.maxLength) {\r\n        sectionErrors[question.id] = `Maximum ${question.validation.maxLength} characters allowed`;\r\n        isValid = false;\r\n      }\r\n    });\r\n\r\n    setErrors(sectionErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const handleInputChange = (questionId: string, value: any) => {\r\n    setResponses(prev => ({\r\n      ...prev,\r\n      [questionId]: value\r\n    }));\r\n\r\n    // Clear error for this field\r\n    if (errors[questionId]) {\r\n      setErrors(prev => {\r\n        const newErrors = { ...prev };\r\n        delete newErrors[questionId];\r\n        return newErrors;\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (validateSection(currentSection)) {\r\n      if (currentSection < assessment.sections.length - 1) {\r\n        setCurrentSection(currentSection + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (currentSection > 0) {\r\n      setCurrentSection(currentSection - 1);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!validateSection(currentSection)) {\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n\r\n    try {\r\n      const submission: AssessmentSubmission = {\r\n        id: `submission-${Date.now()}`,\r\n        jobId: assessment.jobId,\r\n        candidateId,\r\n        responses,\r\n        submittedAt: new Date().toISOString()\r\n      };\r\n\r\n      await onSubmit(submission);\r\n    } catch (error) {\r\n      console.error('Error submitting assessment:', error);\r\n      alert('Failed to submit assessment. Please try again.');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const renderQuestion = (question: any) => {\r\n    const value = responses[question.id];\r\n    const error = errors[question.id];\r\n\r\n    return (\r\n      <div key={question.id} className=\"question-item mb-6\">\r\n        <div className=\"question-header mb-3\">\r\n          <h4 className=\"font-medium text-gray-900\">\r\n            {question.title}\r\n            {question.required && <span className=\"text-red-500 ml-1\">*</span>}\r\n          </h4>\r\n          {question.description && (\r\n            <p className=\"text-sm text-gray-600 mt-1\">{question.description}</p>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"question-input\">\r\n          {question.type === 'single-choice' && (\r\n            <div className=\"space-y-2\">\r\n              {question.options?.map((option: string, optionIndex: number) => (\r\n                <label key={optionIndex} className=\"flex items-center\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name={question.id}\r\n                    value={option}\r\n                    checked={value === option}\r\n                    onChange={(e) => handleInputChange(question.id, e.target.value)}\r\n                    className=\"mr-2\"\r\n                  />\r\n                  {option}\r\n                </label>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          {question.type === 'multi-choice' && (\r\n            <div className=\"space-y-2\">\r\n              {question.options?.map((option: string, optionIndex: number) => (\r\n                <label key={optionIndex} className=\"flex items-center\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    value={option}\r\n                    checked={Array.isArray(value) && value.includes(option)}\r\n                    onChange={(e) => {\r\n                      const currentValues = Array.isArray(value) ? value : [];\r\n                      if (currentValues.includes(option)) {\r\n                        handleInputChange(question.id, currentValues.filter(v => v !== option));\r\n                      } else {\r\n                        handleInputChange(question.id, [...currentValues, option]);\r\n                      }\r\n                    }}\r\n                    className=\"mr-2\"\r\n                  />\r\n                  {option}\r\n                </label>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          {question.type === 'short-text' && (\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-input\"\r\n              value={value || ''}\r\n              onChange={(e) => handleInputChange(question.id, e.target.value)}\r\n              placeholder=\"Your answer\"\r\n              maxLength={question.validation?.maxLength}\r\n            />\r\n          )}\r\n\r\n          {question.type === 'long-text' && (\r\n            <textarea\r\n              className=\"form-input\"\r\n              value={value || ''}\r\n              onChange={(e) => handleInputChange(question.id, e.target.value)}\r\n              placeholder=\"Your answer\"\r\n              rows={4}\r\n              maxLength={question.validation?.maxLength}\r\n            />\r\n          )}\r\n\r\n          {question.type === 'numeric' && (\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-input\"\r\n              value={value || ''}\r\n              onChange={(e) => handleInputChange(question.id, parseFloat(e.target.value) || '')}\r\n              placeholder=\"Your answer\"\r\n              min={question.validation?.min}\r\n              max={question.validation?.max}\r\n            />\r\n          )}\r\n\r\n          {question.type === 'file-upload' && (\r\n            <input\r\n              type=\"file\"\r\n              className=\"form-input\"\r\n              onChange={(e) => handleInputChange(question.id, e.target.files?.[0] || null)}\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        {error && (\r\n          <p className=\"text-red-500 text-sm mt-1\">{error}</p>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const currentSectionData = assessment.sections[currentSection];\r\n  const progress = ((currentSection + 1) / assessment.sections.length) * 100;\r\n\r\n  return (\r\n    <div className=\"assessment-form\">\r\n      <div className=\"form-header mb-6\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h2 className=\"text-2xl font-bold\">{assessment.title}</h2>\r\n          <button className=\"btn btn-secondary\" onClick={onClose}>\r\n            Close\r\n          </button>\r\n        </div>\r\n\r\n        {assessment.description && (\r\n          <p className=\"text-gray-600 mb-4\">{assessment.description}</p>\r\n        )}\r\n\r\n        <div className=\"progress-bar mb-4\">\r\n          <div className=\"progress-bg\">\r\n            <div\r\n              className=\"progress-fill\"\r\n              style={{ width: `${progress}%` }}\r\n            />\r\n          </div>\r\n          <div className=\"progress-text\">\r\n            Section {currentSection + 1} of {assessment.sections.length}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-content\">\r\n        <div className=\"section-header mb-6\">\r\n          <h3 className=\"text-xl font-semibold\">{currentSectionData.title}</h3>\r\n        </div>\r\n\r\n        <div className=\"questions-list\">\r\n          {currentSectionData.questions.map(renderQuestion)}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-footer mt-8\">\r\n        <div className=\"flex justify-between\">\r\n          <button\r\n            className=\"btn btn-secondary\"\r\n            onClick={handlePrevious}\r\n            disabled={currentSection === 0}\r\n          >\r\n            Previous\r\n          </button>\r\n\r\n          <div className=\"flex gap-2\">\r\n            {currentSection === assessment.sections.length - 1 ? (\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={handleSubmit}\r\n                disabled={isSubmitting}\r\n              >\r\n                {isSubmitting ? 'Submitting...' : 'Submit Assessment'}\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={handleNext}\r\n              >\r\n                Next\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AssessmentForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}