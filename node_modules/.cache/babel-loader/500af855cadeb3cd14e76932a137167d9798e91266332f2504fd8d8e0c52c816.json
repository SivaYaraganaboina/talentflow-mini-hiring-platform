{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\Desktop\\\\talentflow-mini-hiring-platform\\\\TalentFlow\\\\src\\\\index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/main.css';\n\n// Initialize MSW in development\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function initializeApp() {\n  if (process.env.NODE_ENV === 'development') {\n    try {\n      const {\n        worker\n      } = await import('./services/mockApi');\n      await worker.start({\n        onUnhandledRequest: 'bypass',\n        serviceWorker: {\n          url: '/mockServiceWorker.js'\n        }\n      });\n      console.log('MSW worker started successfully');\n    } catch (error) {\n      console.error('Failed to start MSW worker:', error);\n    }\n  }\n  ReactDOM.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this), document.getElementById('root'));\n}\ninitializeApp();","map":{"version":3,"names":["React","ReactDOM","App","jsxDEV","_jsxDEV","initializeApp","process","env","NODE_ENV","worker","start","onUnhandledRequest","serviceWorker","url","console","log","error","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","document","getElementById"],"sources":["C:/Users/shiva/Desktop/talentflow-mini-hiring-platform/TalentFlow/src/index.tsx"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/main.css';\n\n// Initialize MSW in development\nasync function initializeApp() {\n  if (process.env.NODE_ENV === 'development') {\n    try {\n      const { worker } = await import('./services/mockApi');\n      await worker.start({\n        onUnhandledRequest: 'bypass',\n        serviceWorker: {\n          url: '/mockServiceWorker.js'\n        }\n      });\n      console.log('MSW worker started successfully');\n    } catch (error) {\n      console.error('Failed to start MSW worker:', error);\n    }\n  }\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\ninitializeApp();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAO,mBAAmB;;AAE1B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAeC,aAAaA,CAAA,EAAG;EAC7B,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;IAC1C,IAAI;MACF,MAAM;QAAEC;MAAO,CAAC,GAAG,MAAM,MAAM,CAAC,oBAAoB,CAAC;MACrD,MAAMA,MAAM,CAACC,KAAK,CAAC;QACjBC,kBAAkB,EAAE,QAAQ;QAC5BC,aAAa,EAAE;UACbC,GAAG,EAAE;QACP;MACF,CAAC,CAAC;MACFC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAChD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF;EAEAf,QAAQ,CAACgB,MAAM,cACbb,OAAA,CAACJ,KAAK,CAACkB,UAAU;IAAAC,QAAA,eACff,OAAA,CAACF,GAAG;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC,EACnBC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC;AACH;AAEApB,aAAa,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}