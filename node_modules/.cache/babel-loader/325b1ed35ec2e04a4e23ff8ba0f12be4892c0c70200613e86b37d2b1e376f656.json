{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\Desktop\\\\talentflow-mini-hiring-platform\\\\TalentFlow\\\\src\\\\pages\\\\JobDetail.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport JobModal from '../components/JobModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobDetail = () => {\n  _s();\n  const {\n    jobId\n  } = useParams();\n  const navigate = useNavigate();\n  const [job, setJob] = useState(null);\n  const [candidates, setCandidates] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const isMountedRef = useRef(true);\n  useEffect(() => {\n    if (jobId) {\n      loadJob();\n      loadCandidatesForJob();\n    }\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, [jobId]);\n  const loadJob = async () => {\n    try {\n      const response = await fetch(`/api/jobs/${jobId}`);\n      if (!response.ok) throw new Error('Failed to load job');\n      const data = await response.json();\n      setJob(data.data);\n    } catch (error) {\n      console.error('Error loading job:', error);\n    }\n  };\n  const loadCandidatesForJob = async () => {\n    try {\n      const response = await fetch(`/api/candidates?jobId=${jobId}&page=1&pageSize=100`);\n      if (!response.ok) throw new Error('Failed to load candidates');\n      const data = await response.json();\n      setCandidates(data.data);\n    } catch (error) {\n      console.error('Error loading candidates:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getStageBadge = stage => {\n    const badgeClasses = {\n      applied: 'badge-info',\n      screen: 'badge-warning',\n      tech: 'badge-warning',\n      offer: 'badge-success',\n      hired: 'badge-success',\n      rejected: 'badge-danger'\n    };\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `badge ${badgeClasses[stage] || 'badge-info'}`,\n      children: stage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this);\n  };\n  const getStatusBadge = status => {\n    const badgeClass = status === 'active' ? 'badge-success' : 'badge-warning';\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `badge ${badgeClass}`,\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }, this);\n  };\n  const handleEditJob = async jobData => {\n    if (!job) return;\n    try {\n      const response = await fetch(`/api/jobs/${job.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(jobData)\n      });\n      if (!response.ok) throw new Error('Failed to update job');\n      setShowEditModal(false);\n      loadJob(); // Reload job data\n    } catch (error) {\n      console.error('Error updating job:', error);\n      alert('Failed to update job. Please try again.');\n    }\n  };\n  const handleCreateAssessment = () => {\n    // Navigate to assessments page with job pre-selected\n    navigate(`/assessments?jobId=${job === null || job === void 0 ? void 0 : job.id}`);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading job details...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n  if (!job) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Job Not Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"The job you're looking for doesn't exist.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/jobs\",\n          className: \"btn btn-primary\",\n          children: \"Back to Jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  }\n  const candidatesByStage = candidates.reduce((acc, candidate) => {\n    if (!acc[candidate.stage]) {\n      acc[candidate.stage] = [];\n    }\n    acc[candidate.stage].push(candidate);\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/jobs\",\n        className: \"btn btn-secondary mb-4\",\n        children: \"\\u2190 Back to Jobs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-start\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-3xl font-bold mb-2\",\n              children: job.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-4 mb-4\",\n              children: [getStatusBadge(job.status), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-600\",\n                children: [\"\\uD83D\\uDCCD \", job.location]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-600\",\n                children: [\"\\uD83D\\uDCC5 Posted \", new Date(job.createdAt).toLocaleDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: () => setShowEditModal(true),\n              children: \"Edit Job\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: handleCreateAssessment,\n              children: \"Create Assessment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold mb-3\",\n          children: \"Job Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-700 leading-relaxed\",\n          children: job.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold mb-3\",\n          children: \"Tags\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-2 flex-wrap\",\n          children: job.tags.map(tag => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge badge-info\",\n            children: tag\n          }, tag, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-t pt-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-xl font-semibold\",\n              children: \"Candidates\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600\",\n              children: [candidates.length, \" total candidates\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/candidates?jobId=${job.id}`,\n            className: \"btn btn-primary\",\n            children: \"View All Candidates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-2 gap-6\",\n      children: Object.entries(candidatesByStage).map(([stage, stageCandidates]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"card-title flex items-center gap-2\",\n            children: [getStageBadge(stage), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-lg\",\n              children: [stage.charAt(0).toUpperCase() + stage.slice(1), \" (\", stageCandidates.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-3\",\n          children: [stageCandidates.slice(0, 5).map(candidate => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center p-3 border rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"font-semibold\",\n                children: candidate.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-600\",\n                children: candidate.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/candidates/${candidate.id}`,\n              className: \"btn btn-secondary btn-sm\",\n              children: \"View Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this)]\n          }, candidate.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this)), stageCandidates.length > 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center p-3 text-gray-600\",\n            children: [\"And \", stageCandidates.length - 5, \" more candidates...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 17\n          }, this), stageCandidates.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center p-6 text-gray-500\",\n            children: \"No candidates in this stage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)]\n      }, stage, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), Object.keys(candidatesByStage).length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card text-center p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold mb-2\",\n        children: \"No Candidates Yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 mb-4\",\n        children: \"No candidates have applied for this job yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/candidates?jobId=${job.id}`,\n        className: \"btn btn-primary\",\n        children: \"Manage Candidates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }, this), showEditModal && job && /*#__PURE__*/_jsxDEV(JobModal, {\n      onSave: handleEditJob,\n      onClose: () => setShowEditModal(false),\n      existingJob: {\n        title: job.title,\n        description: job.description,\n        location: job.location,\n        tags: job.tags\n      },\n      existingSlugs: [] // Not needed for editing existing job\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(JobDetail, \"SD9tl/JT03NWloTrQBje7Sng2Ww=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = JobDetail;\nexport default JobDetail;\nvar _c;\n$RefreshReg$(_c, \"JobDetail\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","Link","useNavigate","JobModal","jsxDEV","_jsxDEV","JobDetail","_s","jobId","navigate","job","setJob","candidates","setCandidates","loading","setLoading","showEditModal","setShowEditModal","isMountedRef","loadJob","loadCandidatesForJob","current","response","fetch","ok","Error","data","json","error","console","getStageBadge","stage","badgeClasses","applied","screen","tech","offer","hired","rejected","className","children","fileName","_jsxFileName","lineNumber","columnNumber","getStatusBadge","status","badgeClass","handleEditJob","jobData","id","method","headers","body","JSON","stringify","alert","handleCreateAssessment","to","candidatesByStage","reduce","acc","candidate","push","title","location","Date","createdAt","toLocaleDateString","onClick","description","tags","map","tag","length","Object","entries","stageCandidates","charAt","toUpperCase","slice","name","email","keys","onSave","onClose","existingJob","existingSlugs","_c","$RefreshReg$"],"sources":["C:/Users/shiva/Desktop/talentflow-mini-hiring-platform/TalentFlow/src/pages/JobDetail.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams, Link, useNavigate } from 'react-router-dom';\r\nimport { Job, Candidate, ApiResponse } from '../types';\r\nimport JobModal from '../components/JobModal';\r\n\r\nconst JobDetail: React.FC = () => {\r\n  const { jobId } = useParams<{ jobId: string }>();\r\n  const navigate = useNavigate();\r\n  const [job, setJob] = useState<Job | null>(null);\r\n  const [candidates, setCandidates] = useState<Candidate[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const isMountedRef = useRef(true);\r\n\r\n  useEffect(() => {\r\n    if (jobId) {\r\n      loadJob();\r\n      loadCandidatesForJob();\r\n    }\r\n\r\n    return () => {\r\n      isMountedRef.current = false;\r\n    };\r\n  }, [jobId]);\r\n\r\n  const loadJob = async () => {\r\n    try {\r\n      const response = await fetch(`/api/jobs/${jobId}`);\r\n      if (!response.ok) throw new Error('Failed to load job');\r\n\r\n      const data = await response.json();\r\n      setJob(data.data);\r\n    } catch (error) {\r\n      console.error('Error loading job:', error);\r\n    }\r\n  };\r\n\r\n  const loadCandidatesForJob = async () => {\r\n    try {\r\n      const response = await fetch(`/api/candidates?jobId=${jobId}&page=1&pageSize=100`);\r\n      if (!response.ok) throw new Error('Failed to load candidates');\r\n\r\n      const data: ApiResponse<Candidate[]> = await response.json();\r\n      setCandidates(data.data);\r\n    } catch (error) {\r\n      console.error('Error loading candidates:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getStageBadge = (stage: string) => {\r\n    const badgeClasses = {\r\n      applied: 'badge-info',\r\n      screen: 'badge-warning',\r\n      tech: 'badge-warning',\r\n      offer: 'badge-success',\r\n      hired: 'badge-success',\r\n      rejected: 'badge-danger'\r\n    };\r\n    return <span className={`badge ${badgeClasses[stage as keyof typeof badgeClasses] || 'badge-info'}`}>{stage}</span>;\r\n  };\r\n\r\n  const getStatusBadge = (status: string) => {\r\n    const badgeClass = status === 'active' ? 'badge-success' : 'badge-warning';\r\n    return <span className={`badge ${badgeClass}`}>{status}</span>;\r\n  };\r\n\r\n  const handleEditJob = async (jobData: { title: string; description: string; location: string; tags: string[] }) => {\r\n    if (!job) return;\r\n\r\n    try {\r\n      const response = await fetch(`/api/jobs/${job.id}`, {\r\n        method: 'PATCH',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(jobData)\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Failed to update job');\r\n\r\n      setShowEditModal(false);\r\n      loadJob(); // Reload job data\r\n    } catch (error) {\r\n      console.error('Error updating job:', error);\r\n      alert('Failed to update job. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleCreateAssessment = () => {\r\n    // Navigate to assessments page with job pre-selected\r\n    navigate(`/assessments?jobId=${job?.id}`);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"loading\">\r\n          <div className=\"spinner\"></div>\r\n          <p>Loading job details...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!job) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"text-center p-6\">\r\n          <h2>Job Not Found</h2>\r\n          <p>The job you're looking for doesn't exist.</p>\r\n          <Link to=\"/jobs\" className=\"btn btn-primary\">Back to Jobs</Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const candidatesByStage = candidates.reduce((acc, candidate) => {\r\n    if (!acc[candidate.stage]) {\r\n      acc[candidate.stage] = [];\r\n    }\r\n    acc[candidate.stage].push(candidate);\r\n    return acc;\r\n  }, {} as Record<string, Candidate[]>);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"mb-6\">\r\n        <Link to=\"/jobs\" className=\"btn btn-secondary mb-4\">← Back to Jobs</Link>\r\n      </div>\r\n\r\n      <div className=\"card mb-6\">\r\n        <div className=\"card-header\">\r\n          <div className=\"flex justify-between items-start\">\r\n            <div>\r\n              <h1 className=\"text-3xl font-bold mb-2\">{job.title}</h1>\r\n              <div className=\"flex items-center gap-4 mb-4\">\r\n                {getStatusBadge(job.status)}\r\n                <span className=\"text-gray-600\">📍 {job.location}</span>\r\n                <span className=\"text-gray-600\">📅 Posted {new Date(job.createdAt).toLocaleDateString()}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex gap-2\">\r\n              <button className=\"btn btn-primary\" onClick={() => setShowEditModal(true)}>Edit Job</button>\r\n              <button className=\"btn btn-secondary\" onClick={handleCreateAssessment}>Create Assessment</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mb-6\">\r\n          <h3 className=\"text-xl font-semibold mb-3\">Job Description</h3>\r\n          <p className=\"text-gray-700 leading-relaxed\">{job.description}</p>\r\n        </div>\r\n\r\n        <div className=\"mb-6\">\r\n          <h3 className=\"text-xl font-semibold mb-3\">Tags</h3>\r\n          <div className=\"flex gap-2 flex-wrap\">\r\n            {job.tags.map(tag => (\r\n              <span key={tag} className=\"badge badge-info\">{tag}</span>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"border-t pt-6\">\r\n          <div className=\"flex justify-between items-center\">\r\n            <div>\r\n              <h3 className=\"text-xl font-semibold\">Candidates</h3>\r\n              <p className=\"text-gray-600\">{candidates.length} total candidates</p>\r\n            </div>\r\n            <Link to={`/candidates?jobId=${job.id}`} className=\"btn btn-primary\">\r\n              View All Candidates\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-2 gap-6\">\r\n        {Object.entries(candidatesByStage).map(([stage, stageCandidates]) => (\r\n          <div key={stage} className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h3 className=\"card-title flex items-center gap-2\">\r\n                {getStageBadge(stage)}\r\n                <span className=\"text-lg\">\r\n                  {stage.charAt(0).toUpperCase() + stage.slice(1)} ({stageCandidates.length})\r\n                </span>\r\n              </h3>\r\n            </div>\r\n\r\n            <div className=\"space-y-3\">\r\n              {stageCandidates.slice(0, 5).map(candidate => (\r\n                <div key={candidate.id} className=\"flex justify-between items-center p-3 border rounded\">\r\n                  <div>\r\n                    <h4 className=\"font-semibold\">{candidate.name}</h4>\r\n                    <p className=\"text-sm text-gray-600\">{candidate.email}</p>\r\n                  </div>\r\n                  <Link\r\n                    to={`/candidates/${candidate.id}`}\r\n                    className=\"btn btn-secondary btn-sm\"\r\n                  >\r\n                    View Profile\r\n                  </Link>\r\n                </div>\r\n              ))}\r\n\r\n              {stageCandidates.length > 5 && (\r\n                <div className=\"text-center p-3 text-gray-600\">\r\n                  And {stageCandidates.length - 5} more candidates...\r\n                </div>\r\n              )}\r\n\r\n              {stageCandidates.length === 0 && (\r\n                <div className=\"text-center p-6 text-gray-500\">\r\n                  No candidates in this stage\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {Object.keys(candidatesByStage).length === 0 && (\r\n        <div className=\"card text-center p-6\">\r\n          <h3 className=\"text-xl font-semibold mb-2\">No Candidates Yet</h3>\r\n          <p className=\"text-gray-600 mb-4\">\r\n            No candidates have applied for this job yet.\r\n          </p>\r\n          <Link to={`/candidates?jobId=${job.id}`} className=\"btn btn-primary\">\r\n            Manage Candidates\r\n          </Link>\r\n        </div>\r\n      )}\r\n\r\n      {/* Edit Job Modal */}\r\n      {showEditModal && job && (\r\n        <JobModal\r\n          onSave={handleEditJob}\r\n          onClose={() => setShowEditModal(false)}\r\n          existingJob={{\r\n            title: job.title,\r\n            description: job.description,\r\n            location: job.location,\r\n            tags: job.tags,\r\n          }}\r\n          existingSlugs={[]} // Not needed for editing existing job\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}