{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // src/getRawRequest.ts\nvar kRawRequest = Symbol(\"kRawRequest\");\nfunction getRawRequest(request) {\n  return Reflect.get(request, kRawRequest);\n}\nfunction setRawRequest(request, rawRequest) {\n  Reflect.set(request, kRawRequest, rawRequest);\n}\nexports.getRawRequest = getRawRequest;\nexports.setRawRequest = setRawRequest;","map":{"version":3,"names":["kRawRequest","Symbol","getRawRequest","request","Reflect","get","setRawRequest","rawRequest","set"],"sources":["../../src/getRawRequest.ts"],"sourcesContent":["const kRawRequest = Symbol('kRawRequest')\n\n/**\n * Returns a raw request instance associated with this request.\n *\n * @example\n * interceptor.on('request', ({ request }) => {\n *   const rawRequest = getRawRequest(request)\n *\n *   if (rawRequest instanceof http.ClientRequest) {\n *     console.log(rawRequest.rawHeaders)\n *   }\n * })\n */\nexport function getRawRequest(request: Request): unknown | undefined {\n  return Reflect.get(request, kRawRequest)\n}\n\nexport function setRawRequest(request: Request, rawRequest: unknown): void {\n  Reflect.set(request, kRawRequest, rawRequest)\n}\n"],"mappings":";;;;;AAAA,IAAMA,WAAA,GAAcC,MAAA,CAAO,aAAa;AAcjC,SAASC,cAAcC,OAAA,EAAuC;EACnE,OAAOC,OAAA,CAAQC,GAAA,CAAIF,OAAA,EAASH,WAAW;AACzC;AAEO,SAASM,cAAcH,OAAA,EAAkBI,UAAA,EAA2B;EACzEH,OAAA,CAAQI,GAAA,CAAIL,OAAA,EAASH,WAAA,EAAaO,UAAU;AAC9C","ignoreList":[]},"metadata":{},"sourceType":"script"}